Revision history for Future-AsyncAwait

0.07    2017/07/11 23:26:48
        [CHANGES]
         * Forbid the use of 'await' outside of 'async sub'
         * Handle CXt_BLOCK contexts
         * Handle SAVEt_CLEARSV and SAVEt_CLEARPADRANGE savestack entries
         * Further documentation rework

        [BUGFIXES]
         * Fix off-by-one error on reading the savestack, resulting in a
           number of false-"TODO" failures being fixed
         * Fix parser logic for parenthesized 'await( ... )' expressions

0.06    2017/06/29 17:43:19
        [CHANGES]
         * Support suspend/resume within while loops and plain loop blocks
         * Import the syntax keywords by default, rather than having to
           request them as an import symbol
         * Added some initial documentation to explain the new syntax

        [BUGFIXES]
         * Declare (for now) dependency on perl 5.24 to prevent older versions
           from attempting it and failing. We hope to support older versions
           back to 5.14 in due course.

0.05    2017/06/27 15:20:54
        [BUGFIXES]
         * Fix await op so it can await multiple times within the same sub

0.04    2017/06/06 18:42:15
        [CHANGES]
         * Suspend and resume the PAD around an await so lexical variables are
           preserved
         * Ensure that anon async subs can suspend/resume - see also
             https://rt.perl.org/Public/Bug/Display.html?id=131519
        
        [BUGFIXES]
         * Ensure MARK stack doesn't upset debugperl

0.03    2017/05/08 21:33:46
        [CHANGES]
         * Handle the value and mark stacks around suspend/await, allowing
           some stack temporaries to be preserved
         * Avoid naming internal functions "Perl_..."

        [BUGFIXES]
         * Ensure that die after await is still caught
         * Avoid C++-style comments and C99-style for() loop variable declarations
           (RT121569)

0.02    2017/05/08 16:55:38
        [CHANGES]
         * Initial tiny implementation of actual suspend/resume on 'await'
