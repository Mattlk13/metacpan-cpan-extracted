

__END__

=pod

=encoding UTF-8

=head1 NAME

File::Find::Object::Rule::Procedural - File::Find::Object::Rule's procedural interface

=head1 VERSION

version 0.0310

=head1 SYNOPSIS

  use File::Find::Object::Rule;

  # find all .pm files, procedurally
  my @files = find(file => name => '*.pm', in => \@INC);

=head1 DESCRIPTION

In addition to the regular object-oriented interface,
L<File::Find::Object::Rule> provides two subroutines for you to use.

=over

=item C<find( @clauses )>

=item C<rule( @clauses )>

C<find> and C<rule> can be used to invoke any methods available to the
OO version.  C<rule> is a synonym for C<find>

=back

Passing more than one value to a clause is done with an anonymous
array:

 my $finder = find( name => [ '*.mp3', '*.ogg' ] );

C<find> and C<rule> both return a File::Find::Object::Rule instance, unless
one of the arguments is C<in>, in which case it returns a list of
things that match the rule.

 my @files = find( name => [ '*.mp3', '*.ogg' ], in => $ENV{HOME} );

Please note that C<in> will be the last clause evaluated, and so this
code will search for mp3s regardless of size.

 my @files = find( name => '*.mp3', in => $ENV{HOME}, size => '<2k' );
                                                    ^
                                                    |
               Clause processing stopped here ------/

It is also possible to invert a single rule by prefixing it with C<!>
like so:

 # large files that aren't videos
 my @files = find( file    =>
                   '!name' => [ '*.avi', '*.mov' ],
                   size    => '>20M',
                   in      => $ENV{HOME} );

=head1 VERSION

version 0.0310

=head1 AUTHOR

Richard Clamp <richardc@unixbeard.net>

=head1 COPYRIGHT

Copyright (C) 2003 Richard Clamp.  All Rights Reserved.

This module is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.

=head1 SEE ALSO

L<File::Find::Object::Rule>

=head1 AUTHORS

=over 4

=item *

Richard Clamp <richardc@unixbeard.net> with input gained from this

=item *

and Andy Lester andy@petdance.com.

=back

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2019 by Richard Clampwith input gained from this.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=head1 BUGS

Please report any bugs or feature requests on the bugtracker website
L<https://github.com/shlomif/file-find-object-rule/issues>

When submitting a bug or request, please include a test-file or a
patch to an existing test-file that illustrates the bug or desired
feature.

=for :stopwords cpan testmatrix url annocpan anno bugtracker rt cpants kwalitee diff irc mailto metadata placeholders metacpan

=head1 SUPPORT

=head2 Websites

The following websites have more information about this module, and may be of help to you. As always,
in addition to those websites please use your favorite search engine to discover more resources.

=over 4

=item *

MetaCPAN

A modern, open-source CPAN search engine, useful to view POD in HTML format.

L<https://metacpan.org/release/File-Find-Object-Rule>

=item *

Search CPAN

The default CPAN search engine, useful to view POD in HTML format.

L<http://search.cpan.org/dist/File-Find-Object-Rule>

=item *

RT: CPAN's Bug Tracker

The RT ( Request Tracker ) website is the default bug/issue tracking system for CPAN.

L<https://rt.cpan.org/Public/Dist/Display.html?Name=File-Find-Object-Rule>

=item *

AnnoCPAN

The AnnoCPAN is a website that allows community annotations of Perl module documentation.

L<http://annocpan.org/dist/File-Find-Object-Rule>

=item *

CPAN Ratings

The CPAN Ratings is a website that allows community ratings and reviews of Perl modules.

L<http://cpanratings.perl.org/d/File-Find-Object-Rule>

=item *

CPANTS

The CPANTS is a website that analyzes the Kwalitee ( code metrics ) of a distribution.

L<http://cpants.cpanauthors.org/dist/File-Find-Object-Rule>

=item *

CPAN Testers

The CPAN Testers is a network of smoke testers who run automated tests on uploaded CPAN distributions.

L<http://www.cpantesters.org/distro/F/File-Find-Object-Rule>

=item *

CPAN Testers Matrix

The CPAN Testers Matrix is a website that provides a visual overview of the test results for a distribution on various Perls/platforms.

L<http://matrix.cpantesters.org/?dist=File-Find-Object-Rule>

=item *

CPAN Testers Dependencies

The CPAN Testers Dependencies is a website that shows a chart of the test results of all dependencies for a distribution.

L<http://deps.cpantesters.org/?module=File::Find::Object::Rule>

=back

=head2 Bugs / Feature Requests

Please report any bugs or feature requests by email to C<bug-file-find-object-rule at rt.cpan.org>, or through
the web interface at L<https://rt.cpan.org/Public/Bug/Report.html?Queue=File-Find-Object-Rule>. You will be automatically notified of any
progress on the request by the system.

=head2 Source Code

The code is open to the world, and available for you to hack on. Please feel free to browse it and play
with it, or whatever. If you want to contribute patches, please send me a diff or prod me to pull
from your repository :)

L<https://github.com/shlomif/file-find-object-rule>

  git clone http://bitbucket.org/shlomif/perl-file-find-object-rule

=cut
