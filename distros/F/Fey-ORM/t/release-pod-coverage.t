#!perl

BEGIN {
  unless ($ENV{RELEASE_TESTING}) {
    require Test::More;
    Test::More::plan(skip_all => 'these tests are for release candidate testing');
  }
}

# This file was automatically generated by Dist::Zilla::Plugin::Test::Pod::Coverage::Configurable.

use Test::Pod::Coverage 1.08;
use Test::More 0.88;

BEGIN {
    if ( $] <= 5.008008 ) {
        plan skip_all => 'These tests require Pod::Coverage::TrustPod, which only works with Perl 5.8.9+';
    }
}
use Pod::Coverage::TrustPod;

my %skip = map { $_ => 1 } qw( Fey::Hash::ColumnsKey Fey::Meta::Method::Constructor Fey::Meta::Role::FromSelect Fey::Meta::Role::Relationship::ViaFK );

my @modules;
for my $module ( all_modules() ) {
    next if $skip{$module};

    push @modules, $module;
}

plan skip_all => 'All the modules we found were excluded from POD coverage test.'
    unless @modules;

plan tests => scalar @modules;

my %trustme = (
             'Fey::ORM::Schema' => [
                                   qr/^init_meta$/
                                 ],
             'Fey::Object::Iterator::FromSelect' => [
                                                    qr/^BUILD/
                                                  ],
             'Fey::Meta::Method::FromSelect' => [
                                                qr/^new$/
                                              ],
             'Fey::ORM::Table' => [
                                  qr/^init_meta$/
                                ],
             'Fey::Object::Table' => [
                                     qr/^BUILD/
                                   ]
           );

my @also_private;

for my $module ( sort @modules ) {
    pod_coverage_ok(
        $module,
        {
            coverage_class => 'Pod::Coverage::TrustPod',
            also_private   => \@also_private,
            trustme        => $trustme{$module} || [],
        },
        "pod coverage for $module"
    );
}

done_testing();
