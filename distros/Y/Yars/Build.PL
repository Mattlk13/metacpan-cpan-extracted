use strict; use warnings;
BEGIN {
  unless(eval q{ use 5.010001; 1}) {
    print "Perl 5.010001 or better required\n";
    exit;
  }
}

# This file was automatically generated by Dist::Zilla::Plugin::ModuleBuild v6.008.
use strict;
use warnings;

use Module::Build 0.28;
use lib qw{inc}; use My::ModuleBuild;

my %module_build_args = (
  "build_requires" => {
    "Module::Build" => "0.28"
  },
  "configure_requires" => {
    "Module::Build" => "0.28",
    "perl" => "5.010001"
  },
  "dist_abstract" => "Yet Another RESTful-Archive Service",
  "dist_author" => [
    "Graham Ollis <plicease\@cpan.org>"
  ],
  "dist_name" => "Yars",
  "dist_version" => "1.27",
  "license" => "perl",
  "module_name" => "Yars",
  "recommends" => {
    "Cpanel::JSON::XS" => 0,
    "EV" => 0
  },
  "recursive_test_files" => 1,
  "requires" => {
    "Clustericious" => "1.20",
    "File::Find::Rule" => 0,
    "File::HomeDir" => "0.91",
    "Hash::MoreUtils" => 0,
    "IO::Uncompress::Gunzip" => 0,
    "JSON::MaybeXS" => 0,
    "List::MoreUtils" => 0,
    "Log::Log4perl" => 0,
    "Number::Bytes::Human" => "0.09",
    "Path::Class" => "0.26",
    "YAML::XS" => 0,
    "perl" => "5.010001"
  },
  "script_files" => [
    "bin/yars",
    "bin/yars_balance",
    "bin/yars_disk_scan",
    "bin/yars_fast_balance",
    "bin/yars_generate_diskmap",
    "bin/yarsclient"
  ],
  "test_requires" => {
    "Capture::Tiny" => 0,
    "Data::Hexdumper" => 0,
    "Monkey::Patch" => 0,
    "Test::Clustericious::Cluster" => "0.28",
    "Test::More" => "0.94",
    "perl" => "5.010001"
  }
);


my %fallback_build_requires = (
  "Capture::Tiny" => 0,
  "Data::Hexdumper" => 0,
  "Module::Build" => "0.28",
  "Monkey::Patch" => 0,
  "Test::Clustericious::Cluster" => "0.28",
  "Test::More" => "0.94",
  "perl" => "5.010001"
);


unless ( eval { Module::Build->VERSION(0.4004) } ) {
  delete $module_build_args{test_requires};
  $module_build_args{build_requires} = \%fallback_build_requires;
}

my $build = My::ModuleBuild->new(%module_build_args);


$build->create_build_script;
