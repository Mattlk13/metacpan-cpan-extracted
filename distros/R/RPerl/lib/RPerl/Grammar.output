Conflicts:
----------
Conflict in state 162 between rule 94 and token OP04_MATH_POW resolved as reduce.
Conflict in state 162 between rule 94 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 162 between rule 94 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 162 between rule 94 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 162 between rule 94 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 162 between rule 94 and token OP18_TERNARY resolved as reduce.
Conflict in state 162 between rule 94 and token OP06_REGEX_BIND resolved as reduce.
Conflict in state 162 between rule 94 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 162 between rule 94 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 162 between rule 94 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 162 between rule 94 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 162 between rule 94 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 162 between rule 94 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 162 between rule 94 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 162 between rule 94 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 162 between rule 94 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 162 between rule 94 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 212 between rule 110 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 212 between rule 110 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 212 between rule 110 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 212 between rule 110 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 212 between rule 110 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 212 between rule 110 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 212 between rule 110 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 212 between rule 110 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 212 between rule 110 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 212 between rule 110 and token OP08_STRING_CAT resolved as shift.
Conflict in state 212 between rule 110 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 212 between rule 110 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 212 between rule 110 and token OP04_MATH_POW resolved as shift.
Conflict in state 212 between rule 110 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 212 between rule 110 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 212 between rule 110 and token OP18_TERNARY resolved as reduce.
Conflict in state 212 between rule 110 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 213 between rule 121 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 213 between rule 121 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 213 between rule 121 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 213 between rule 121 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 213 between rule 121 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 213 between rule 121 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 213 between rule 121 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 213 between rule 121 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 213 between rule 121 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 213 between rule 121 and token OP08_STRING_CAT resolved as shift.
Conflict in state 213 between rule 121 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 213 between rule 121 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 213 between rule 121 and token OP04_MATH_POW resolved as shift.
Conflict in state 213 between rule 121 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 213 between rule 121 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 213 between rule 121 and token OP18_TERNARY resolved as shift.
Conflict in state 213 between rule 121 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 220 between rule 102 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 220 between rule 102 and token OP06_REGEX_BIND resolved as reduce.
Conflict in state 220 between rule 102 and token OP18_TERNARY resolved as reduce.
Conflict in state 220 between rule 102 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 220 between rule 102 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 220 between rule 102 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 220 between rule 102 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 220 between rule 102 and token OP04_MATH_POW resolved as shift.
Conflict in state 220 between rule 102 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 220 between rule 102 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 220 between rule 102 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 220 between rule 102 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 220 between rule 102 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 220 between rule 102 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 220 between rule 102 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 220 between rule 102 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 220 between rule 102 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 270 between rule 94 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 270 between rule 94 and token OP04_MATH_POW resolved as reduce.
Conflict in state 270 between rule 94 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 270 between rule 94 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 270 between rule 94 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 270 between rule 94 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 270 between rule 94 and token OP06_REGEX_BIND resolved as reduce.
Conflict in state 270 between rule 94 and token OP18_TERNARY resolved as reduce.
Conflict in state 270 between rule 94 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 270 between rule 94 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 270 between rule 94 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 270 between rule 94 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 270 between rule 94 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 270 between rule 94 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 270 between rule 94 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 270 between rule 94 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 270 between rule 94 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 305 between rule 115 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 305 between rule 115 and token OP04_MATH_POW resolved as shift.
Conflict in state 305 between rule 115 and token OP08_STRING_CAT resolved as shift.
Conflict in state 305 between rule 115 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 305 between rule 115 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 305 between rule 115 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 305 between rule 115 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 305 between rule 115 and token OP18_TERNARY resolved as reduce.
Conflict in state 305 between rule 115 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 305 between rule 115 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 305 between rule 115 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 305 between rule 115 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 305 between rule 115 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 305 between rule 115 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 305 between rule 115 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 305 between rule 115 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 305 between rule 115 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 306 between rule 105 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 306 between rule 105 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 306 between rule 105 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 306 between rule 105 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 306 between rule 105 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 306 between rule 105 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 306 between rule 105 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 306 between rule 105 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 306 between rule 105 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 306 between rule 105 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 306 between rule 105 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 306 between rule 105 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 306 between rule 105 and token OP18_TERNARY resolved as reduce.
Conflict in state 306 between rule 105 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 306 between rule 105 and token OP04_MATH_POW resolved as shift.
Conflict in state 306 between rule 105 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 306 between rule 105 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 307 between rule 113 and token OP18_TERNARY resolved as reduce.
Conflict in state 307 between rule 113 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 307 between rule 113 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 307 between rule 113 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 307 between rule 113 and token OP08_STRING_CAT resolved as shift.
Conflict in state 307 between rule 113 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 307 between rule 113 and token OP04_MATH_POW resolved as shift.
Conflict in state 307 between rule 113 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 307 between rule 113 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 307 between rule 113 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 307 between rule 113 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 307 between rule 113 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 307 between rule 113 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 307 between rule 113 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 307 between rule 113 and token OP12_COMPARE_EQ_NE resolved as error.
Conflict in state 307 between rule 113 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 307 between rule 113 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 308 between rule 106 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 308 between rule 106 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 308 between rule 106 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 308 between rule 106 and token OP18_TERNARY resolved as reduce.
Conflict in state 308 between rule 106 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 308 between rule 106 and token OP04_MATH_POW resolved as shift.
Conflict in state 308 between rule 106 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 308 between rule 106 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 308 between rule 106 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 308 between rule 106 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 308 between rule 106 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 308 between rule 106 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 308 between rule 106 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 308 between rule 106 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 308 between rule 106 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 308 between rule 106 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 308 between rule 106 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 309 between rule 118 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 309 between rule 118 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 309 between rule 118 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 309 between rule 118 and token OP18_TERNARY resolved as reduce.
Conflict in state 309 between rule 118 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 309 between rule 118 and token OP04_MATH_POW resolved as shift.
Conflict in state 309 between rule 118 and token OP08_STRING_CAT resolved as shift.
Conflict in state 309 between rule 118 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 309 between rule 118 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 309 between rule 118 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 309 between rule 118 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 309 between rule 118 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 309 between rule 118 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 309 between rule 118 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 309 between rule 118 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 309 between rule 118 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 309 between rule 118 and token OP17_LIST_RANGE resolved as error.
Conflict in state 310 between rule 123 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 310 between rule 123 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 310 between rule 123 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 310 between rule 123 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 310 between rule 123 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 310 between rule 123 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 310 between rule 123 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 310 between rule 123 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 310 between rule 123 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 310 between rule 123 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 310 between rule 123 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 310 between rule 123 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 310 between rule 123 and token OP18_TERNARY resolved as shift.
Conflict in state 310 between rule 123 and token OP23_LOGICAL_AND resolved as shift.
Conflict in state 310 between rule 123 and token OP04_MATH_POW resolved as shift.
Conflict in state 310 between rule 123 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 310 between rule 123 and token OP08_STRING_CAT resolved as shift.
Conflict in state 311 between rule 114 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 311 between rule 114 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 311 between rule 114 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 311 between rule 114 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 311 between rule 114 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 311 between rule 114 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 311 between rule 114 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 311 between rule 114 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 311 between rule 114 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 311 between rule 114 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 311 between rule 114 and token OP04_MATH_POW resolved as shift.
Conflict in state 311 between rule 114 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 311 between rule 114 and token OP08_STRING_CAT resolved as shift.
Conflict in state 311 between rule 114 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 311 between rule 114 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 311 between rule 114 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 311 between rule 114 and token OP18_TERNARY resolved as reduce.
Conflict in state 312 between rule 107 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 312 between rule 107 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 312 between rule 107 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 312 between rule 107 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 312 between rule 107 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 312 between rule 107 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 312 between rule 107 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 312 between rule 107 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 312 between rule 107 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 312 between rule 107 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 312 between rule 107 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 312 between rule 107 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 312 between rule 107 and token OP04_MATH_POW resolved as shift.
Conflict in state 312 between rule 107 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 312 between rule 107 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 312 between rule 107 and token OP18_TERNARY resolved as reduce.
Conflict in state 312 between rule 107 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 313 between rule 108 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 313 between rule 108 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 313 between rule 108 and token OP18_TERNARY resolved as reduce.
Conflict in state 313 between rule 108 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 313 between rule 108 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 313 between rule 108 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 313 between rule 108 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 313 between rule 108 and token OP04_MATH_POW resolved as shift.
Conflict in state 313 between rule 108 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 313 between rule 108 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 313 between rule 108 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 313 between rule 108 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 313 between rule 108 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 313 between rule 108 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 313 between rule 108 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 313 between rule 108 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 313 between rule 108 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 314 between rule 122 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 314 between rule 122 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 314 between rule 122 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 314 between rule 122 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 314 between rule 122 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 314 between rule 122 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 314 between rule 122 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 314 between rule 122 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 314 between rule 122 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 314 between rule 122 and token OP04_MATH_POW resolved as shift.
Conflict in state 314 between rule 122 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 314 between rule 122 and token OP08_STRING_CAT resolved as shift.
Conflict in state 314 between rule 122 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 314 between rule 122 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 314 between rule 122 and token OP18_TERNARY resolved as shift.
Conflict in state 314 between rule 122 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 314 between rule 122 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 315 between rule 100 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 315 between rule 100 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 315 between rule 100 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 315 between rule 100 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 315 between rule 100 and token OP07_MATH_MULT_DIV_MOD resolved as reduce.
Conflict in state 315 between rule 100 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 315 between rule 100 and token OP07_STRING_REPEAT resolved as reduce.
Conflict in state 315 between rule 100 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 315 between rule 100 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 315 between rule 100 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 315 between rule 100 and token OP04_MATH_POW resolved as shift.
Conflict in state 315 between rule 100 and token OP08_MATH_ADD_SUB resolved as reduce.
Conflict in state 315 between rule 100 and token OP08_STRING_CAT resolved as reduce.
Conflict in state 315 between rule 100 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 315 between rule 100 and token OP06_REGEX_BIND resolved as reduce.
Conflict in state 315 between rule 100 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 315 between rule 100 and token OP18_TERNARY resolved as reduce.
Conflict in state 316 between rule 116 and token OP08_STRING_CAT resolved as shift.
Conflict in state 316 between rule 116 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 316 between rule 116 and token OP04_MATH_POW resolved as shift.
Conflict in state 316 between rule 116 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 316 between rule 116 and token OP18_TERNARY resolved as reduce.
Conflict in state 316 between rule 116 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 316 between rule 116 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 316 between rule 116 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 316 between rule 116 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 316 between rule 116 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 316 between rule 116 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 316 between rule 116 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 316 between rule 116 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 316 between rule 116 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 316 between rule 116 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 316 between rule 116 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 316 between rule 116 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 317 between rule 112 and token OP04_MATH_POW resolved as shift.
Conflict in state 317 between rule 112 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 317 between rule 112 and token OP08_STRING_CAT resolved as shift.
Conflict in state 317 between rule 112 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 317 between rule 112 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 317 between rule 112 and token OP18_TERNARY resolved as reduce.
Conflict in state 317 between rule 112 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 317 between rule 112 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 317 between rule 112 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 317 between rule 112 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 317 between rule 112 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 317 between rule 112 and token OP11_COMPARE_LT_GT resolved as error.
Conflict in state 317 between rule 112 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 317 between rule 112 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 317 between rule 112 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 317 between rule 112 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 317 between rule 112 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 318 between rule 109 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 318 between rule 109 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 318 between rule 109 and token OP11_COMPARE_LT_GT resolved as reduce.
Conflict in state 318 between rule 109 and token OP09_BITWISE_SHIFT resolved as reduce.
Conflict in state 318 between rule 109 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 318 between rule 109 and token OP12_COMPARE_EQ_NE resolved as reduce.
Conflict in state 318 between rule 109 and token OP15_LOGICAL_AND resolved as reduce.
Conflict in state 318 between rule 109 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 318 between rule 109 and token OP14_BITWISE_OR_XOR resolved as reduce.
Conflict in state 318 between rule 109 and token OP04_MATH_POW resolved as shift.
Conflict in state 318 between rule 109 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 318 between rule 109 and token OP08_STRING_CAT resolved as shift.
Conflict in state 318 between rule 109 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 318 between rule 109 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 318 between rule 109 and token OP18_TERNARY resolved as reduce.
Conflict in state 318 between rule 109 and token OP13_BITWISE_AND resolved as reduce.
Conflict in state 318 between rule 109 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 323 between rule 117 and token OP04_MATH_POW resolved as shift.
Conflict in state 323 between rule 117 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 323 between rule 117 and token OP08_STRING_CAT resolved as shift.
Conflict in state 323 between rule 117 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 323 between rule 117 and token OP16_LOGICAL_OR resolved as reduce.
Conflict in state 323 between rule 117 and token OP18_TERNARY resolved as reduce.
Conflict in state 323 between rule 117 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 323 between rule 117 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 323 between rule 117 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 323 between rule 117 and token OP17_LIST_RANGE resolved as reduce.
Conflict in state 323 between rule 117 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 323 between rule 117 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 323 between rule 117 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 323 between rule 117 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 323 between rule 117 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 323 between rule 117 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 323 between rule 117 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 452 between rule 96 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 452 between rule 96 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 452 between rule 96 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 452 between rule 96 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 452 between rule 96 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 452 between rule 96 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 452 between rule 96 and token OP11_COMPARE_LT_GT resolved as shift.
Conflict in state 452 between rule 96 and token OP17_LIST_RANGE resolved as shift.
Conflict in state 452 between rule 96 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 452 between rule 96 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 452 between rule 96 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 452 between rule 96 and token OP18_TERNARY resolved as shift.
Conflict in state 452 between rule 96 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 452 between rule 96 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 452 between rule 96 and token OP08_STRING_CAT resolved as shift.
Conflict in state 452 between rule 96 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 452 between rule 96 and token OP04_MATH_POW resolved as shift.
Conflict in state 470 between rule 118 and token OP08_STRING_CAT resolved as shift.
Conflict in state 470 between rule 118 and token OP08_MATH_ADD_SUB resolved as shift.
Conflict in state 470 between rule 118 and token OP23_LOGICAL_AND resolved as reduce.
Conflict in state 470 between rule 118 and token OP04_MATH_POW resolved as shift.
Conflict in state 470 between rule 118 and token OP13_BITWISE_AND resolved as shift.
Conflict in state 470 between rule 118 and token OP06_REGEX_BIND resolved as shift.
Conflict in state 470 between rule 118 and token OP18_TERNARY resolved as reduce.
Conflict in state 470 between rule 118 and token OP16_LOGICAL_OR resolved as shift.
Conflict in state 470 between rule 118 and token OP17_LIST_RANGE resolved as error.
Conflict in state 470 between rule 118 and token OP24_LOGICAL_OR_XOR resolved as reduce.
Conflict in state 470 between rule 118 and token OP15_LOGICAL_AND resolved as shift.
Conflict in state 470 between rule 118 and token OP07_STRING_REPEAT resolved as shift.
Conflict in state 470 between rule 118 and token OP14_BITWISE_OR_XOR resolved as shift.
Conflict in state 470 between rule 118 and token OP12_COMPARE_EQ_NE resolved as shift.
Conflict in state 470 between rule 118 and token OP07_MATH_MULT_DIV_MOD resolved as shift.
Conflict in state 470 between rule 118 and token OP09_BITWISE_SHIFT resolved as shift.
Conflict in state 470 between rule 118 and token OP11_COMPARE_LT_GT resolved as shift.

Rules:
------
0:	$start -> CompileUnit $end
1:	PAREN-1 -> ModuleHeader Module
2:	PLUS-2 -> PLUS-2 PAREN-1
3:	PLUS-2 -> PAREN-1
4:	CompileUnit -> Program
5:	CompileUnit -> PLUS-2
6:	OPTIONAL-3 -> Critic
7:	OPTIONAL-3 -> /* empty */
8:	STAR-4 -> STAR-4 Critic
9:	STAR-4 -> /* empty */
10:	STAR-5 -> STAR-5 Include
11:	STAR-5 -> /* empty */
12:	STAR-6 -> STAR-6 Constant
13:	STAR-6 -> /* empty */
14:	STAR-7 -> STAR-7 Subroutine
15:	STAR-7 -> /* empty */
16:	PLUS-8 -> PLUS-8 Operation
17:	PLUS-8 -> Operation
18:	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8
19:	OPTIONAL-9 -> Critic
20:	OPTIONAL-9 -> /* empty */
21:	OPTIONAL-10 -> USE_RPERL
22:	OPTIONAL-10 -> /* empty */
23:	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' Header
24:	Module -> Package
25:	Module -> Class
26:	STAR-11 -> STAR-11 Critic
27:	STAR-11 -> /* empty */
28:	OPTIONAL-12 -> Exports
29:	OPTIONAL-12 -> /* empty */
30:	STAR-13 -> STAR-13 Include
31:	STAR-13 -> /* empty */
32:	STAR-14 -> STAR-14 Constant
33:	STAR-14 -> /* empty */
34:	PLUS-15 -> PLUS-15 Subroutine
35:	PLUS-15 -> Subroutine
36:	Package -> STAR-11 OPTIONAL-12 STAR-13 STAR-14 PLUS-15 LITERAL_NUMBER ';'
37:	OPTIONAL-16 -> USE_RPERL_AFTER
38:	OPTIONAL-16 -> /* empty */
39:	Header -> 'use strict;' 'use warnings;' OPTIONAL-16 OUR VERSION_NUMBER_ASSIGN
40:	PLUS-17 -> PLUS-17 WORD
41:	PLUS-17 -> WORD
42:	Critic -> '## no critic qw(' PLUS-17 ')'
43:	PAREN-18 -> OUR_EXPORT OP01_QW ';'
44:	OPTIONAL-19 -> PAREN-18
45:	OPTIONAL-19 -> /* empty */
46:	PAREN-20 -> OUR_EXPORT_OK OP01_QW ';'
47:	OPTIONAL-21 -> PAREN-20
48:	OPTIONAL-21 -> /* empty */
49:	Exports -> USE_EXPORTER OPTIONAL-19 OPTIONAL-21
50:	Include -> USE WordScoped ';'
51:	Include -> USE WordScoped OP01_QW ';'
52:	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'
53:	OPTIONAL-22 -> SubroutineArguments
54:	OPTIONAL-22 -> /* empty */
55:	STAR-23 -> STAR-23 Operation
56:	STAR-23 -> /* empty */
57:	Subroutine -> SUB WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'
58:	PAREN-24 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL
59:	STAR-25 -> STAR-25 PAREN-24
60:	STAR-25 -> /* empty */
61:	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-25 ')' OP19_VARIABLE_ASSIGN '@ARG;'
62:	STAR-26 -> STAR-26 Critic
63:	STAR-26 -> /* empty */
64:	OPTIONAL-27 -> Exports
65:	OPTIONAL-27 -> /* empty */
66:	STAR-28 -> STAR-28 Include
67:	STAR-28 -> /* empty */
68:	STAR-29 -> STAR-29 Constant
69:	STAR-29 -> /* empty */
70:	STAR-30 -> STAR-30 SubroutineOrMethod
71:	STAR-30 -> /* empty */
72:	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-26 OPTIONAL-27 STAR-28 STAR-29 Properties STAR-30 LITERAL_NUMBER ';'
73:	PAREN-31 -> OP21_LIST_COMMA HashEntryProperties
74:	STAR-32 -> STAR-32 PAREN-31
75:	STAR-32 -> /* empty */
76:	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-32 '}' ';'
77:	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';'
78:	OPTIONAL-33 -> MethodArguments
79:	OPTIONAL-33 -> /* empty */
80:	STAR-34 -> STAR-34 Operation
81:	STAR-34 -> /* empty */
82:	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-33 STAR-34 '}'
83:	PAREN-35 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL
84:	STAR-36 -> STAR-36 PAREN-35
85:	STAR-36 -> /* empty */
86:	MethodArguments -> LPAREN_MY Type SELF STAR-36 ')' OP19_VARIABLE_ASSIGN '@ARG;'
87:	SubroutineOrMethod -> Subroutine
88:	SubroutineOrMethod -> Method
89:	Operation -> Expression ';'
90:	Operation -> OP01_NAMED_SCOLON
91:	Operation -> OP10_NAMED_UNARY_SCOLON
92:	Operation -> Statement
93:	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')'
94:	Operator -> OP01_NAMED SubExpression
95:	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'
96:	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression
97:	Operator -> OP01_CLOSE FHREF_SYMBOL
98:	Operator -> OP03_MATH_INC_DEC Variable
99:	Operator -> Variable OP03_MATH_INC_DEC
100:	Operator -> SubExpression OP04_MATH_POW SubExpression
101:	Operator -> OP05_BITWISE_NEG_LPAREN SubExpression ')'
102:	Operator -> OP05_LOGICAL_NEG SubExpression
103:	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')'
104:	Operator -> SubExpression OP06_REGEX_BIND OP06_REGEX_PATTERN
105:	Operator -> SubExpression OP07_STRING_REPEAT SubExpression
106:	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression
107:	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression
108:	Operator -> SubExpression OP08_STRING_CAT SubExpression
109:	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression
110:	Operator -> OP10_NAMED_UNARY SubExpression
111:	Operator -> OP10_NAMED_UNARY
112:	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression
113:	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression
114:	Operator -> SubExpression OP13_BITWISE_AND SubExpression
115:	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression
116:	Operator -> SubExpression OP15_LOGICAL_AND SubExpression
117:	Operator -> SubExpression OP16_LOGICAL_OR SubExpression
118:	Operator -> SubExpression OP17_LIST_RANGE SubExpression
119:	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral
120:	Operator -> OP22_LOGICAL_NEG_LPAREN SubExpression ')'
121:	Operator -> OP22_LOGICAL_NEG SubExpression
122:	Operator -> SubExpression OP23_LOGICAL_AND SubExpression
123:	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression
124:	PAREN-37 -> STDOUT_STDERR
125:	OPTIONAL-38 -> PAREN-37
126:	OPTIONAL-38 -> /* empty */
127:	OPTIONAL-39 -> ListElements
128:	OPTIONAL-39 -> /* empty */
129:	OperatorVoid -> OP01_PRINT OPTIONAL-38 ListElements ';'
130:	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements ';'
131:	OperatorVoid -> OP01_NAMED_VOID_SCOLON
132:	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-39 ')' ';'
133:	OperatorVoid -> OP01_NAMED_VOID ListElements ';'
134:	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';'
135:	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON
136:	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';'
137:	OPTIONAL-40 -> ListElements
138:	OPTIONAL-40 -> /* empty */
139:	OPTIONAL-41 -> ListElements
140:	OPTIONAL-41 -> /* empty */
141:	OPTIONAL-42 -> HashReference
142:	OPTIONAL-42 -> /* empty */
143:	Expression -> Operator
144:	Expression -> WORD_UPPERCASE LPAREN ')'
145:	Expression -> CONSTANT_CALL_SCOPED
146:	Expression -> WordScoped LPAREN OPTIONAL-40 ')'
147:	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-41 ')'
148:	Expression -> WordScoped OP02_METHOD_THINARROW_NEW OPTIONAL-42 ')'
149:	SubExpression -> Expression
150:	SubExpression -> 'undef'
151:	SubExpression -> Literal
152:	SubExpression -> Variable
153:	SubExpression -> ArrayReference
154:	SubExpression -> ArrayDereference
155:	SubExpression -> HashReference
156:	SubExpression -> HashDereference
157:	SubExpression -> LPAREN SubExpression ')'
158:	SubExpressionOrInput -> SubExpression
159:	SubExpressionOrInput -> FHREF_SYMBOL_IN
160:	SubExpressionOrInput -> STDIN
161:	SubExpressionOrVarMod -> SubExpression
162:	SubExpressionOrVarMod -> VariableModification
163:	PAREN-43 -> LoopLabel COLON
164:	OPTIONAL-44 -> PAREN-43
165:	OPTIONAL-44 -> /* empty */
166:	Statement -> Conditional
167:	Statement -> OPTIONAL-44 Loop
168:	Statement -> OperatorVoid
169:	Statement -> VariableDeclaration
170:	Statement -> VariableModification ';'
171:	PAREN-45 -> 'elsif' LPAREN SubExpression ')' CodeBlock
172:	STAR-46 -> STAR-46 PAREN-45
173:	STAR-46 -> /* empty */
174:	PAREN-47 -> 'else' CodeBlock
175:	OPTIONAL-48 -> PAREN-47
176:	OPTIONAL-48 -> /* empty */
177:	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-46 OPTIONAL-48
178:	Loop -> LoopFor
179:	Loop -> LoopForEach
180:	Loop -> LoopWhile
181:	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock
182:	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock
183:	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock
184:	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock
185:	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock
186:	PLUS-49 -> PLUS-49 Operation
187:	PLUS-49 -> Operation
188:	CodeBlock -> LBRACE PLUS-49 '}'
189:	STAR-50 -> STAR-50 VariableRetrieval
190:	STAR-50 -> /* empty */
191:	Variable -> VariableSymbolOrSelf STAR-50
192:	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']'
193:	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}'
194:	VariableRetrieval -> OP02_HASH_THINARROW WORD '}'
195:	VariableDeclaration -> MY Type VARIABLE_SYMBOL ';'
196:	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExpIn
197:	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'
198:	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL ';'
199:	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrInput
200:	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression
201:	PAREN-51 -> OP21_LIST_COMMA ListElement
202:	STAR-52 -> STAR-52 PAREN-51
203:	STAR-52 -> /* empty */
204:	ListElements -> ListElement STAR-52
205:	ListElement -> SubExpression
206:	ListElement -> TypeInner SubExpression
207:	ListElement -> OP01_QW
208:	ListElement -> ARGV
209:	OPTIONAL-53 -> ListElements
210:	OPTIONAL-53 -> /* empty */
211:	ArrayReference -> LBRACKET OPTIONAL-53 ']'
212:	OPTIONAL-54 -> TypeInner
213:	OPTIONAL-54 -> /* empty */
214:	ArrayDereference -> '@{' Variable '}'
215:	ArrayDereference -> '@{' OPTIONAL-54 ArrayReference '}'
216:	OPTIONAL-55 -> TypeInner
217:	OPTIONAL-55 -> /* empty */
218:	HashEntry -> VarOrLitOrOpStrOrWord OP20_HASH_FATARROW OPTIONAL-55 SubExpression
219:	HashEntry -> HashDereference
220:	HashEntry -> ENV
221:	HashEntryProperties -> OpStringOrWord OP20_HASH_FATARROW TypeInnerProperties
222:	PAREN-56 -> OP21_LIST_COMMA HashEntry
223:	STAR-57 -> STAR-57 PAREN-56
224:	STAR-57 -> /* empty */
225:	HashReference -> LBRACE HashEntry STAR-57 '}'
226:	HashReference -> LBRACE '}'
227:	OPTIONAL-58 -> TypeInner
228:	OPTIONAL-58 -> /* empty */
229:	HashDereference -> '%{' Variable '}'
230:	HashDereference -> '%{' OPTIONAL-58 HashReference '}'
231:	WordScoped -> WORD
232:	WordScoped -> WORD_SCOPED
233:	LoopLabel -> WORD_UPPERCASE
234:	Type -> WORD
235:	Type -> WORD_SCOPED
236:	Type -> TYPE_INTEGER
237:	TypeInner -> MY Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN
238:	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN SubExpression
239:	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'
240:	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN
241:	VariableOrLiteral -> Variable
242:	VariableOrLiteral -> Literal
243:	VarOrLitOrOpStrOrWord -> Variable
244:	VarOrLitOrOpStrOrWord -> Literal
245:	VarOrLitOrOpStrOrWord -> OpStringOrWord
246:	VariableSymbolOrSelf -> VARIABLE_SYMBOL
247:	VariableSymbolOrSelf -> SELF
248:	Literal -> LITERAL_NUMBER
249:	Literal -> LITERAL_STRING
250:	OpNamedScolonOrSubExp -> OP01_NAMED_SCOLON
251:	OpNamedScolonOrSubExp -> OP10_NAMED_UNARY_SCOLON
252:	OpNamedScolonOrSubExp -> SubExpression ';'
253:	OpNamedScolonOrSubExpIn -> OP01_NAMED_SCOLON
254:	OpNamedScolonOrSubExpIn -> OP10_NAMED_UNARY_SCOLON
255:	OpNamedScolonOrSubExpIn -> SubExpressionOrInput ';'
256:	OpStringOrWord -> OP24_LOGICAL_OR_XOR
257:	OpStringOrWord -> OP23_LOGICAL_AND
258:	OpStringOrWord -> OP22_LOGICAL_NEG
259:	OpStringOrWord -> OP19_LOOP_CONTROL_SCOLON
260:	OpStringOrWord -> OP19_LOOP_CONTROL
261:	OpStringOrWord -> OP12_COMPARE_EQ_NE
262:	OpStringOrWord -> OP11_COMPARE_LT_GT
263:	OpStringOrWord -> OP10_NAMED_UNARY
264:	OpStringOrWord -> OP08_MATH_ADD_SUB
265:	OpStringOrWord -> OP07_MATH_MULT_DIV_MOD
266:	OpStringOrWord -> OP07_STRING_REPEAT
267:	OpStringOrWord -> OP01_NAMED
268:	OpStringOrWord -> OP01_CLOSE
269:	OpStringOrWord -> OP01_OPEN
270:	OpStringOrWord -> OP01_NAMED_VOID
271:	OpStringOrWord -> OP01_PRINT
272:	OpStringOrWord -> WORD

States:
-------
State 0:

	$start -> . CompileUnit $end	(Rule 0)

	'## no critic qw('	shift, and go to state 6
	SHEBANG	shift, and go to state 9

	'package'	reduce using rule 20 (OPTIONAL-9)
	USE_RPERL	reduce using rule 20 (OPTIONAL-9)

	CompileUnit	go to state 4
	Critic	go to state 7
	OPTIONAL-9	go to state 5
	PLUS-2	go to state 8
	ModuleHeader	go to state 1
	Program	go to state 2
	PAREN-1	go to state 3

State 1:

	PAREN-1 -> ModuleHeader . Module	(Rule 1)

	'use parent qw('	shift, and go to state 11

	'## no critic qw('	reduce using rule 27 (STAR-11)
	'use constant'	reduce using rule 27 (STAR-11)
	SUB	reduce using rule 27 (STAR-11)
	USE	reduce using rule 27 (STAR-11)
	USE_EXPORTER	reduce using rule 27 (STAR-11)

	Package	go to state 12
	Class	go to state 10
	STAR-11	go to state 14
	Module	go to state 13

State 2:

	CompileUnit -> Program .	(Rule 4)

	$default	reduce using rule 4 (CompileUnit)

State 3:

	PLUS-2 -> PAREN-1 .	(Rule 3)

	$default	reduce using rule 3 (PLUS-2)

State 4:

	$start -> CompileUnit . $end	(Rule 0)

	$end	shift, and go to state 15

State 5:

	ModuleHeader -> OPTIONAL-9 . OPTIONAL-10 'package' WordScoped ';' Header	(Rule 23)

	USE_RPERL	shift, and go to state 16

	'package'	reduce using rule 22 (OPTIONAL-10)

	OPTIONAL-10	go to state 17

State 6:

	Critic -> '## no critic qw(' . PLUS-17 ')'	(Rule 42)

	WORD	shift, and go to state 18

	PLUS-17	go to state 19

State 7:

	OPTIONAL-9 -> Critic .	(Rule 19)

	$default	reduce using rule 19 (OPTIONAL-9)

State 8:

	PLUS-2 -> PLUS-2 . PAREN-1	(Rule 2)
	CompileUnit -> PLUS-2 .	(Rule 5)

	'## no critic qw('	shift, and go to state 6

	$end	reduce using rule 5 (CompileUnit)
	'package'	reduce using rule 20 (OPTIONAL-9)
	USE_RPERL	reduce using rule 20 (OPTIONAL-9)

	OPTIONAL-9	go to state 5
	Critic	go to state 7
	PAREN-1	go to state 20
	ModuleHeader	go to state 1

State 9:

	Program -> SHEBANG . OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 6

	USE_RPERL	reduce using rule 7 (OPTIONAL-3)

	Critic	go to state 21
	OPTIONAL-3	go to state 22

State 10:

	Module -> Class .	(Rule 25)

	$default	reduce using rule 25 (Module)

State 11:

	Class -> 'use parent qw(' . WordScoped ')' ';' Include STAR-26 OPTIONAL-27 STAR-28 STAR-29 Properties STAR-30 LITERAL_NUMBER ';'	(Rule 72)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	WordScoped	go to state 23

State 12:

	Module -> Package .	(Rule 24)

	$default	reduce using rule 24 (Module)

State 13:

	PAREN-1 -> ModuleHeader Module .	(Rule 1)

	$default	reduce using rule 1 (PAREN-1)

State 14:

	STAR-11 -> STAR-11 . Critic	(Rule 26)
	Package -> STAR-11 . OPTIONAL-12 STAR-13 STAR-14 PLUS-15 LITERAL_NUMBER ';'	(Rule 36)

	'## no critic qw('	shift, and go to state 6
	USE_EXPORTER	shift, and go to state 29

	'use constant'	reduce using rule 29 (OPTIONAL-12)
	SUB	reduce using rule 29 (OPTIONAL-12)
	USE	reduce using rule 29 (OPTIONAL-12)

	Critic	go to state 26
	Exports	go to state 27
	OPTIONAL-12	go to state 28

State 15:

	$start -> CompileUnit $end .	(Rule 0)

	$default	accept

State 16:

	OPTIONAL-10 -> USE_RPERL .	(Rule 21)

	$default	reduce using rule 21 (OPTIONAL-10)

State 17:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 . 'package' WordScoped ';' Header	(Rule 23)

	'package'	shift, and go to state 30

State 18:

	PLUS-17 -> WORD .	(Rule 41)

	$default	reduce using rule 41 (PLUS-17)

State 19:

	PLUS-17 -> PLUS-17 . WORD	(Rule 40)
	Critic -> '## no critic qw(' PLUS-17 . ')'	(Rule 42)

	')'	shift, and go to state 31
	WORD	shift, and go to state 32

State 20:

	PLUS-2 -> PLUS-2 PAREN-1 .	(Rule 2)

	$default	reduce using rule 2 (PLUS-2)

State 21:

	OPTIONAL-3 -> Critic .	(Rule 6)

	$default	reduce using rule 6 (OPTIONAL-3)

State 22:

	Program -> SHEBANG OPTIONAL-3 . USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	USE_RPERL	shift, and go to state 33

State 23:

	Class -> 'use parent qw(' WordScoped . ')' ';' Include STAR-26 OPTIONAL-27 STAR-28 STAR-29 Properties STAR-30 LITERAL_NUMBER ';'	(Rule 72)

	')'	shift, and go to state 34

State 24:

	WordScoped -> WORD .	(Rule 231)

	$default	reduce using rule 231 (WordScoped)

State 25:

	WordScoped -> WORD_SCOPED .	(Rule 232)

	$default	reduce using rule 232 (WordScoped)

State 26:

	STAR-11 -> STAR-11 Critic .	(Rule 26)

	$default	reduce using rule 26 (STAR-11)

State 27:

	OPTIONAL-12 -> Exports .	(Rule 28)

	$default	reduce using rule 28 (OPTIONAL-12)

State 28:

	Package -> STAR-11 OPTIONAL-12 . STAR-13 STAR-14 PLUS-15 LITERAL_NUMBER ';'	(Rule 36)

	$default	reduce using rule 31 (STAR-13)

	STAR-13	go to state 35

State 29:

	Exports -> USE_EXPORTER . OPTIONAL-19 OPTIONAL-21	(Rule 49)

	OUR_EXPORT	shift, and go to state 36

	'our hashref $properties'	reduce using rule 45 (OPTIONAL-19)
	'use constant'	reduce using rule 45 (OPTIONAL-19)
	OUR_EXPORT_OK	reduce using rule 45 (OPTIONAL-19)
	SUB	reduce using rule 45 (OPTIONAL-19)
	USE	reduce using rule 45 (OPTIONAL-19)

	PAREN-18	go to state 38
	OPTIONAL-19	go to state 37

State 30:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' . WordScoped ';' Header	(Rule 23)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	WordScoped	go to state 39

State 31:

	Critic -> '## no critic qw(' PLUS-17 ')' .	(Rule 42)

	$default	reduce using rule 42 (Critic)

State 32:

	PLUS-17 -> PLUS-17 WORD .	(Rule 40)

	$default	reduce using rule 40 (PLUS-17)

State 33:

	Program -> SHEBANG OPTIONAL-3 USE_RPERL . Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'use strict;'	shift, and go to state 40

	Header	go to state 41

State 34:

	Class -> 'use parent qw(' WordScoped ')' . ';' Include STAR-26 OPTIONAL-27 STAR-28 STAR-29 Properties STAR-30 LITERAL_NUMBER ';'	(Rule 72)

	';'	shift, and go to state 42

State 35:

	STAR-13 -> STAR-13 . Include	(Rule 30)
	Package -> STAR-11 OPTIONAL-12 STAR-13 . STAR-14 PLUS-15 LITERAL_NUMBER ';'	(Rule 36)

	USE	shift, and go to state 43

	'use constant'	reduce using rule 33 (STAR-14)
	SUB	reduce using rule 33 (STAR-14)

	STAR-14	go to state 45
	Include	go to state 44

State 36:

	PAREN-18 -> OUR_EXPORT . OP01_QW ';'	(Rule 43)

	OP01_QW	shift, and go to state 46

State 37:

	Exports -> USE_EXPORTER OPTIONAL-19 . OPTIONAL-21	(Rule 49)

	OUR_EXPORT_OK	shift, and go to state 49

	'our hashref $properties'	reduce using rule 48 (OPTIONAL-21)
	'use constant'	reduce using rule 48 (OPTIONAL-21)
	SUB	reduce using rule 48 (OPTIONAL-21)
	USE	reduce using rule 48 (OPTIONAL-21)

	PAREN-20	go to state 48
	OPTIONAL-21	go to state 47

State 38:

	OPTIONAL-19 -> PAREN-18 .	(Rule 44)

	$default	reduce using rule 44 (OPTIONAL-19)

State 39:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped . ';' Header	(Rule 23)

	';'	shift, and go to state 50

State 40:

	Header -> 'use strict;' . 'use warnings;' OPTIONAL-16 OUR VERSION_NUMBER_ASSIGN	(Rule 39)

	'use warnings;'	shift, and go to state 51

State 41:

	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header . STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	$default	reduce using rule 9 (STAR-4)

	STAR-4	go to state 52

State 42:

	Class -> 'use parent qw(' WordScoped ')' ';' . Include STAR-26 OPTIONAL-27 STAR-28 STAR-29 Properties STAR-30 LITERAL_NUMBER ';'	(Rule 72)

	USE	shift, and go to state 43

	Include	go to state 53

State 43:

	Include -> USE . WordScoped ';'	(Rule 50)
	Include -> USE . WordScoped OP01_QW ';'	(Rule 51)

	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25

	WordScoped	go to state 54

State 44:

	STAR-13 -> STAR-13 Include .	(Rule 30)

	$default	reduce using rule 30 (STAR-13)

State 45:

	STAR-14 -> STAR-14 . Constant	(Rule 32)
	Package -> STAR-11 OPTIONAL-12 STAR-13 STAR-14 . PLUS-15 LITERAL_NUMBER ';'	(Rule 36)

	'use constant'	shift, and go to state 57
	SUB	shift, and go to state 58

	PLUS-15	go to state 59
	Subroutine	go to state 55
	Constant	go to state 56

State 46:

	PAREN-18 -> OUR_EXPORT OP01_QW . ';'	(Rule 43)

	';'	shift, and go to state 60

State 47:

	Exports -> USE_EXPORTER OPTIONAL-19 OPTIONAL-21 .	(Rule 49)

	$default	reduce using rule 49 (Exports)

State 48:

	OPTIONAL-21 -> PAREN-20 .	(Rule 47)

	$default	reduce using rule 47 (OPTIONAL-21)

State 49:

	PAREN-20 -> OUR_EXPORT_OK . OP01_QW ';'	(Rule 46)

	OP01_QW	shift, and go to state 61

State 50:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' . Header	(Rule 23)

	'use strict;'	shift, and go to state 40

	Header	go to state 62

State 51:

	Header -> 'use strict;' 'use warnings;' . OPTIONAL-16 OUR VERSION_NUMBER_ASSIGN	(Rule 39)

	USE_RPERL_AFTER	shift, and go to state 63

	OUR	reduce using rule 38 (OPTIONAL-16)

	OPTIONAL-16	go to state 64

State 52:

	STAR-4 -> STAR-4 . Critic	(Rule 8)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 . STAR-5 STAR-6 STAR-7 PLUS-8	(Rule 18)

	'## no critic qw('	shift, and go to state 6

	'%{'	reduce using rule 11 (STAR-5)
	'@{'	reduce using rule 11 (STAR-5)
	'for'	reduce using rule 11 (STAR-5)
	'foreach'	reduce using rule 11 (STAR-5)
	'if'	reduce using rule 11 (STAR-5)
	'undef'	reduce using rule 11 (STAR-5)
	'use constant'	reduce using rule 11 (STAR-5)
	'while'	reduce using rule 11 (STAR-5)
	CONSTANT_CALL_SCOPED	reduce using rule 11 (STAR-5)
	LBRACE	reduce using rule 11 (STAR-5)
	LBRACKET	reduce using rule 11 (STAR-5)
	LITERAL_NUMBER	reduce using rule 11 (STAR-5)
	LITERAL_STRING	reduce using rule 11 (STAR-5)
	LPAREN	reduce using rule 11 (STAR-5)
	MY	reduce using rule 11 (STAR-5)
	OP01_CLOSE	reduce using rule 11 (STAR-5)
	OP01_NAMED	reduce using rule 11 (STAR-5)
	OP01_NAMED_SCOLON	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_LPAREN	reduce using rule 11 (STAR-5)
	OP01_NAMED_VOID_SCOLON	reduce using rule 11 (STAR-5)
	OP01_OPEN	reduce using rule 11 (STAR-5)
	OP01_PRINT	reduce using rule 11 (STAR-5)
	OP03_MATH_INC_DEC	reduce using rule 11 (STAR-5)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP05_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP05_MATH_NEG_LPAREN	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY	reduce using rule 11 (STAR-5)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL	reduce using rule 11 (STAR-5)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NEG	reduce using rule 11 (STAR-5)
	OP22_LOGICAL_NEG_LPAREN	reduce using rule 11 (STAR-5)
	SELF	reduce using rule 11 (STAR-5)
	SUB	reduce using rule 11 (STAR-5)
	USE	reduce using rule 11 (STAR-5)
	VARIABLE_SYMBOL	reduce using rule 11 (STAR-5)
	WORD	reduce using rule 11 (STAR-5)
	WORD_SCOPED	reduce using rule 11 (STAR-5)
	WORD_UPPERCASE	reduce using rule 11 (STAR-5)

	Critic	go to state 66
	STAR-5	go to state 65

State 53:

	Class -> 'use parent qw(' WordScoped ')' ';' Include . STAR-26 OPTIONAL-27 STAR-28 STAR-29 Properties STAR-30 LITERAL_NUMBER ';'	(Rule 72)

	$default	reduce using rule 63 (STAR-26)

	STAR-26	go to state 67

State 54:

	Include -> USE WordScoped . ';'	(Rule 50)
	Include -> USE WordScoped . OP01_QW ';'	(Rule 51)

	';'	shift, and go to state 68
	OP01_QW	shift, and go to state 69

State 55:

	PLUS-15 -> Subroutine .	(Rule 35)

	$default	reduce using rule 35 (PLUS-15)

State 56:

	STAR-14 -> STAR-14 Constant .	(Rule 32)

	$default	reduce using rule 32 (STAR-14)

State 57:

	Constant -> 'use constant' . WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 52)

	WORD_UPPERCASE	shift, and go to state 70

State 58:

	Subroutine -> SUB . WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)

	WORD	shift, and go to state 71

State 59:

	PLUS-15 -> PLUS-15 . Subroutine	(Rule 34)
	Package -> STAR-11 OPTIONAL-12 STAR-13 STAR-14 PLUS-15 . LITERAL_NUMBER ';'	(Rule 36)

	LITERAL_NUMBER	shift, and go to state 72
	SUB	shift, and go to state 58

	Subroutine	go to state 73

State 60:

	PAREN-18 -> OUR_EXPORT OP01_QW ';' .	(Rule 43)

	$default	reduce using rule 43 (PAREN-18)

State 61:

	PAREN-20 -> OUR_EXPORT_OK OP01_QW . ';'	(Rule 46)

	';'	shift, and go to state 74

State 62:

	ModuleHeader -> OPTIONAL-9 OPTIONAL-10 'package' WordScoped ';' Header .	(Rule 23)

	$default	reduce using rule 23 (ModuleHeader)

State 63:

	OPTIONAL-16 -> USE_RPERL_AFTER .	(Rule 37)

	$default	reduce using rule 37 (OPTIONAL-16)

State 64:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-16 . OUR VERSION_NUMBER_ASSIGN	(Rule 39)

	OUR	shift, and go to state 75

State 65:

	STAR-5 -> STAR-5 . Include	(Rule 10)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 . STAR-6 STAR-7 PLUS-8	(Rule 18)

	USE	shift, and go to state 43

	'%{'	reduce using rule 13 (STAR-6)
	'@{'	reduce using rule 13 (STAR-6)
	'for'	reduce using rule 13 (STAR-6)
	'foreach'	reduce using rule 13 (STAR-6)
	'if'	reduce using rule 13 (STAR-6)
	'undef'	reduce using rule 13 (STAR-6)
	'use constant'	reduce using rule 13 (STAR-6)
	'while'	reduce using rule 13 (STAR-6)
	CONSTANT_CALL_SCOPED	reduce using rule 13 (STAR-6)
	LBRACE	reduce using rule 13 (STAR-6)
	LBRACKET	reduce using rule 13 (STAR-6)
	LITERAL_NUMBER	reduce using rule 13 (STAR-6)
	LITERAL_STRING	reduce using rule 13 (STAR-6)
	LPAREN	reduce using rule 13 (STAR-6)
	MY	reduce using rule 13 (STAR-6)
	OP01_CLOSE	reduce using rule 13 (STAR-6)
	OP01_NAMED	reduce using rule 13 (STAR-6)
	OP01_NAMED_SCOLON	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_LPAREN	reduce using rule 13 (STAR-6)
	OP01_NAMED_VOID_SCOLON	reduce using rule 13 (STAR-6)
	OP01_OPEN	reduce using rule 13 (STAR-6)
	OP01_PRINT	reduce using rule 13 (STAR-6)
	OP03_MATH_INC_DEC	reduce using rule 13 (STAR-6)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP05_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP05_MATH_NEG_LPAREN	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY	reduce using rule 13 (STAR-6)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL	reduce using rule 13 (STAR-6)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NEG	reduce using rule 13 (STAR-6)
	OP22_LOGICAL_NEG_LPAREN	reduce using rule 13 (STAR-6)
	SELF	reduce using rule 13 (STAR-6)
	SUB	reduce using rule 13 (STAR-6)
	VARIABLE_SYMBOL	reduce using rule 13 (STAR-6)
	WORD	reduce using rule 13 (STAR-6)
	WORD_SCOPED	reduce using rule 13 (STAR-6)
	WORD_UPPERCASE	reduce using rule 13 (STAR-6)

	STAR-6	go to state 77
	Include	go to state 76

State 66:

	STAR-4 -> STAR-4 Critic .	(Rule 8)

	$default	reduce using rule 8 (STAR-4)

State 67:

	STAR-26 -> STAR-26 . Critic	(Rule 62)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-26 . OPTIONAL-27 STAR-28 STAR-29 Properties STAR-30 LITERAL_NUMBER ';'	(Rule 72)

	'## no critic qw('	shift, and go to state 6
	USE_EXPORTER	shift, and go to state 29

	'our hashref $properties'	reduce using rule 65 (OPTIONAL-27)
	'use constant'	reduce using rule 65 (OPTIONAL-27)
	USE	reduce using rule 65 (OPTIONAL-27)

	Exports	go to state 78
	OPTIONAL-27	go to state 79
	Critic	go to state 80

State 68:

	Include -> USE WordScoped ';' .	(Rule 50)

	$default	reduce using rule 50 (Include)

State 69:

	Include -> USE WordScoped OP01_QW . ';'	(Rule 51)

	';'	shift, and go to state 81

State 70:

	Constant -> 'use constant' WORD_UPPERCASE . OP20_HASH_FATARROW TypeInnerConstant Literal ';'	(Rule 52)

	OP20_HASH_FATARROW	shift, and go to state 82

State 71:

	Subroutine -> SUB WORD . LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)

	LBRACE	shift, and go to state 83

State 72:

	Package -> STAR-11 OPTIONAL-12 STAR-13 STAR-14 PLUS-15 LITERAL_NUMBER . ';'	(Rule 36)

	';'	shift, and go to state 84

State 73:

	PLUS-15 -> PLUS-15 Subroutine .	(Rule 34)

	$default	reduce using rule 34 (PLUS-15)

State 74:

	PAREN-20 -> OUR_EXPORT_OK OP01_QW ';' .	(Rule 46)

	$default	reduce using rule 46 (PAREN-20)

State 75:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-16 OUR . VERSION_NUMBER_ASSIGN	(Rule 39)

	VERSION_NUMBER_ASSIGN	shift, and go to state 85

State 76:

	STAR-5 -> STAR-5 Include .	(Rule 10)

	$default	reduce using rule 10 (STAR-5)

State 77:

	STAR-6 -> STAR-6 . Constant	(Rule 12)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 . STAR-7 PLUS-8	(Rule 18)

	'use constant'	shift, and go to state 57

	'%{'	reduce using rule 15 (STAR-7)
	'@{'	reduce using rule 15 (STAR-7)
	'for'	reduce using rule 15 (STAR-7)
	'foreach'	reduce using rule 15 (STAR-7)
	'if'	reduce using rule 15 (STAR-7)
	'undef'	reduce using rule 15 (STAR-7)
	'while'	reduce using rule 15 (STAR-7)
	CONSTANT_CALL_SCOPED	reduce using rule 15 (STAR-7)
	LBRACE	reduce using rule 15 (STAR-7)
	LBRACKET	reduce using rule 15 (STAR-7)
	LITERAL_NUMBER	reduce using rule 15 (STAR-7)
	LITERAL_STRING	reduce using rule 15 (STAR-7)
	LPAREN	reduce using rule 15 (STAR-7)
	MY	reduce using rule 15 (STAR-7)
	OP01_CLOSE	reduce using rule 15 (STAR-7)
	OP01_NAMED	reduce using rule 15 (STAR-7)
	OP01_NAMED_SCOLON	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_LPAREN	reduce using rule 15 (STAR-7)
	OP01_NAMED_VOID_SCOLON	reduce using rule 15 (STAR-7)
	OP01_OPEN	reduce using rule 15 (STAR-7)
	OP01_PRINT	reduce using rule 15 (STAR-7)
	OP03_MATH_INC_DEC	reduce using rule 15 (STAR-7)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP05_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP05_MATH_NEG_LPAREN	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY	reduce using rule 15 (STAR-7)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL	reduce using rule 15 (STAR-7)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NEG	reduce using rule 15 (STAR-7)
	OP22_LOGICAL_NEG_LPAREN	reduce using rule 15 (STAR-7)
	SELF	reduce using rule 15 (STAR-7)
	SUB	reduce using rule 15 (STAR-7)
	VARIABLE_SYMBOL	reduce using rule 15 (STAR-7)
	WORD	reduce using rule 15 (STAR-7)
	WORD_SCOPED	reduce using rule 15 (STAR-7)
	WORD_UPPERCASE	reduce using rule 15 (STAR-7)

	STAR-7	go to state 86
	Constant	go to state 87

State 78:

	OPTIONAL-27 -> Exports .	(Rule 64)

	$default	reduce using rule 64 (OPTIONAL-27)

State 79:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-26 OPTIONAL-27 . STAR-28 STAR-29 Properties STAR-30 LITERAL_NUMBER ';'	(Rule 72)

	$default	reduce using rule 67 (STAR-28)

	STAR-28	go to state 88

State 80:

	STAR-26 -> STAR-26 Critic .	(Rule 62)

	$default	reduce using rule 62 (STAR-26)

State 81:

	Include -> USE WordScoped OP01_QW ';' .	(Rule 51)

	$default	reduce using rule 51 (Include)

State 82:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW . TypeInnerConstant Literal ';'	(Rule 52)

	MY	shift, and go to state 90

	TypeInnerConstant	go to state 89

State 83:

	Subroutine -> SUB WORD LBRACE . LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)

	LBRACE	shift, and go to state 91

State 84:

	Package -> STAR-11 OPTIONAL-12 STAR-13 STAR-14 PLUS-15 LITERAL_NUMBER ';' .	(Rule 36)

	$default	reduce using rule 36 (Package)

State 85:

	Header -> 'use strict;' 'use warnings;' OPTIONAL-16 OUR VERSION_NUMBER_ASSIGN .	(Rule 39)

	$default	reduce using rule 39 (Header)

State 86:

	STAR-7 -> STAR-7 . Subroutine	(Rule 14)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 . PLUS-8	(Rule 18)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'if'	shift, and go to state 136
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 132
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 97
	OP01_NAMED_SCOLON	shift, and go to state 113
	OP01_NAMED_VOID	shift, and go to state 107
	OP01_NAMED_VOID_LPAREN	shift, and go to state 112
	OP01_NAMED_VOID_SCOLON	shift, and go to state 133
	OP01_OPEN	shift, and go to state 92
	OP01_PRINT	shift, and go to state 102
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 131
	OP19_LOOP_CONTROL	shift, and go to state 96
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 138
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	SUB	shift, and go to state 58
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 129

	'for'	reduce using rule 165 (OPTIONAL-44)
	'foreach'	reduce using rule 165 (OPTIONAL-44)
	'while'	reduce using rule 165 (OPTIONAL-44)

	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	SubExpression	go to state 141
	Statement	go to state 137
	ArrayDereference	go to state 139
	WordScoped	go to state 140
	Subroutine	go to state 105
	LoopLabel	go to state 144
	Operation	go to state 117
	Variable	go to state 145
	Operator	go to state 111
	VariableModification	go to state 121
	VariableDeclaration	go to state 94
	OperatorVoid	go to state 95
	Conditional	go to state 118
	PAREN-43	go to state 119
	Expression	go to state 135
	ArrayReference	go to state 134
	OPTIONAL-44	go to state 101
	HashReference	go to state 126
	PLUS-8	go to state 127
	Literal	go to state 128

State 87:

	STAR-6 -> STAR-6 Constant .	(Rule 12)

	$default	reduce using rule 12 (STAR-6)

State 88:

	STAR-28 -> STAR-28 . Include	(Rule 66)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-26 OPTIONAL-27 STAR-28 . STAR-29 Properties STAR-30 LITERAL_NUMBER ';'	(Rule 72)

	USE	shift, and go to state 43

	'our hashref $properties'	reduce using rule 69 (STAR-29)
	'use constant'	reduce using rule 69 (STAR-29)

	Include	go to state 147
	STAR-29	go to state 146

State 89:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant . Literal ';'	(Rule 52)

	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123

	Literal	go to state 148

State 90:

	TypeInnerConstant -> MY . Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 240)

	TYPE_INTEGER	shift, and go to state 149
	WORD	shift, and go to state 152
	WORD_SCOPED	shift, and go to state 150

	Type	go to state 151

State 91:

	Subroutine -> SUB WORD LBRACE LBRACE . MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)

	MY	shift, and go to state 153

State 92:

	Operator -> OP01_OPEN . MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 96)

	MY	shift, and go to state 154

State 93:

	Operator -> OP01_CLOSE . FHREF_SYMBOL	(Rule 97)

	FHREF_SYMBOL	shift, and go to state 155

State 94:

	Statement -> VariableDeclaration .	(Rule 169)

	$default	reduce using rule 169 (Statement)

State 95:

	Statement -> OperatorVoid .	(Rule 168)

	$default	reduce using rule 168 (Statement)

State 96:

	OperatorVoid -> OP19_LOOP_CONTROL . LoopLabel ';'	(Rule 136)

	WORD_UPPERCASE	shift, and go to state 157

	LoopLabel	go to state 156

State 97:

	Operator -> OP01_NAMED . SubExpression	(Rule 94)
	OperatorVoid -> OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ';'	(Rule 134)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	ARGV	shift, and go to state 166
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 160
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	Variable	go to state 164
	Expression	go to state 159
	ArrayReference	go to state 134
	Literal	go to state 128
	Operator	go to state 111
	HashReference	go to state 126
	SubExpression	go to state 162
	VariableSymbolOrSelf	go to state 108
	ListElement	go to state 158
	HashDereference	go to state 142
	ArrayDereference	go to state 139
	TypeInner	go to state 163
	WordScoped	go to state 140

State 98:

	Literal -> LITERAL_NUMBER .	(Rule 248)

	$default	reduce using rule 248 (Literal)

State 99:

	ArrayDereference -> '@{' . Variable '}'	(Rule 214)
	ArrayDereference -> '@{' . OPTIONAL-54 ArrayReference '}'	(Rule 215)

	MY	shift, and go to state 160
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103

	LBRACKET	reduce using rule 213 (OPTIONAL-54)

	VariableSymbolOrSelf	go to state 108
	OPTIONAL-54	go to state 170
	Variable	go to state 168
	TypeInner	go to state 169

State 100:

	HashReference -> LBRACE . HashEntry STAR-57 '}'	(Rule 225)
	HashReference -> LBRACE . '}'	(Rule 226)

	'%{'	shift, and go to state 114
	'}'	shift, and go to state 175
	ENV	shift, and go to state 186
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	OP01_CLOSE	shift, and go to state 185
	OP01_NAMED	shift, and go to state 189
	OP01_NAMED_VOID	shift, and go to state 192
	OP01_OPEN	shift, and go to state 184
	OP01_PRINT	shift, and go to state 191
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 174
	OP07_STRING_REPEAT	shift, and go to state 171
	OP08_MATH_ADD_SUB	shift, and go to state 180
	OP10_NAMED_UNARY	shift, and go to state 193
	OP11_COMPARE_LT_GT	shift, and go to state 188
	OP12_COMPARE_EQ_NE	shift, and go to state 172
	OP19_LOOP_CONTROL	shift, and go to state 187
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 178
	OP22_LOGICAL_NEG	shift, and go to state 195
	OP23_LOGICAL_AND	shift, and go to state 181
	OP24_LOGICAL_OR_XOR	shift, and go to state 177
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 173

	HashEntry	go to state 190
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 179
	Variable	go to state 182
	OpStringOrWord	go to state 194
	Literal	go to state 176
	VarOrLitOrOpStrOrWord	go to state 183

State 101:

	Statement -> OPTIONAL-44 . Loop	(Rule 167)

	'for'	shift, and go to state 197
	'foreach'	shift, and go to state 198
	'while'	shift, and go to state 196

	LoopWhile	go to state 199
	LoopForEach	go to state 201
	Loop	go to state 202
	LoopFor	go to state 200

State 102:

	OperatorVoid -> OP01_PRINT . OPTIONAL-38 ListElements ';'	(Rule 129)
	OperatorVoid -> OP01_PRINT . FHREF_SYMBOL_BRACES ListElements ';'	(Rule 130)

	FHREF_SYMBOL_BRACES	shift, and go to state 205
	STDOUT_STDERR	shift, and go to state 204

	'%{'	reduce using rule 126 (OPTIONAL-38)
	'@{'	reduce using rule 126 (OPTIONAL-38)
	'undef'	reduce using rule 126 (OPTIONAL-38)
	ARGV	reduce using rule 126 (OPTIONAL-38)
	CONSTANT_CALL_SCOPED	reduce using rule 126 (OPTIONAL-38)
	LBRACE	reduce using rule 126 (OPTIONAL-38)
	LBRACKET	reduce using rule 126 (OPTIONAL-38)
	LITERAL_NUMBER	reduce using rule 126 (OPTIONAL-38)
	LITERAL_STRING	reduce using rule 126 (OPTIONAL-38)
	LPAREN	reduce using rule 126 (OPTIONAL-38)
	MY	reduce using rule 126 (OPTIONAL-38)
	OP01_CLOSE	reduce using rule 126 (OPTIONAL-38)
	OP01_NAMED	reduce using rule 126 (OPTIONAL-38)
	OP01_OPEN	reduce using rule 126 (OPTIONAL-38)
	OP01_QW	reduce using rule 126 (OPTIONAL-38)
	OP03_MATH_INC_DEC	reduce using rule 126 (OPTIONAL-38)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 126 (OPTIONAL-38)
	OP05_LOGICAL_NEG	reduce using rule 126 (OPTIONAL-38)
	OP05_MATH_NEG_LPAREN	reduce using rule 126 (OPTIONAL-38)
	OP10_NAMED_UNARY	reduce using rule 126 (OPTIONAL-38)
	OP22_LOGICAL_NEG	reduce using rule 126 (OPTIONAL-38)
	OP22_LOGICAL_NEG_LPAREN	reduce using rule 126 (OPTIONAL-38)
	SELF	reduce using rule 126 (OPTIONAL-38)
	VARIABLE_SYMBOL	reduce using rule 126 (OPTIONAL-38)
	WORD	reduce using rule 126 (OPTIONAL-38)
	WORD_SCOPED	reduce using rule 126 (OPTIONAL-38)
	WORD_UPPERCASE	reduce using rule 126 (OPTIONAL-38)

	PAREN-37	go to state 203
	OPTIONAL-38	go to state 206

State 103:

	VariableSymbolOrSelf -> VARIABLE_SYMBOL .	(Rule 246)

	$default	reduce using rule 246 (VariableSymbolOrSelf)

State 104:

	SubExpression -> 'undef' .	(Rule 150)

	$default	reduce using rule 150 (SubExpression)

State 105:

	STAR-7 -> STAR-7 Subroutine .	(Rule 14)

	$default	reduce using rule 14 (STAR-7)

State 106:

	Operator -> OP22_LOGICAL_NEG_LPAREN . SubExpression ')'	(Rule 120)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	WordScoped	go to state 140
	ArrayDereference	go to state 139
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	SubExpression	go to state 207
	HashReference	go to state 126
	Literal	go to state 128
	Operator	go to state 111
	ArrayReference	go to state 134
	Expression	go to state 159
	Variable	go to state 164

State 107:

	OperatorVoid -> OP01_NAMED_VOID . ListElements ';'	(Rule 133)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	ARGV	shift, and go to state 166
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 160
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	HashReference	go to state 126
	Literal	go to state 128
	Operator	go to state 111
	ListElements	go to state 208
	Expression	go to state 159
	ArrayReference	go to state 134
	Variable	go to state 164
	TypeInner	go to state 163
	ArrayDereference	go to state 139
	WordScoped	go to state 140
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	ListElement	go to state 209
	SubExpression	go to state 210

State 108:

	Variable -> VariableSymbolOrSelf . STAR-50	(Rule 191)

	$default	reduce using rule 190 (STAR-50)

	STAR-50	go to state 211

State 109:

	Operator -> OP10_NAMED_UNARY . SubExpression	(Rule 110)
	Operator -> OP10_NAMED_UNARY .	(Rule 111)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	')'	reduce using rule 111 (Operator)
	';'	reduce using rule 111 (Operator)
	']'	reduce using rule 111 (Operator)
	'}'	reduce using rule 111 (Operator)
	OP04_MATH_POW	reduce using rule 111 (Operator)
	OP06_REGEX_BIND	reduce using rule 111 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 111 (Operator)
	OP07_STRING_REPEAT	reduce using rule 111 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 111 (Operator)
	OP08_STRING_CAT	reduce using rule 111 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 111 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 111 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 111 (Operator)
	OP13_BITWISE_AND	reduce using rule 111 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 111 (Operator)
	OP15_LOGICAL_AND	reduce using rule 111 (Operator)
	OP16_LOGICAL_OR	reduce using rule 111 (Operator)
	OP17_LIST_RANGE	reduce using rule 111 (Operator)
	OP18_TERNARY	reduce using rule 111 (Operator)
	OP21_LIST_COMMA	reduce using rule 111 (Operator)
	OP23_LOGICAL_AND	reduce using rule 111 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 111 (Operator)

	Expression	go to state 159
	ArrayReference	go to state 134
	Variable	go to state 164
	HashReference	go to state 126
	Operator	go to state 111
	Literal	go to state 128
	SubExpression	go to state 212
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	ArrayDereference	go to state 139
	WordScoped	go to state 140

State 110:

	Operator -> OP22_LOGICAL_NEG . SubExpression	(Rule 121)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	ArrayDereference	go to state 139
	WordScoped	go to state 140
	SubExpression	go to state 213
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	HashReference	go to state 126
	Literal	go to state 128
	Operator	go to state 111
	Expression	go to state 159
	ArrayReference	go to state 134
	Variable	go to state 164

State 111:

	Expression -> Operator .	(Rule 143)

	$default	reduce using rule 143 (Expression)

State 112:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN . OPTIONAL-39 ')' ';'	(Rule 132)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	ARGV	shift, and go to state 166
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 160
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	')'	reduce using rule 128 (OPTIONAL-39)

	SubExpression	go to state 210
	ListElement	go to state 209
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	WordScoped	go to state 140
	ArrayDereference	go to state 139
	TypeInner	go to state 163
	ArrayReference	go to state 134
	Expression	go to state 159
	Variable	go to state 164
	HashReference	go to state 126
	Literal	go to state 128
	Operator	go to state 111
	ListElements	go to state 214
	OPTIONAL-39	go to state 215

State 113:

	Operation -> OP01_NAMED_SCOLON .	(Rule 90)

	$default	reduce using rule 90 (Operation)

State 114:

	HashDereference -> '%{' . Variable '}'	(Rule 229)
	HashDereference -> '%{' . OPTIONAL-58 HashReference '}'	(Rule 230)

	MY	shift, and go to state 160
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103

	LBRACE	reduce using rule 228 (OPTIONAL-58)

	VariableSymbolOrSelf	go to state 108
	Variable	go to state 216
	OPTIONAL-58	go to state 218
	TypeInner	go to state 217

State 115:

	Operator -> OP03_MATH_INC_DEC . Variable	(Rule 98)

	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103

	VariableSymbolOrSelf	go to state 108
	Variable	go to state 219

State 116:

	Expression -> CONSTANT_CALL_SCOPED .	(Rule 145)

	$default	reduce using rule 145 (Expression)

State 117:

	PLUS-8 -> Operation .	(Rule 17)

	$default	reduce using rule 17 (PLUS-8)

State 118:

	Statement -> Conditional .	(Rule 166)

	$default	reduce using rule 166 (Statement)

State 119:

	OPTIONAL-44 -> PAREN-43 .	(Rule 164)

	$default	reduce using rule 164 (OPTIONAL-44)

State 120:

	Operator -> OP05_LOGICAL_NEG . SubExpression	(Rule 102)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	Expression	go to state 159
	ArrayReference	go to state 134
	Variable	go to state 164
	HashReference	go to state 126
	Literal	go to state 128
	Operator	go to state 111
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	SubExpression	go to state 220
	ArrayDereference	go to state 139
	WordScoped	go to state 140

State 121:

	Statement -> VariableModification . ';'	(Rule 170)

	';'	shift, and go to state 221

State 122:

	Operator -> OP05_BITWISE_NEG_LPAREN . SubExpression ')'	(Rule 101)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	ArrayDereference	go to state 139
	WordScoped	go to state 140
	SubExpression	go to state 222
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	Operator	go to state 111
	Literal	go to state 128
	HashReference	go to state 126
	Variable	go to state 164
	Expression	go to state 159
	ArrayReference	go to state 134

State 123:

	Literal -> LITERAL_STRING .	(Rule 249)

	$default	reduce using rule 249 (Literal)

State 124:

	Operator -> OP05_MATH_NEG_LPAREN . SubExpression ')'	(Rule 103)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	ArrayDereference	go to state 139
	WordScoped	go to state 140
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	SubExpression	go to state 223
	Literal	go to state 128
	Operator	go to state 111
	HashReference	go to state 126
	Variable	go to state 164
	Expression	go to state 159
	ArrayReference	go to state 134

State 125:

	ArrayReference -> LBRACKET . OPTIONAL-53 ']'	(Rule 211)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	ARGV	shift, and go to state 166
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 160
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	']'	reduce using rule 210 (OPTIONAL-53)

	SubExpression	go to state 210
	ListElement	go to state 209
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	WordScoped	go to state 140
	ArrayDereference	go to state 139
	TypeInner	go to state 163
	Variable	go to state 164
	OPTIONAL-53	go to state 225
	Expression	go to state 159
	ArrayReference	go to state 134
	Operator	go to state 111
	ListElements	go to state 224
	Literal	go to state 128
	HashReference	go to state 126

State 126:

	SubExpression -> HashReference .	(Rule 155)

	$default	reduce using rule 155 (SubExpression)

State 127:

	PLUS-8 -> PLUS-8 . Operation	(Rule 16)
	Program -> SHEBANG OPTIONAL-3 USE_RPERL Header STAR-4 STAR-5 STAR-6 STAR-7 PLUS-8 .	(Rule 18)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'if'	shift, and go to state 136
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 132
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 97
	OP01_NAMED_SCOLON	shift, and go to state 113
	OP01_NAMED_VOID	shift, and go to state 107
	OP01_NAMED_VOID_LPAREN	shift, and go to state 112
	OP01_NAMED_VOID_SCOLON	shift, and go to state 133
	OP01_OPEN	shift, and go to state 92
	OP01_PRINT	shift, and go to state 102
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 131
	OP19_LOOP_CONTROL	shift, and go to state 96
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 138
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 129

	$end	reduce using rule 18 (Program)
	'for'	reduce using rule 165 (OPTIONAL-44)
	'foreach'	reduce using rule 165 (OPTIONAL-44)
	'while'	reduce using rule 165 (OPTIONAL-44)

	PAREN-43	go to state 119
	Conditional	go to state 118
	OperatorVoid	go to state 95
	VariableDeclaration	go to state 94
	VariableModification	go to state 121
	HashReference	go to state 126
	Literal	go to state 128
	ArrayReference	go to state 134
	Expression	go to state 135
	OPTIONAL-44	go to state 101
	Statement	go to state 137
	WordScoped	go to state 140
	ArrayDereference	go to state 139
	SubExpression	go to state 141
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	Operator	go to state 111
	LoopLabel	go to state 144
	Variable	go to state 145
	Operation	go to state 226

State 128:

	SubExpression -> Literal .	(Rule 151)

	$default	reduce using rule 151 (SubExpression)

State 129:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 144)
	LoopLabel -> WORD_UPPERCASE .	(Rule 233)

	LPAREN	shift, and go to state 227

	COLON	reduce using rule 233 (LoopLabel)

State 130:

	Operator -> LPAREN . OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')'	(Rule 93)
	Operator -> LPAREN . OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')'	(Rule 95)
	SubExpression -> LPAREN . SubExpression ')'	(Rule 157)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 229
	OP01_OPEN	shift, and go to state 92
	OP01_PRINT	shift, and go to state 228
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	SubExpression	go to state 230
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	WordScoped	go to state 140
	ArrayDereference	go to state 139
	Variable	go to state 164
	Expression	go to state 159
	ArrayReference	go to state 134
	Operator	go to state 111
	Literal	go to state 128
	HashReference	go to state 126

State 131:

	Operation -> OP10_NAMED_UNARY_SCOLON .	(Rule 91)

	$default	reduce using rule 91 (Operation)

State 132:

	VariableDeclaration -> MY . Type VARIABLE_SYMBOL ';'	(Rule 195)
	VariableDeclaration -> MY . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExpIn	(Rule 196)
	VariableDeclaration -> MY . Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 197)
	VariableDeclaration -> MY . TYPE_FHREF FHREF_SYMBOL ';'	(Rule 198)

	TYPE_FHREF	shift, and go to state 232
	TYPE_INTEGER	shift, and go to state 149
	WORD	shift, and go to state 152
	WORD_SCOPED	shift, and go to state 150

	Type	go to state 231

State 133:

	OperatorVoid -> OP01_NAMED_VOID_SCOLON .	(Rule 131)

	$default	reduce using rule 131 (OperatorVoid)

State 134:

	SubExpression -> ArrayReference .	(Rule 153)

	$default	reduce using rule 153 (SubExpression)

State 135:

	Operation -> Expression . ';'	(Rule 89)
	SubExpression -> Expression .	(Rule 149)

	';'	shift, and go to state 233

	OP04_MATH_POW	reduce using rule 149 (SubExpression)
	OP06_REGEX_BIND	reduce using rule 149 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 149 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 149 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 149 (SubExpression)
	OP08_STRING_CAT	reduce using rule 149 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 149 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 149 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 149 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 149 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 149 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 149 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 149 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 149 (SubExpression)
	OP18_TERNARY	reduce using rule 149 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 149 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 149 (SubExpression)

State 136:

	Conditional -> 'if' . LPAREN SubExpression ')' CodeBlock STAR-46 OPTIONAL-48	(Rule 177)

	LPAREN	shift, and go to state 234

State 137:

	Operation -> Statement .	(Rule 92)

	$default	reduce using rule 92 (Operation)

State 138:

	OperatorVoid -> OP19_LOOP_CONTROL_SCOLON .	(Rule 135)

	$default	reduce using rule 135 (OperatorVoid)

State 139:

	SubExpression -> ArrayDereference .	(Rule 154)

	$default	reduce using rule 154 (SubExpression)

State 140:

	Expression -> WordScoped . LPAREN OPTIONAL-40 ')'	(Rule 146)
	Expression -> WordScoped . OP02_METHOD_THINARROW_NEW OPTIONAL-42 ')'	(Rule 148)

	LPAREN	shift, and go to state 235
	OP02_METHOD_THINARROW_NEW	shift, and go to state 236

State 141:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252
	OP23_LOGICAL_AND	shift, and go to state 246
	OP24_LOGICAL_OR_XOR	shift, and go to state 242

State 142:

	SubExpression -> HashDereference .	(Rule 156)

	$default	reduce using rule 156 (SubExpression)

State 143:

	VariableSymbolOrSelf -> SELF .	(Rule 247)

	$default	reduce using rule 247 (VariableSymbolOrSelf)

State 144:

	PAREN-43 -> LoopLabel . COLON	(Rule 163)

	COLON	shift, and go to state 254

State 145:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 99)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-41 ')'	(Rule 147)
	SubExpression -> Variable .	(Rule 152)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN SubExpressionOrInput	(Rule 199)
	VariableModification -> Variable . OP19_VARIABLE_ASSIGN_BY SubExpression	(Rule 200)

	OP02_METHOD_THINARROW	shift, and go to state 258
	OP03_MATH_INC_DEC	shift, and go to state 255
	OP19_VARIABLE_ASSIGN	shift, and go to state 256
	OP19_VARIABLE_ASSIGN_BY	shift, and go to state 257

	')'	reduce using rule 152 (SubExpression)
	OP04_MATH_POW	reduce using rule 152 (SubExpression)
	OP06_REGEX_BIND	reduce using rule 152 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 152 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 152 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 152 (SubExpression)
	OP08_STRING_CAT	reduce using rule 152 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 152 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 152 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 152 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 152 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 152 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 152 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 152 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 152 (SubExpression)
	OP18_TERNARY	reduce using rule 152 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 152 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 152 (SubExpression)

State 146:

	STAR-29 -> STAR-29 . Constant	(Rule 68)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-26 OPTIONAL-27 STAR-28 STAR-29 . Properties STAR-30 LITERAL_NUMBER ';'	(Rule 72)

	'our hashref $properties'	shift, and go to state 259
	'use constant'	shift, and go to state 57

	Constant	go to state 261
	Properties	go to state 260

State 147:

	STAR-28 -> STAR-28 Include .	(Rule 66)

	$default	reduce using rule 66 (STAR-28)

State 148:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal . ';'	(Rule 52)

	';'	shift, and go to state 262

State 149:

	Type -> TYPE_INTEGER .	(Rule 236)

	$default	reduce using rule 236 (Type)

State 150:

	Type -> WORD_SCOPED .	(Rule 235)

	$default	reduce using rule 235 (Type)

State 151:

	TypeInnerConstant -> MY Type . '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 240)

	'$TYPED_'	shift, and go to state 263

State 152:

	Type -> WORD .	(Rule 234)

	$default	reduce using rule 234 (Type)

State 153:

	Subroutine -> SUB WORD LBRACE LBRACE MY . Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)

	TYPE_INTEGER	shift, and go to state 149
	WORD	shift, and go to state 152
	WORD_SCOPED	shift, and go to state 150

	Type	go to state 264

State 154:

	Operator -> OP01_OPEN MY . TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 96)

	TYPE_FHREF	shift, and go to state 265

State 155:

	Operator -> OP01_CLOSE FHREF_SYMBOL .	(Rule 97)

	$default	reduce using rule 97 (Operator)

State 156:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel . ';'	(Rule 136)

	';'	shift, and go to state 266

State 157:

	LoopLabel -> WORD_UPPERCASE .	(Rule 233)

	$default	reduce using rule 233 (LoopLabel)

State 158:

	OperatorVoid -> OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ';'	(Rule 134)

	OP21_LIST_COMMA	shift, and go to state 267

State 159:

	SubExpression -> Expression .	(Rule 149)

	$default	reduce using rule 149 (SubExpression)

State 160:

	TypeInner -> MY . Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN	(Rule 237)

	TYPE_INTEGER	shift, and go to state 149
	WORD	shift, and go to state 152
	WORD_SCOPED	shift, and go to state 150

	Type	go to state 268

State 161:

	Expression -> WORD_UPPERCASE . LPAREN ')'	(Rule 144)

	LPAREN	shift, and go to state 227

State 162:

	Operator -> OP01_NAMED SubExpression .	(Rule 94)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)
	ListElement -> SubExpression .	(Rule 205)

	')'	reduce using rule 94 (Operator)
	';'	reduce using rule 94 (Operator)
	OP04_MATH_POW	reduce using rule 94 (Operator)
	OP06_REGEX_BIND	reduce using rule 94 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 94 (Operator)
	OP07_STRING_REPEAT	reduce using rule 94 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 94 (Operator)
	OP08_STRING_CAT	reduce using rule 94 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 94 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 94 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 94 (Operator)
	OP13_BITWISE_AND	reduce using rule 94 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 94 (Operator)
	OP15_LOGICAL_AND	reduce using rule 94 (Operator)
	OP16_LOGICAL_OR	reduce using rule 94 (Operator)
	OP17_LIST_RANGE	reduce using rule 94 (Operator)
	OP18_TERNARY	reduce using rule 94 (Operator)
	OP21_LIST_COMMA	reduce using rule 205 (ListElement)
	OP23_LOGICAL_AND	reduce using rule 94 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 94 (Operator)

State 163:

	ListElement -> TypeInner . SubExpression	(Rule 206)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	SubExpression	go to state 269
	WordScoped	go to state 140
	ArrayDereference	go to state 139
	Expression	go to state 159
	ArrayReference	go to state 134
	Variable	go to state 164
	HashReference	go to state 126
	Literal	go to state 128
	Operator	go to state 111

State 164:

	Operator -> Variable . OP03_MATH_INC_DEC	(Rule 99)
	Expression -> Variable . OP02_METHOD_THINARROW LPAREN OPTIONAL-41 ')'	(Rule 147)
	SubExpression -> Variable .	(Rule 152)

	OP02_METHOD_THINARROW	shift, and go to state 258
	OP03_MATH_INC_DEC	shift, and go to state 255

	')'	reduce using rule 152 (SubExpression)
	';'	reduce using rule 152 (SubExpression)
	']'	reduce using rule 152 (SubExpression)
	'}'	reduce using rule 152 (SubExpression)
	OP04_MATH_POW	reduce using rule 152 (SubExpression)
	OP06_REGEX_BIND	reduce using rule 152 (SubExpression)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 152 (SubExpression)
	OP07_STRING_REPEAT	reduce using rule 152 (SubExpression)
	OP08_MATH_ADD_SUB	reduce using rule 152 (SubExpression)
	OP08_STRING_CAT	reduce using rule 152 (SubExpression)
	OP09_BITWISE_SHIFT	reduce using rule 152 (SubExpression)
	OP11_COMPARE_LT_GT	reduce using rule 152 (SubExpression)
	OP12_COMPARE_EQ_NE	reduce using rule 152 (SubExpression)
	OP13_BITWISE_AND	reduce using rule 152 (SubExpression)
	OP14_BITWISE_OR_XOR	reduce using rule 152 (SubExpression)
	OP15_LOGICAL_AND	reduce using rule 152 (SubExpression)
	OP16_LOGICAL_OR	reduce using rule 152 (SubExpression)
	OP17_LIST_RANGE	reduce using rule 152 (SubExpression)
	OP18_TERNARY	reduce using rule 152 (SubExpression)
	OP21_LIST_COMMA	reduce using rule 152 (SubExpression)
	OP23_LOGICAL_AND	reduce using rule 152 (SubExpression)
	OP24_LOGICAL_OR_XOR	reduce using rule 152 (SubExpression)

State 165:

	Operator -> OP01_NAMED . SubExpression	(Rule 94)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	ArrayDereference	go to state 139
	WordScoped	go to state 140
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	SubExpression	go to state 270
	Operator	go to state 111
	Literal	go to state 128
	HashReference	go to state 126
	Variable	go to state 164
	ArrayReference	go to state 134
	Expression	go to state 159

State 166:

	ListElement -> ARGV .	(Rule 208)

	$default	reduce using rule 208 (ListElement)

State 167:

	ListElement -> OP01_QW .	(Rule 207)

	$default	reduce using rule 207 (ListElement)

State 168:

	ArrayDereference -> '@{' Variable . '}'	(Rule 214)

	'}'	shift, and go to state 271

State 169:

	OPTIONAL-54 -> TypeInner .	(Rule 212)

	$default	reduce using rule 212 (OPTIONAL-54)

State 170:

	ArrayDereference -> '@{' OPTIONAL-54 . ArrayReference '}'	(Rule 215)

	LBRACKET	shift, and go to state 125

	ArrayReference	go to state 272

State 171:

	OpStringOrWord -> OP07_STRING_REPEAT .	(Rule 266)

	$default	reduce using rule 266 (OpStringOrWord)

State 172:

	OpStringOrWord -> OP12_COMPARE_EQ_NE .	(Rule 261)

	$default	reduce using rule 261 (OpStringOrWord)

State 173:

	OpStringOrWord -> WORD .	(Rule 272)

	$default	reduce using rule 272 (OpStringOrWord)

State 174:

	OpStringOrWord -> OP07_MATH_MULT_DIV_MOD .	(Rule 265)

	$default	reduce using rule 265 (OpStringOrWord)

State 175:

	HashReference -> LBRACE '}' .	(Rule 226)

	$default	reduce using rule 226 (HashReference)

State 176:

	VarOrLitOrOpStrOrWord -> Literal .	(Rule 244)

	$default	reduce using rule 244 (VarOrLitOrOpStrOrWord)

State 177:

	OpStringOrWord -> OP24_LOGICAL_OR_XOR .	(Rule 256)

	$default	reduce using rule 256 (OpStringOrWord)

State 178:

	OpStringOrWord -> OP19_LOOP_CONTROL_SCOLON .	(Rule 259)

	$default	reduce using rule 259 (OpStringOrWord)

State 179:

	HashEntry -> HashDereference .	(Rule 219)

	$default	reduce using rule 219 (HashEntry)

State 180:

	OpStringOrWord -> OP08_MATH_ADD_SUB .	(Rule 264)

	$default	reduce using rule 264 (OpStringOrWord)

State 181:

	OpStringOrWord -> OP23_LOGICAL_AND .	(Rule 257)

	$default	reduce using rule 257 (OpStringOrWord)

State 182:

	VarOrLitOrOpStrOrWord -> Variable .	(Rule 243)

	$default	reduce using rule 243 (VarOrLitOrOpStrOrWord)

State 183:

	HashEntry -> VarOrLitOrOpStrOrWord . OP20_HASH_FATARROW OPTIONAL-55 SubExpression	(Rule 218)

	OP20_HASH_FATARROW	shift, and go to state 273

State 184:

	OpStringOrWord -> OP01_OPEN .	(Rule 269)

	$default	reduce using rule 269 (OpStringOrWord)

State 185:

	OpStringOrWord -> OP01_CLOSE .	(Rule 268)

	$default	reduce using rule 268 (OpStringOrWord)

State 186:

	HashEntry -> ENV .	(Rule 220)

	$default	reduce using rule 220 (HashEntry)

State 187:

	OpStringOrWord -> OP19_LOOP_CONTROL .	(Rule 260)

	$default	reduce using rule 260 (OpStringOrWord)

State 188:

	OpStringOrWord -> OP11_COMPARE_LT_GT .	(Rule 262)

	$default	reduce using rule 262 (OpStringOrWord)

State 189:

	OpStringOrWord -> OP01_NAMED .	(Rule 267)

	$default	reduce using rule 267 (OpStringOrWord)

State 190:

	HashReference -> LBRACE HashEntry . STAR-57 '}'	(Rule 225)

	$default	reduce using rule 224 (STAR-57)

	STAR-57	go to state 274

State 191:

	OpStringOrWord -> OP01_PRINT .	(Rule 271)

	$default	reduce using rule 271 (OpStringOrWord)

State 192:

	OpStringOrWord -> OP01_NAMED_VOID .	(Rule 270)

	$default	reduce using rule 270 (OpStringOrWord)

State 193:

	OpStringOrWord -> OP10_NAMED_UNARY .	(Rule 263)

	$default	reduce using rule 263 (OpStringOrWord)

State 194:

	VarOrLitOrOpStrOrWord -> OpStringOrWord .	(Rule 245)

	$default	reduce using rule 245 (VarOrLitOrOpStrOrWord)

State 195:

	OpStringOrWord -> OP22_LOGICAL_NEG .	(Rule 258)

	$default	reduce using rule 258 (OpStringOrWord)

State 196:

	LoopWhile -> 'while' . LPAREN SubExpression ')' CodeBlock	(Rule 184)
	LoopWhile -> 'while' . LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock	(Rule 185)

	LPAREN	shift, and go to state 275
	LPAREN_MY	shift, and go to state 276

State 197:

	LoopFor -> 'for' . MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 181)
	LoopFor -> 'for' . LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 182)

	LPAREN_MY	shift, and go to state 277
	MY	shift, and go to state 278

State 198:

	LoopForEach -> 'foreach' . MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 183)

	MY	shift, and go to state 279

State 199:

	Loop -> LoopWhile .	(Rule 180)

	$default	reduce using rule 180 (Loop)

State 200:

	Loop -> LoopFor .	(Rule 178)

	$default	reduce using rule 178 (Loop)

State 201:

	Loop -> LoopForEach .	(Rule 179)

	$default	reduce using rule 179 (Loop)

State 202:

	Statement -> OPTIONAL-44 Loop .	(Rule 167)

	$default	reduce using rule 167 (Statement)

State 203:

	OPTIONAL-38 -> PAREN-37 .	(Rule 125)

	$default	reduce using rule 125 (OPTIONAL-38)

State 204:

	PAREN-37 -> STDOUT_STDERR .	(Rule 124)

	$default	reduce using rule 124 (PAREN-37)

State 205:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES . ListElements ';'	(Rule 130)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	ARGV	shift, and go to state 166
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 160
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	WordScoped	go to state 140
	ArrayDereference	go to state 139
	TypeInner	go to state 163
	SubExpression	go to state 210
	ListElement	go to state 209
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	HashReference	go to state 126
	ListElements	go to state 280
	Literal	go to state 128
	Operator	go to state 111
	Expression	go to state 159
	ArrayReference	go to state 134
	Variable	go to state 164

State 206:

	OperatorVoid -> OP01_PRINT OPTIONAL-38 . ListElements ';'	(Rule 129)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	ARGV	shift, and go to state 166
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 160
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	Operator	go to state 111
	Literal	go to state 128
	ListElements	go to state 281
	HashReference	go to state 126
	Variable	go to state 164
	Expression	go to state 159
	ArrayReference	go to state 134
	ArrayDereference	go to state 139
	WordScoped	go to state 140
	TypeInner	go to state 163
	HashDereference	go to state 142
	ListElement	go to state 209
	VariableSymbolOrSelf	go to state 108
	SubExpression	go to state 210

State 207:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> OP22_LOGICAL_NEG_LPAREN SubExpression . ')'	(Rule 120)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	')'	shift, and go to state 282
	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252
	OP23_LOGICAL_AND	shift, and go to state 246
	OP24_LOGICAL_OR_XOR	shift, and go to state 242

State 208:

	OperatorVoid -> OP01_NAMED_VOID ListElements . ';'	(Rule 133)

	';'	shift, and go to state 283

State 209:

	ListElements -> ListElement . STAR-52	(Rule 204)

	$default	reduce using rule 203 (STAR-52)

	STAR-52	go to state 284

State 210:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)
	ListElement -> SubExpression .	(Rule 205)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252
	OP23_LOGICAL_AND	shift, and go to state 246
	OP24_LOGICAL_OR_XOR	shift, and go to state 242

	')'	reduce using rule 205 (ListElement)
	';'	reduce using rule 205 (ListElement)
	']'	reduce using rule 205 (ListElement)
	OP21_LIST_COMMA	reduce using rule 205 (ListElement)

State 211:

	STAR-50 -> STAR-50 . VariableRetrieval	(Rule 189)
	Variable -> VariableSymbolOrSelf STAR-50 .	(Rule 191)

	OP02_ARRAY_THINARROW	shift, and go to state 286
	OP02_HASH_THINARROW	shift, and go to state 285

	')'	reduce using rule 191 (Variable)
	';'	reduce using rule 191 (Variable)
	']'	reduce using rule 191 (Variable)
	'}'	reduce using rule 191 (Variable)
	COLON	reduce using rule 191 (Variable)
	OP02_METHOD_THINARROW	reduce using rule 191 (Variable)
	OP03_MATH_INC_DEC	reduce using rule 191 (Variable)
	OP04_MATH_POW	reduce using rule 191 (Variable)
	OP06_REGEX_BIND	reduce using rule 191 (Variable)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 191 (Variable)
	OP07_STRING_REPEAT	reduce using rule 191 (Variable)
	OP08_MATH_ADD_SUB	reduce using rule 191 (Variable)
	OP08_STRING_CAT	reduce using rule 191 (Variable)
	OP09_BITWISE_SHIFT	reduce using rule 191 (Variable)
	OP11_COMPARE_LT_GT	reduce using rule 191 (Variable)
	OP12_COMPARE_EQ_NE	reduce using rule 191 (Variable)
	OP13_BITWISE_AND	reduce using rule 191 (Variable)
	OP14_BITWISE_OR_XOR	reduce using rule 191 (Variable)
	OP15_LOGICAL_AND	reduce using rule 191 (Variable)
	OP16_LOGICAL_OR	reduce using rule 191 (Variable)
	OP17_LIST_RANGE	reduce using rule 191 (Variable)
	OP18_TERNARY	reduce using rule 191 (Variable)
	OP19_VARIABLE_ASSIGN	reduce using rule 191 (Variable)
	OP19_VARIABLE_ASSIGN_BY	reduce using rule 191 (Variable)
	OP20_HASH_FATARROW	reduce using rule 191 (Variable)
	OP21_LIST_COMMA	reduce using rule 191 (Variable)
	OP23_LOGICAL_AND	reduce using rule 191 (Variable)
	OP24_LOGICAL_OR_XOR	reduce using rule 191 (Variable)

	VariableRetrieval	go to state 287

State 212:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> OP10_NAMED_UNARY SubExpression .	(Rule 110)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250

	')'	reduce using rule 110 (Operator)
	';'	reduce using rule 110 (Operator)
	']'	reduce using rule 110 (Operator)
	'}'	reduce using rule 110 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 110 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 110 (Operator)
	OP13_BITWISE_AND	reduce using rule 110 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 110 (Operator)
	OP15_LOGICAL_AND	reduce using rule 110 (Operator)
	OP16_LOGICAL_OR	reduce using rule 110 (Operator)
	OP17_LIST_RANGE	reduce using rule 110 (Operator)
	OP18_TERNARY	reduce using rule 110 (Operator)
	OP21_LIST_COMMA	reduce using rule 110 (Operator)
	OP23_LOGICAL_AND	reduce using rule 110 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 110 (Operator)

State 213:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> OP22_LOGICAL_NEG SubExpression .	(Rule 121)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252

	')'	reduce using rule 121 (Operator)
	';'	reduce using rule 121 (Operator)
	']'	reduce using rule 121 (Operator)
	'}'	reduce using rule 121 (Operator)
	OP21_LIST_COMMA	reduce using rule 121 (Operator)
	OP23_LOGICAL_AND	reduce using rule 121 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 121 (Operator)

State 214:

	OPTIONAL-39 -> ListElements .	(Rule 127)

	$default	reduce using rule 127 (OPTIONAL-39)

State 215:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-39 . ')' ';'	(Rule 132)

	')'	shift, and go to state 288

State 216:

	HashDereference -> '%{' Variable . '}'	(Rule 229)

	'}'	shift, and go to state 289

State 217:

	OPTIONAL-58 -> TypeInner .	(Rule 227)

	$default	reduce using rule 227 (OPTIONAL-58)

State 218:

	HashDereference -> '%{' OPTIONAL-58 . HashReference '}'	(Rule 230)

	LBRACE	shift, and go to state 100

	HashReference	go to state 290

State 219:

	Operator -> OP03_MATH_INC_DEC Variable .	(Rule 98)

	$default	reduce using rule 98 (Operator)

State 220:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> OP05_LOGICAL_NEG SubExpression .	(Rule 102)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 247

	')'	reduce using rule 102 (Operator)
	';'	reduce using rule 102 (Operator)
	']'	reduce using rule 102 (Operator)
	'}'	reduce using rule 102 (Operator)
	OP06_REGEX_BIND	reduce using rule 102 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 102 (Operator)
	OP07_STRING_REPEAT	reduce using rule 102 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 102 (Operator)
	OP08_STRING_CAT	reduce using rule 102 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 102 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 102 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 102 (Operator)
	OP13_BITWISE_AND	reduce using rule 102 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 102 (Operator)
	OP15_LOGICAL_AND	reduce using rule 102 (Operator)
	OP16_LOGICAL_OR	reduce using rule 102 (Operator)
	OP17_LIST_RANGE	reduce using rule 102 (Operator)
	OP18_TERNARY	reduce using rule 102 (Operator)
	OP21_LIST_COMMA	reduce using rule 102 (Operator)
	OP23_LOGICAL_AND	reduce using rule 102 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 102 (Operator)

State 221:

	Statement -> VariableModification ';' .	(Rule 170)

	$default	reduce using rule 170 (Statement)

State 222:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> OP05_BITWISE_NEG_LPAREN SubExpression . ')'	(Rule 101)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	')'	shift, and go to state 291
	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252
	OP23_LOGICAL_AND	shift, and go to state 246
	OP24_LOGICAL_OR_XOR	shift, and go to state 242

State 223:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> OP05_MATH_NEG_LPAREN SubExpression . ')'	(Rule 103)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	')'	shift, and go to state 292
	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252
	OP23_LOGICAL_AND	shift, and go to state 246
	OP24_LOGICAL_OR_XOR	shift, and go to state 242

State 224:

	OPTIONAL-53 -> ListElements .	(Rule 209)

	$default	reduce using rule 209 (OPTIONAL-53)

State 225:

	ArrayReference -> LBRACKET OPTIONAL-53 . ']'	(Rule 211)

	']'	shift, and go to state 293

State 226:

	PLUS-8 -> PLUS-8 Operation .	(Rule 16)

	$default	reduce using rule 16 (PLUS-8)

State 227:

	Expression -> WORD_UPPERCASE LPAREN . ')'	(Rule 144)

	')'	shift, and go to state 294

State 228:

	Operator -> LPAREN OP01_PRINT . FHREF_SYMBOL_BRACES ListElements ')'	(Rule 93)

	FHREF_SYMBOL_BRACES	shift, and go to state 295

State 229:

	Operator -> OP01_NAMED . SubExpression	(Rule 94)
	Operator -> LPAREN OP01_NAMED . ListElement OP21_LIST_COMMA ListElements ')'	(Rule 95)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	ARGV	shift, and go to state 166
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 160
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	HashReference	go to state 126
	Literal	go to state 128
	Operator	go to state 111
	Expression	go to state 159
	ArrayReference	go to state 134
	Variable	go to state 164
	ArrayDereference	go to state 139
	WordScoped	go to state 140
	TypeInner	go to state 163
	SubExpression	go to state 162
	VariableSymbolOrSelf	go to state 108
	ListElement	go to state 296
	HashDereference	go to state 142

State 230:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)
	SubExpression -> LPAREN SubExpression . ')'	(Rule 157)

	')'	shift, and go to state 297
	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252
	OP23_LOGICAL_AND	shift, and go to state 246
	OP24_LOGICAL_OR_XOR	shift, and go to state 242

State 231:

	VariableDeclaration -> MY Type . VARIABLE_SYMBOL ';'	(Rule 195)
	VariableDeclaration -> MY Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExpIn	(Rule 196)
	VariableDeclaration -> MY Type . VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 197)

	VARIABLE_SYMBOL	shift, and go to state 298

State 232:

	VariableDeclaration -> MY TYPE_FHREF . FHREF_SYMBOL ';'	(Rule 198)

	FHREF_SYMBOL	shift, and go to state 299

State 233:

	Operation -> Expression ';' .	(Rule 89)

	$default	reduce using rule 89 (Operation)

State 234:

	Conditional -> 'if' LPAREN . SubExpression ')' CodeBlock STAR-46 OPTIONAL-48	(Rule 177)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	HashReference	go to state 126
	Literal	go to state 128
	Operator	go to state 111
	ArrayReference	go to state 134
	Expression	go to state 159
	Variable	go to state 164
	ArrayDereference	go to state 139
	WordScoped	go to state 140
	SubExpression	go to state 300
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142

State 235:

	Expression -> WordScoped LPAREN . OPTIONAL-40 ')'	(Rule 146)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	ARGV	shift, and go to state 166
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 160
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	')'	reduce using rule 138 (OPTIONAL-40)

	OPTIONAL-40	go to state 302
	ListElements	go to state 301
	Operator	go to state 111
	Literal	go to state 128
	HashReference	go to state 126
	Variable	go to state 164
	Expression	go to state 159
	ArrayReference	go to state 134
	TypeInner	go to state 163
	WordScoped	go to state 140
	ArrayDereference	go to state 139
	VariableSymbolOrSelf	go to state 108
	ListElement	go to state 209
	HashDereference	go to state 142
	SubExpression	go to state 210

State 236:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW . OPTIONAL-42 ')'	(Rule 148)

	LBRACE	shift, and go to state 100

	')'	reduce using rule 142 (OPTIONAL-42)

	HashReference	go to state 304
	OPTIONAL-42	go to state 303

State 237:

	Operator -> SubExpression OP14_BITWISE_OR_XOR . SubExpression	(Rule 115)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	ArrayDereference	go to state 139
	WordScoped	go to state 140
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	SubExpression	go to state 305
	Operator	go to state 111
	Literal	go to state 128
	HashReference	go to state 126
	Variable	go to state 164
	Expression	go to state 159
	ArrayReference	go to state 134

State 238:

	Operator -> SubExpression OP07_STRING_REPEAT . SubExpression	(Rule 105)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	WordScoped	go to state 140
	ArrayDereference	go to state 139
	SubExpression	go to state 306
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	Operator	go to state 111
	Literal	go to state 128
	HashReference	go to state 126
	Variable	go to state 164
	Expression	go to state 159
	ArrayReference	go to state 134

State 239:

	Operator -> SubExpression OP12_COMPARE_EQ_NE . SubExpression	(Rule 113)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	ArrayReference	go to state 134
	Expression	go to state 159
	Variable	go to state 164
	HashReference	go to state 126
	Operator	go to state 111
	Literal	go to state 128
	SubExpression	go to state 307
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	WordScoped	go to state 140
	ArrayDereference	go to state 139

State 240:

	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD . SubExpression	(Rule 106)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	Operator	go to state 111
	Literal	go to state 128
	HashReference	go to state 126
	Variable	go to state 164
	Expression	go to state 159
	ArrayReference	go to state 134
	WordScoped	go to state 140
	ArrayDereference	go to state 139
	SubExpression	go to state 308
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142

State 241:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 118)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	ArrayDereference	go to state 139
	WordScoped	go to state 140
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	SubExpression	go to state 309
	HashReference	go to state 126
	Operator	go to state 111
	Literal	go to state 128
	Expression	go to state 159
	ArrayReference	go to state 134
	Variable	go to state 164

State 242:

	Operator -> SubExpression OP24_LOGICAL_OR_XOR . SubExpression	(Rule 123)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	WordScoped	go to state 140
	ArrayDereference	go to state 139
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	SubExpression	go to state 310
	HashReference	go to state 126
	Operator	go to state 111
	Literal	go to state 128
	ArrayReference	go to state 134
	Expression	go to state 159
	Variable	go to state 164

State 243:

	Operator -> SubExpression OP13_BITWISE_AND . SubExpression	(Rule 114)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	Variable	go to state 164
	Expression	go to state 159
	ArrayReference	go to state 134
	Operator	go to state 111
	Literal	go to state 128
	HashReference	go to state 126
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	SubExpression	go to state 311
	ArrayDereference	go to state 139
	WordScoped	go to state 140

State 244:

	Operator -> SubExpression OP08_MATH_ADD_SUB . SubExpression	(Rule 107)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	Variable	go to state 164
	ArrayReference	go to state 134
	Expression	go to state 159
	Operator	go to state 111
	Literal	go to state 128
	HashReference	go to state 126
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	SubExpression	go to state 312
	WordScoped	go to state 140
	ArrayDereference	go to state 139

State 245:

	Operator -> SubExpression OP08_STRING_CAT . SubExpression	(Rule 108)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	HashReference	go to state 126
	Operator	go to state 111
	Literal	go to state 128
	ArrayReference	go to state 134
	Expression	go to state 159
	Variable	go to state 164
	WordScoped	go to state 140
	ArrayDereference	go to state 139
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	SubExpression	go to state 313

State 246:

	Operator -> SubExpression OP23_LOGICAL_AND . SubExpression	(Rule 122)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	HashReference	go to state 126
	Operator	go to state 111
	Literal	go to state 128
	Expression	go to state 159
	ArrayReference	go to state 134
	Variable	go to state 164
	WordScoped	go to state 140
	ArrayDereference	go to state 139
	SubExpression	go to state 314
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108

State 247:

	Operator -> SubExpression OP04_MATH_POW . SubExpression	(Rule 100)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	WordScoped	go to state 140
	ArrayDereference	go to state 139
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	SubExpression	go to state 315
	HashReference	go to state 126
	Literal	go to state 128
	Operator	go to state 111
	Expression	go to state 159
	ArrayReference	go to state 134
	Variable	go to state 164

State 248:

	Operator -> SubExpression OP15_LOGICAL_AND . SubExpression	(Rule 116)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	Expression	go to state 159
	ArrayReference	go to state 134
	Variable	go to state 164
	HashReference	go to state 126
	Operator	go to state 111
	Literal	go to state 128
	SubExpression	go to state 316
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	ArrayDereference	go to state 139
	WordScoped	go to state 140

State 249:

	Operator -> SubExpression OP11_COMPARE_LT_GT . SubExpression	(Rule 112)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	SubExpression	go to state 317
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	ArrayDereference	go to state 139
	WordScoped	go to state 140
	Variable	go to state 164
	ArrayReference	go to state 134
	Expression	go to state 159
	Operator	go to state 111
	Literal	go to state 128
	HashReference	go to state 126

State 250:

	Operator -> SubExpression OP09_BITWISE_SHIFT . SubExpression	(Rule 109)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	Expression	go to state 159
	ArrayReference	go to state 134
	Variable	go to state 164
	HashReference	go to state 126
	Literal	go to state 128
	Operator	go to state 111
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	SubExpression	go to state 318
	WordScoped	go to state 140
	ArrayDereference	go to state 139

State 251:

	Operator -> SubExpression OP06_REGEX_BIND . OP06_REGEX_PATTERN	(Rule 104)

	OP06_REGEX_PATTERN	shift, and go to state 319

State 252:

	Operator -> SubExpression OP18_TERNARY . VariableOrLiteral COLON VariableOrLiteral	(Rule 119)

	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103

	Literal	go to state 320
	VariableOrLiteral	go to state 321
	VariableSymbolOrSelf	go to state 108
	Variable	go to state 322

State 253:

	Operator -> SubExpression OP16_LOGICAL_OR . SubExpression	(Rule 117)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	Variable	go to state 164
	Expression	go to state 159
	ArrayReference	go to state 134
	Literal	go to state 128
	Operator	go to state 111
	HashReference	go to state 126
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	SubExpression	go to state 323
	ArrayDereference	go to state 139
	WordScoped	go to state 140

State 254:

	PAREN-43 -> LoopLabel COLON .	(Rule 163)

	$default	reduce using rule 163 (PAREN-43)

State 255:

	Operator -> Variable OP03_MATH_INC_DEC .	(Rule 99)

	$default	reduce using rule 99 (Operator)

State 256:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN . SubExpressionOrInput	(Rule 199)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	FHREF_SYMBOL_IN	shift, and go to state 325
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	STDIN	shift, and go to state 326
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	Variable	go to state 164
	Expression	go to state 159
	ArrayReference	go to state 134
	SubExpressionOrInput	go to state 327
	Literal	go to state 128
	Operator	go to state 111
	HashReference	go to state 126
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	SubExpression	go to state 324
	ArrayDereference	go to state 139
	WordScoped	go to state 140

State 257:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY . SubExpression	(Rule 200)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	Operator	go to state 111
	Literal	go to state 128
	HashReference	go to state 126
	Variable	go to state 164
	Expression	go to state 159
	ArrayReference	go to state 134
	WordScoped	go to state 140
	ArrayDereference	go to state 139
	SubExpression	go to state 328
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142

State 258:

	Expression -> Variable OP02_METHOD_THINARROW . LPAREN OPTIONAL-41 ')'	(Rule 147)

	LPAREN	shift, and go to state 329

State 259:

	Properties -> 'our hashref $properties' . OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-32 '}' ';'	(Rule 76)
	Properties -> 'our hashref $properties' . OP19_VARIABLE_ASSIGN LBRACE '}' ';'	(Rule 77)

	OP19_VARIABLE_ASSIGN	shift, and go to state 330

State 260:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-26 OPTIONAL-27 STAR-28 STAR-29 Properties . STAR-30 LITERAL_NUMBER ';'	(Rule 72)

	$default	reduce using rule 71 (STAR-30)

	STAR-30	go to state 331

State 261:

	STAR-29 -> STAR-29 Constant .	(Rule 68)

	$default	reduce using rule 68 (STAR-29)

State 262:

	Constant -> 'use constant' WORD_UPPERCASE OP20_HASH_FATARROW TypeInnerConstant Literal ';' .	(Rule 52)

	$default	reduce using rule 52 (Constant)

State 263:

	TypeInnerConstant -> MY Type '$TYPED_' . WORD_UPPERCASE OP19_VARIABLE_ASSIGN	(Rule 240)

	WORD_UPPERCASE	shift, and go to state 332

State 264:

	Subroutine -> SUB WORD LBRACE LBRACE MY Type . '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)

	'$RETURN_TYPE'	shift, and go to state 333

State 265:

	Operator -> OP01_OPEN MY TYPE_FHREF . FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 96)

	FHREF_SYMBOL	shift, and go to state 334

State 266:

	OperatorVoid -> OP19_LOOP_CONTROL LoopLabel ';' .	(Rule 136)

	$default	reduce using rule 136 (OperatorVoid)

State 267:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ';'	(Rule 134)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	ARGV	shift, and go to state 166
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 160
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	ListElement	go to state 209
	SubExpression	go to state 210
	WordScoped	go to state 140
	ArrayDereference	go to state 139
	TypeInner	go to state 163
	Variable	go to state 164
	Expression	go to state 159
	ArrayReference	go to state 134
	Operator	go to state 111
	ListElements	go to state 335
	Literal	go to state 128
	HashReference	go to state 126

State 268:

	TypeInner -> MY Type . '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN	(Rule 237)

	'$TYPED_'	shift, and go to state 336

State 269:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)
	ListElement -> TypeInner SubExpression .	(Rule 206)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252
	OP23_LOGICAL_AND	shift, and go to state 246
	OP24_LOGICAL_OR_XOR	shift, and go to state 242

	')'	reduce using rule 206 (ListElement)
	';'	reduce using rule 206 (ListElement)
	']'	reduce using rule 206 (ListElement)
	OP21_LIST_COMMA	reduce using rule 206 (ListElement)

State 270:

	Operator -> OP01_NAMED SubExpression .	(Rule 94)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	')'	reduce using rule 94 (Operator)
	';'	reduce using rule 94 (Operator)
	']'	reduce using rule 94 (Operator)
	'}'	reduce using rule 94 (Operator)
	OP04_MATH_POW	reduce using rule 94 (Operator)
	OP06_REGEX_BIND	reduce using rule 94 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 94 (Operator)
	OP07_STRING_REPEAT	reduce using rule 94 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 94 (Operator)
	OP08_STRING_CAT	reduce using rule 94 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 94 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 94 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 94 (Operator)
	OP13_BITWISE_AND	reduce using rule 94 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 94 (Operator)
	OP15_LOGICAL_AND	reduce using rule 94 (Operator)
	OP16_LOGICAL_OR	reduce using rule 94 (Operator)
	OP17_LIST_RANGE	reduce using rule 94 (Operator)
	OP18_TERNARY	reduce using rule 94 (Operator)
	OP21_LIST_COMMA	reduce using rule 94 (Operator)
	OP23_LOGICAL_AND	reduce using rule 94 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 94 (Operator)

State 271:

	ArrayDereference -> '@{' Variable '}' .	(Rule 214)

	$default	reduce using rule 214 (ArrayDereference)

State 272:

	ArrayDereference -> '@{' OPTIONAL-54 ArrayReference . '}'	(Rule 215)

	'}'	shift, and go to state 337

State 273:

	HashEntry -> VarOrLitOrOpStrOrWord OP20_HASH_FATARROW . OPTIONAL-55 SubExpression	(Rule 218)

	MY	shift, and go to state 160

	'%{'	reduce using rule 217 (OPTIONAL-55)
	'@{'	reduce using rule 217 (OPTIONAL-55)
	'undef'	reduce using rule 217 (OPTIONAL-55)
	CONSTANT_CALL_SCOPED	reduce using rule 217 (OPTIONAL-55)
	LBRACE	reduce using rule 217 (OPTIONAL-55)
	LBRACKET	reduce using rule 217 (OPTIONAL-55)
	LITERAL_NUMBER	reduce using rule 217 (OPTIONAL-55)
	LITERAL_STRING	reduce using rule 217 (OPTIONAL-55)
	LPAREN	reduce using rule 217 (OPTIONAL-55)
	OP01_CLOSE	reduce using rule 217 (OPTIONAL-55)
	OP01_NAMED	reduce using rule 217 (OPTIONAL-55)
	OP01_OPEN	reduce using rule 217 (OPTIONAL-55)
	OP03_MATH_INC_DEC	reduce using rule 217 (OPTIONAL-55)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 217 (OPTIONAL-55)
	OP05_LOGICAL_NEG	reduce using rule 217 (OPTIONAL-55)
	OP05_MATH_NEG_LPAREN	reduce using rule 217 (OPTIONAL-55)
	OP10_NAMED_UNARY	reduce using rule 217 (OPTIONAL-55)
	OP22_LOGICAL_NEG	reduce using rule 217 (OPTIONAL-55)
	OP22_LOGICAL_NEG_LPAREN	reduce using rule 217 (OPTIONAL-55)
	SELF	reduce using rule 217 (OPTIONAL-55)
	VARIABLE_SYMBOL	reduce using rule 217 (OPTIONAL-55)
	WORD	reduce using rule 217 (OPTIONAL-55)
	WORD_SCOPED	reduce using rule 217 (OPTIONAL-55)
	WORD_UPPERCASE	reduce using rule 217 (OPTIONAL-55)

	OPTIONAL-55	go to state 339
	TypeInner	go to state 338

State 274:

	STAR-57 -> STAR-57 . PAREN-56	(Rule 223)
	HashReference -> LBRACE HashEntry STAR-57 . '}'	(Rule 225)

	'}'	shift, and go to state 342
	OP21_LIST_COMMA	shift, and go to state 341

	PAREN-56	go to state 340

State 275:

	LoopWhile -> 'while' LPAREN . SubExpression ')' CodeBlock	(Rule 184)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	Operator	go to state 111
	Literal	go to state 128
	HashReference	go to state 126
	Variable	go to state 164
	ArrayReference	go to state 134
	Expression	go to state 159
	WordScoped	go to state 140
	ArrayDereference	go to state 139
	SubExpression	go to state 343
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142

State 276:

	LoopWhile -> 'while' LPAREN_MY . Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock	(Rule 185)

	TYPE_INTEGER	shift, and go to state 149
	WORD	shift, and go to state 152
	WORD_SCOPED	shift, and go to state 150

	Type	go to state 344

State 277:

	LoopFor -> 'for' LPAREN_MY . TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 182)

	TYPE_INTEGER	shift, and go to state 345

State 278:

	LoopFor -> 'for' MY . TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 181)

	TYPE_INTEGER	shift, and go to state 346

State 279:

	LoopForEach -> 'foreach' MY . Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 183)

	TYPE_INTEGER	shift, and go to state 149
	WORD	shift, and go to state 152
	WORD_SCOPED	shift, and go to state 150

	Type	go to state 347

State 280:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements . ';'	(Rule 130)

	';'	shift, and go to state 348

State 281:

	OperatorVoid -> OP01_PRINT OPTIONAL-38 ListElements . ';'	(Rule 129)

	';'	shift, and go to state 349

State 282:

	Operator -> OP22_LOGICAL_NEG_LPAREN SubExpression ')' .	(Rule 120)

	$default	reduce using rule 120 (Operator)

State 283:

	OperatorVoid -> OP01_NAMED_VOID ListElements ';' .	(Rule 133)

	$default	reduce using rule 133 (OperatorVoid)

State 284:

	STAR-52 -> STAR-52 . PAREN-51	(Rule 202)
	ListElements -> ListElement STAR-52 .	(Rule 204)

	OP21_LIST_COMMA	shift, and go to state 350

	')'	reduce using rule 204 (ListElements)
	';'	reduce using rule 204 (ListElements)
	']'	reduce using rule 204 (ListElements)

	PAREN-51	go to state 351

State 285:

	VariableRetrieval -> OP02_HASH_THINARROW . SubExpression '}'	(Rule 193)
	VariableRetrieval -> OP02_HASH_THINARROW . WORD '}'	(Rule 194)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 353
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	SubExpression	go to state 352
	ArrayDereference	go to state 139
	WordScoped	go to state 140
	ArrayReference	go to state 134
	Expression	go to state 159
	Variable	go to state 164
	HashReference	go to state 126
	Literal	go to state 128
	Operator	go to state 111

State 286:

	VariableRetrieval -> OP02_ARRAY_THINARROW . SubExpression ']'	(Rule 192)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	WordScoped	go to state 140
	ArrayDereference	go to state 139
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	SubExpression	go to state 354
	HashReference	go to state 126
	Literal	go to state 128
	Operator	go to state 111
	ArrayReference	go to state 134
	Expression	go to state 159
	Variable	go to state 164

State 287:

	STAR-50 -> STAR-50 VariableRetrieval .	(Rule 189)

	$default	reduce using rule 189 (STAR-50)

State 288:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-39 ')' . ';'	(Rule 132)

	';'	shift, and go to state 355

State 289:

	HashDereference -> '%{' Variable '}' .	(Rule 229)

	$default	reduce using rule 229 (HashDereference)

State 290:

	HashDereference -> '%{' OPTIONAL-58 HashReference . '}'	(Rule 230)

	'}'	shift, and go to state 356

State 291:

	Operator -> OP05_BITWISE_NEG_LPAREN SubExpression ')' .	(Rule 101)

	$default	reduce using rule 101 (Operator)

State 292:

	Operator -> OP05_MATH_NEG_LPAREN SubExpression ')' .	(Rule 103)

	$default	reduce using rule 103 (Operator)

State 293:

	ArrayReference -> LBRACKET OPTIONAL-53 ']' .	(Rule 211)

	$default	reduce using rule 211 (ArrayReference)

State 294:

	Expression -> WORD_UPPERCASE LPAREN ')' .	(Rule 144)

	$default	reduce using rule 144 (Expression)

State 295:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES . ListElements ')'	(Rule 93)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	ARGV	shift, and go to state 166
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 160
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	WordScoped	go to state 140
	ArrayDereference	go to state 139
	TypeInner	go to state 163
	SubExpression	go to state 210
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	ListElement	go to state 209
	HashReference	go to state 126
	ListElements	go to state 357
	Literal	go to state 128
	Operator	go to state 111
	ArrayReference	go to state 134
	Expression	go to state 159
	Variable	go to state 164

State 296:

	Operator -> LPAREN OP01_NAMED ListElement . OP21_LIST_COMMA ListElements ')'	(Rule 95)

	OP21_LIST_COMMA	shift, and go to state 358

State 297:

	SubExpression -> LPAREN SubExpression ')' .	(Rule 157)

	$default	reduce using rule 157 (SubExpression)

State 298:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL . ';'	(Rule 195)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExpIn	(Rule 196)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL . OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 197)

	';'	shift, and go to state 361
	OP02_ARRAY_THINARROW	shift, and go to state 360
	OP19_VARIABLE_ASSIGN	shift, and go to state 359

State 299:

	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL . ';'	(Rule 198)

	';'	shift, and go to state 362

State 300:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)
	Conditional -> 'if' LPAREN SubExpression . ')' CodeBlock STAR-46 OPTIONAL-48	(Rule 177)

	')'	shift, and go to state 363
	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252
	OP23_LOGICAL_AND	shift, and go to state 246
	OP24_LOGICAL_OR_XOR	shift, and go to state 242

State 301:

	OPTIONAL-40 -> ListElements .	(Rule 137)

	$default	reduce using rule 137 (OPTIONAL-40)

State 302:

	Expression -> WordScoped LPAREN OPTIONAL-40 . ')'	(Rule 146)

	')'	shift, and go to state 364

State 303:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW OPTIONAL-42 . ')'	(Rule 148)

	')'	shift, and go to state 365

State 304:

	OPTIONAL-42 -> HashReference .	(Rule 141)

	$default	reduce using rule 141 (OPTIONAL-42)

State 305:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression OP14_BITWISE_OR_XOR SubExpression .	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243

	')'	reduce using rule 115 (Operator)
	';'	reduce using rule 115 (Operator)
	']'	reduce using rule 115 (Operator)
	'}'	reduce using rule 115 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 115 (Operator)
	OP15_LOGICAL_AND	reduce using rule 115 (Operator)
	OP16_LOGICAL_OR	reduce using rule 115 (Operator)
	OP17_LIST_RANGE	reduce using rule 115 (Operator)
	OP18_TERNARY	reduce using rule 115 (Operator)
	OP21_LIST_COMMA	reduce using rule 115 (Operator)
	OP23_LOGICAL_AND	reduce using rule 115 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 115 (Operator)

State 306:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression OP07_STRING_REPEAT SubExpression .	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251

	')'	reduce using rule 105 (Operator)
	';'	reduce using rule 105 (Operator)
	']'	reduce using rule 105 (Operator)
	'}'	reduce using rule 105 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 105 (Operator)
	OP07_STRING_REPEAT	reduce using rule 105 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 105 (Operator)
	OP08_STRING_CAT	reduce using rule 105 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 105 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 105 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 105 (Operator)
	OP13_BITWISE_AND	reduce using rule 105 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 105 (Operator)
	OP15_LOGICAL_AND	reduce using rule 105 (Operator)
	OP16_LOGICAL_OR	reduce using rule 105 (Operator)
	OP17_LIST_RANGE	reduce using rule 105 (Operator)
	OP18_TERNARY	reduce using rule 105 (Operator)
	OP21_LIST_COMMA	reduce using rule 105 (Operator)
	OP23_LOGICAL_AND	reduce using rule 105 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 105 (Operator)

State 307:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression OP12_COMPARE_EQ_NE SubExpression .	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249

	OP12_COMPARE_EQ_NE	error (nonassociative)

	')'	reduce using rule 113 (Operator)
	';'	reduce using rule 113 (Operator)
	']'	reduce using rule 113 (Operator)
	'}'	reduce using rule 113 (Operator)
	OP13_BITWISE_AND	reduce using rule 113 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 113 (Operator)
	OP15_LOGICAL_AND	reduce using rule 113 (Operator)
	OP16_LOGICAL_OR	reduce using rule 113 (Operator)
	OP17_LIST_RANGE	reduce using rule 113 (Operator)
	OP18_TERNARY	reduce using rule 113 (Operator)
	OP21_LIST_COMMA	reduce using rule 113 (Operator)
	OP23_LOGICAL_AND	reduce using rule 113 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 113 (Operator)

State 308:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression OP07_MATH_MULT_DIV_MOD SubExpression .	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_STRING_REPEAT	shift, and go to state 238

	')'	reduce using rule 106 (Operator)
	';'	reduce using rule 106 (Operator)
	']'	reduce using rule 106 (Operator)
	'}'	reduce using rule 106 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 106 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 106 (Operator)
	OP08_STRING_CAT	reduce using rule 106 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 106 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 106 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 106 (Operator)
	OP13_BITWISE_AND	reduce using rule 106 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 106 (Operator)
	OP15_LOGICAL_AND	reduce using rule 106 (Operator)
	OP16_LOGICAL_OR	reduce using rule 106 (Operator)
	OP17_LIST_RANGE	reduce using rule 106 (Operator)
	OP18_TERNARY	reduce using rule 106 (Operator)
	OP21_LIST_COMMA	reduce using rule 106 (Operator)
	OP23_LOGICAL_AND	reduce using rule 106 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 106 (Operator)

State 309:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253

	OP17_LIST_RANGE	error (nonassociative)

	')'	reduce using rule 118 (Operator)
	';'	reduce using rule 118 (Operator)
	']'	reduce using rule 118 (Operator)
	'}'	reduce using rule 118 (Operator)
	OP18_TERNARY	reduce using rule 118 (Operator)
	OP21_LIST_COMMA	reduce using rule 118 (Operator)
	OP23_LOGICAL_AND	reduce using rule 118 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 118 (Operator)

State 310:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)
	Operator -> SubExpression OP24_LOGICAL_OR_XOR SubExpression .	(Rule 123)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252
	OP23_LOGICAL_AND	shift, and go to state 246

	')'	reduce using rule 123 (Operator)
	';'	reduce using rule 123 (Operator)
	']'	reduce using rule 123 (Operator)
	'}'	reduce using rule 123 (Operator)
	OP21_LIST_COMMA	reduce using rule 123 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 123 (Operator)

State 311:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression OP13_BITWISE_AND SubExpression .	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239

	')'	reduce using rule 114 (Operator)
	';'	reduce using rule 114 (Operator)
	']'	reduce using rule 114 (Operator)
	'}'	reduce using rule 114 (Operator)
	OP13_BITWISE_AND	reduce using rule 114 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 114 (Operator)
	OP15_LOGICAL_AND	reduce using rule 114 (Operator)
	OP16_LOGICAL_OR	reduce using rule 114 (Operator)
	OP17_LIST_RANGE	reduce using rule 114 (Operator)
	OP18_TERNARY	reduce using rule 114 (Operator)
	OP21_LIST_COMMA	reduce using rule 114 (Operator)
	OP23_LOGICAL_AND	reduce using rule 114 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 114 (Operator)

State 312:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression OP08_MATH_ADD_SUB SubExpression .	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238

	')'	reduce using rule 107 (Operator)
	';'	reduce using rule 107 (Operator)
	']'	reduce using rule 107 (Operator)
	'}'	reduce using rule 107 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 107 (Operator)
	OP08_STRING_CAT	reduce using rule 107 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 107 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 107 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 107 (Operator)
	OP13_BITWISE_AND	reduce using rule 107 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 107 (Operator)
	OP15_LOGICAL_AND	reduce using rule 107 (Operator)
	OP16_LOGICAL_OR	reduce using rule 107 (Operator)
	OP17_LIST_RANGE	reduce using rule 107 (Operator)
	OP18_TERNARY	reduce using rule 107 (Operator)
	OP21_LIST_COMMA	reduce using rule 107 (Operator)
	OP23_LOGICAL_AND	reduce using rule 107 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 107 (Operator)

State 313:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression OP08_STRING_CAT SubExpression .	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244

	')'	reduce using rule 108 (Operator)
	';'	reduce using rule 108 (Operator)
	']'	reduce using rule 108 (Operator)
	'}'	reduce using rule 108 (Operator)
	OP08_STRING_CAT	reduce using rule 108 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 108 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 108 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 108 (Operator)
	OP13_BITWISE_AND	reduce using rule 108 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 108 (Operator)
	OP15_LOGICAL_AND	reduce using rule 108 (Operator)
	OP16_LOGICAL_OR	reduce using rule 108 (Operator)
	OP17_LIST_RANGE	reduce using rule 108 (Operator)
	OP18_TERNARY	reduce using rule 108 (Operator)
	OP21_LIST_COMMA	reduce using rule 108 (Operator)
	OP23_LOGICAL_AND	reduce using rule 108 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 108 (Operator)

State 314:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression OP23_LOGICAL_AND SubExpression .	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252

	')'	reduce using rule 122 (Operator)
	';'	reduce using rule 122 (Operator)
	']'	reduce using rule 122 (Operator)
	'}'	reduce using rule 122 (Operator)
	OP21_LIST_COMMA	reduce using rule 122 (Operator)
	OP23_LOGICAL_AND	reduce using rule 122 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 122 (Operator)

State 315:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression OP04_MATH_POW SubExpression .	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 247

	')'	reduce using rule 100 (Operator)
	';'	reduce using rule 100 (Operator)
	']'	reduce using rule 100 (Operator)
	'}'	reduce using rule 100 (Operator)
	OP06_REGEX_BIND	reduce using rule 100 (Operator)
	OP07_MATH_MULT_DIV_MOD	reduce using rule 100 (Operator)
	OP07_STRING_REPEAT	reduce using rule 100 (Operator)
	OP08_MATH_ADD_SUB	reduce using rule 100 (Operator)
	OP08_STRING_CAT	reduce using rule 100 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 100 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 100 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 100 (Operator)
	OP13_BITWISE_AND	reduce using rule 100 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 100 (Operator)
	OP15_LOGICAL_AND	reduce using rule 100 (Operator)
	OP16_LOGICAL_OR	reduce using rule 100 (Operator)
	OP17_LIST_RANGE	reduce using rule 100 (Operator)
	OP18_TERNARY	reduce using rule 100 (Operator)
	OP21_LIST_COMMA	reduce using rule 100 (Operator)
	OP23_LOGICAL_AND	reduce using rule 100 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 100 (Operator)

State 316:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression OP15_LOGICAL_AND SubExpression .	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237

	')'	reduce using rule 116 (Operator)
	';'	reduce using rule 116 (Operator)
	']'	reduce using rule 116 (Operator)
	'}'	reduce using rule 116 (Operator)
	OP15_LOGICAL_AND	reduce using rule 116 (Operator)
	OP16_LOGICAL_OR	reduce using rule 116 (Operator)
	OP17_LIST_RANGE	reduce using rule 116 (Operator)
	OP18_TERNARY	reduce using rule 116 (Operator)
	OP21_LIST_COMMA	reduce using rule 116 (Operator)
	OP23_LOGICAL_AND	reduce using rule 116 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 116 (Operator)

State 317:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression OP11_COMPARE_LT_GT SubExpression .	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250

	OP11_COMPARE_LT_GT	error (nonassociative)

	')'	reduce using rule 112 (Operator)
	';'	reduce using rule 112 (Operator)
	']'	reduce using rule 112 (Operator)
	'}'	reduce using rule 112 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 112 (Operator)
	OP13_BITWISE_AND	reduce using rule 112 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 112 (Operator)
	OP15_LOGICAL_AND	reduce using rule 112 (Operator)
	OP16_LOGICAL_OR	reduce using rule 112 (Operator)
	OP17_LIST_RANGE	reduce using rule 112 (Operator)
	OP18_TERNARY	reduce using rule 112 (Operator)
	OP21_LIST_COMMA	reduce using rule 112 (Operator)
	OP23_LOGICAL_AND	reduce using rule 112 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 112 (Operator)

State 318:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression OP09_BITWISE_SHIFT SubExpression .	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245

	')'	reduce using rule 109 (Operator)
	';'	reduce using rule 109 (Operator)
	']'	reduce using rule 109 (Operator)
	'}'	reduce using rule 109 (Operator)
	OP09_BITWISE_SHIFT	reduce using rule 109 (Operator)
	OP11_COMPARE_LT_GT	reduce using rule 109 (Operator)
	OP12_COMPARE_EQ_NE	reduce using rule 109 (Operator)
	OP13_BITWISE_AND	reduce using rule 109 (Operator)
	OP14_BITWISE_OR_XOR	reduce using rule 109 (Operator)
	OP15_LOGICAL_AND	reduce using rule 109 (Operator)
	OP16_LOGICAL_OR	reduce using rule 109 (Operator)
	OP17_LIST_RANGE	reduce using rule 109 (Operator)
	OP18_TERNARY	reduce using rule 109 (Operator)
	OP21_LIST_COMMA	reduce using rule 109 (Operator)
	OP23_LOGICAL_AND	reduce using rule 109 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 109 (Operator)

State 319:

	Operator -> SubExpression OP06_REGEX_BIND OP06_REGEX_PATTERN .	(Rule 104)

	$default	reduce using rule 104 (Operator)

State 320:

	VariableOrLiteral -> Literal .	(Rule 242)

	$default	reduce using rule 242 (VariableOrLiteral)

State 321:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral . COLON VariableOrLiteral	(Rule 119)

	COLON	shift, and go to state 366

State 322:

	VariableOrLiteral -> Variable .	(Rule 241)

	$default	reduce using rule 241 (VariableOrLiteral)

State 323:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression OP16_LOGICAL_OR SubExpression .	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248

	')'	reduce using rule 117 (Operator)
	';'	reduce using rule 117 (Operator)
	']'	reduce using rule 117 (Operator)
	'}'	reduce using rule 117 (Operator)
	OP16_LOGICAL_OR	reduce using rule 117 (Operator)
	OP17_LIST_RANGE	reduce using rule 117 (Operator)
	OP18_TERNARY	reduce using rule 117 (Operator)
	OP21_LIST_COMMA	reduce using rule 117 (Operator)
	OP23_LOGICAL_AND	reduce using rule 117 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 117 (Operator)

State 324:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)
	SubExpressionOrInput -> SubExpression .	(Rule 158)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252
	OP23_LOGICAL_AND	shift, and go to state 246
	OP24_LOGICAL_OR_XOR	shift, and go to state 242

	')'	reduce using rule 158 (SubExpressionOrInput)
	';'	reduce using rule 158 (SubExpressionOrInput)

State 325:

	SubExpressionOrInput -> FHREF_SYMBOL_IN .	(Rule 159)

	$default	reduce using rule 159 (SubExpressionOrInput)

State 326:

	SubExpressionOrInput -> STDIN .	(Rule 160)

	$default	reduce using rule 160 (SubExpressionOrInput)

State 327:

	VariableModification -> Variable OP19_VARIABLE_ASSIGN SubExpressionOrInput .	(Rule 199)

	$default	reduce using rule 199 (VariableModification)

State 328:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)
	VariableModification -> Variable OP19_VARIABLE_ASSIGN_BY SubExpression .	(Rule 200)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252
	OP23_LOGICAL_AND	shift, and go to state 246
	OP24_LOGICAL_OR_XOR	shift, and go to state 242

	')'	reduce using rule 200 (VariableModification)
	';'	reduce using rule 200 (VariableModification)

State 329:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN . OPTIONAL-41 ')'	(Rule 147)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	ARGV	shift, and go to state 166
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 160
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	')'	reduce using rule 140 (OPTIONAL-41)

	HashReference	go to state 126
	Literal	go to state 128
	Operator	go to state 111
	ListElements	go to state 368
	ArrayReference	go to state 134
	Expression	go to state 159
	Variable	go to state 164
	TypeInner	go to state 163
	WordScoped	go to state 140
	ArrayDereference	go to state 139
	OPTIONAL-41	go to state 367
	ListElement	go to state 209
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	SubExpression	go to state 210

State 330:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN . LBRACE HashEntryProperties STAR-32 '}' ';'	(Rule 76)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN . LBRACE '}' ';'	(Rule 77)

	LBRACE	shift, and go to state 369

State 331:

	STAR-30 -> STAR-30 . SubroutineOrMethod	(Rule 70)
	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-26 OPTIONAL-27 STAR-28 STAR-29 Properties STAR-30 . LITERAL_NUMBER ';'	(Rule 72)

	LITERAL_NUMBER	shift, and go to state 370
	SUB	shift, and go to state 371

	Subroutine	go to state 372
	SubroutineOrMethod	go to state 373
	Method	go to state 374

State 332:

	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE . OP19_VARIABLE_ASSIGN	(Rule 240)

	OP19_VARIABLE_ASSIGN	shift, and go to state 375

State 333:

	Subroutine -> SUB WORD LBRACE LBRACE MY Type '$RETURN_TYPE' . '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)

	'}'	shift, and go to state 376

State 334:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL . OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 96)

	OP21_LIST_COMMA	shift, and go to state 377

State 335:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ';'	(Rule 134)

	';'	shift, and go to state 378

State 336:

	TypeInner -> MY Type '$TYPED_' . OpStringOrWord OP19_VARIABLE_ASSIGN	(Rule 237)

	OP01_CLOSE	shift, and go to state 185
	OP01_NAMED	shift, and go to state 189
	OP01_NAMED_VOID	shift, and go to state 192
	OP01_OPEN	shift, and go to state 184
	OP01_PRINT	shift, and go to state 191
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 174
	OP07_STRING_REPEAT	shift, and go to state 171
	OP08_MATH_ADD_SUB	shift, and go to state 180
	OP10_NAMED_UNARY	shift, and go to state 193
	OP11_COMPARE_LT_GT	shift, and go to state 188
	OP12_COMPARE_EQ_NE	shift, and go to state 172
	OP19_LOOP_CONTROL	shift, and go to state 187
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 178
	OP22_LOGICAL_NEG	shift, and go to state 195
	OP23_LOGICAL_AND	shift, and go to state 181
	OP24_LOGICAL_OR_XOR	shift, and go to state 177
	WORD	shift, and go to state 173

	OpStringOrWord	go to state 379

State 337:

	ArrayDereference -> '@{' OPTIONAL-54 ArrayReference '}' .	(Rule 215)

	$default	reduce using rule 215 (ArrayDereference)

State 338:

	OPTIONAL-55 -> TypeInner .	(Rule 216)

	$default	reduce using rule 216 (OPTIONAL-55)

State 339:

	HashEntry -> VarOrLitOrOpStrOrWord OP20_HASH_FATARROW OPTIONAL-55 . SubExpression	(Rule 218)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	SubExpression	go to state 380
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	ArrayDereference	go to state 139
	WordScoped	go to state 140
	Variable	go to state 164
	Expression	go to state 159
	ArrayReference	go to state 134
	Literal	go to state 128
	Operator	go to state 111
	HashReference	go to state 126

State 340:

	STAR-57 -> STAR-57 PAREN-56 .	(Rule 223)

	$default	reduce using rule 223 (STAR-57)

State 341:

	PAREN-56 -> OP21_LIST_COMMA . HashEntry	(Rule 222)

	'%{'	shift, and go to state 114
	ENV	shift, and go to state 186
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	OP01_CLOSE	shift, and go to state 185
	OP01_NAMED	shift, and go to state 189
	OP01_NAMED_VOID	shift, and go to state 192
	OP01_OPEN	shift, and go to state 184
	OP01_PRINT	shift, and go to state 191
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 174
	OP07_STRING_REPEAT	shift, and go to state 171
	OP08_MATH_ADD_SUB	shift, and go to state 180
	OP10_NAMED_UNARY	shift, and go to state 193
	OP11_COMPARE_LT_GT	shift, and go to state 188
	OP12_COMPARE_EQ_NE	shift, and go to state 172
	OP19_LOOP_CONTROL	shift, and go to state 187
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 178
	OP22_LOGICAL_NEG	shift, and go to state 195
	OP23_LOGICAL_AND	shift, and go to state 181
	OP24_LOGICAL_OR_XOR	shift, and go to state 177
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 173

	OpStringOrWord	go to state 194
	VarOrLitOrOpStrOrWord	go to state 183
	Literal	go to state 176
	HashDereference	go to state 179
	VariableSymbolOrSelf	go to state 108
	HashEntry	go to state 381
	Variable	go to state 182

State 342:

	HashReference -> LBRACE HashEntry STAR-57 '}' .	(Rule 225)

	$default	reduce using rule 225 (HashReference)

State 343:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)
	LoopWhile -> 'while' LPAREN SubExpression . ')' CodeBlock	(Rule 184)

	')'	shift, and go to state 382
	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252
	OP23_LOGICAL_AND	shift, and go to state 246
	OP24_LOGICAL_OR_XOR	shift, and go to state 242

State 344:

	LoopWhile -> 'while' LPAREN_MY Type . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock	(Rule 185)

	VARIABLE_SYMBOL	shift, and go to state 383

State 345:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER . VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 182)

	VARIABLE_SYMBOL	shift, and go to state 384

State 346:

	LoopFor -> 'for' MY TYPE_INTEGER . VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 181)

	VARIABLE_SYMBOL	shift, and go to state 385

State 347:

	LoopForEach -> 'foreach' MY Type . VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock	(Rule 183)

	VARIABLE_SYMBOL	shift, and go to state 386

State 348:

	OperatorVoid -> OP01_PRINT FHREF_SYMBOL_BRACES ListElements ';' .	(Rule 130)

	$default	reduce using rule 130 (OperatorVoid)

State 349:

	OperatorVoid -> OP01_PRINT OPTIONAL-38 ListElements ';' .	(Rule 129)

	$default	reduce using rule 129 (OperatorVoid)

State 350:

	PAREN-51 -> OP21_LIST_COMMA . ListElement	(Rule 201)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	ARGV	shift, and go to state 166
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 160
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	SubExpression	go to state 210
	VariableSymbolOrSelf	go to state 108
	ListElement	go to state 387
	HashDereference	go to state 142
	TypeInner	go to state 163
	WordScoped	go to state 140
	ArrayDereference	go to state 139
	ArrayReference	go to state 134
	Expression	go to state 159
	Variable	go to state 164
	HashReference	go to state 126
	Literal	go to state 128
	Operator	go to state 111

State 351:

	STAR-52 -> STAR-52 PAREN-51 .	(Rule 202)

	$default	reduce using rule 202 (STAR-52)

State 352:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)
	VariableRetrieval -> OP02_HASH_THINARROW SubExpression . '}'	(Rule 193)

	'}'	shift, and go to state 388
	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252
	OP23_LOGICAL_AND	shift, and go to state 246
	OP24_LOGICAL_OR_XOR	shift, and go to state 242

State 353:

	VariableRetrieval -> OP02_HASH_THINARROW WORD . '}'	(Rule 194)
	WordScoped -> WORD .	(Rule 231)

	'}'	shift, and go to state 389

	LPAREN	reduce using rule 231 (WordScoped)
	OP02_METHOD_THINARROW_NEW	reduce using rule 231 (WordScoped)

State 354:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)
	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression . ']'	(Rule 192)

	']'	shift, and go to state 390
	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252
	OP23_LOGICAL_AND	shift, and go to state 246
	OP24_LOGICAL_OR_XOR	shift, and go to state 242

State 355:

	OperatorVoid -> OP01_NAMED_VOID_LPAREN OPTIONAL-39 ')' ';' .	(Rule 132)

	$default	reduce using rule 132 (OperatorVoid)

State 356:

	HashDereference -> '%{' OPTIONAL-58 HashReference '}' .	(Rule 230)

	$default	reduce using rule 230 (HashDereference)

State 357:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements . ')'	(Rule 93)

	')'	shift, and go to state 391

State 358:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA . ListElements ')'	(Rule 95)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	ARGV	shift, and go to state 166
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 160
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	HashReference	go to state 126
	Literal	go to state 128
	Operator	go to state 111
	ListElements	go to state 392
	ArrayReference	go to state 134
	Expression	go to state 159
	Variable	go to state 164
	WordScoped	go to state 140
	ArrayDereference	go to state 139
	TypeInner	go to state 163
	SubExpression	go to state 210
	HashDereference	go to state 142
	ListElement	go to state 209
	VariableSymbolOrSelf	go to state 108

State 359:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . OpNamedScolonOrSubExpIn	(Rule 196)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	FHREF_SYMBOL_IN	shift, and go to state 325
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_NAMED_SCOLON	shift, and go to state 394
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 395
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	STDIN	shift, and go to state 326
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	Expression	go to state 159
	ArrayReference	go to state 134
	Variable	go to state 164
	HashReference	go to state 126
	OpNamedScolonOrSubExpIn	go to state 396
	SubExpressionOrInput	go to state 393
	Literal	go to state 128
	Operator	go to state 111
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	SubExpression	go to state 324
	ArrayDereference	go to state 139
	WordScoped	go to state 140

State 360:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW . SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 197)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	HashReference	go to state 126
	Literal	go to state 128
	Operator	go to state 111
	ArrayReference	go to state 134
	Expression	go to state 159
	Variable	go to state 164
	ArrayDereference	go to state 139
	WordScoped	go to state 140
	SubExpression	go to state 397
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108

State 361:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL ';' .	(Rule 195)

	$default	reduce using rule 195 (VariableDeclaration)

State 362:

	VariableDeclaration -> MY TYPE_FHREF FHREF_SYMBOL ';' .	(Rule 198)

	$default	reduce using rule 198 (VariableDeclaration)

State 363:

	Conditional -> 'if' LPAREN SubExpression ')' . CodeBlock STAR-46 OPTIONAL-48	(Rule 177)

	LBRACE	shift, and go to state 398

	CodeBlock	go to state 399

State 364:

	Expression -> WordScoped LPAREN OPTIONAL-40 ')' .	(Rule 146)

	$default	reduce using rule 146 (Expression)

State 365:

	Expression -> WordScoped OP02_METHOD_THINARROW_NEW OPTIONAL-42 ')' .	(Rule 148)

	$default	reduce using rule 148 (Expression)

State 366:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON . VariableOrLiteral	(Rule 119)

	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103

	VariableSymbolOrSelf	go to state 108
	VariableOrLiteral	go to state 400
	Variable	go to state 322
	Literal	go to state 320

State 367:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-41 . ')'	(Rule 147)

	')'	shift, and go to state 401

State 368:

	OPTIONAL-41 -> ListElements .	(Rule 139)

	$default	reduce using rule 139 (OPTIONAL-41)

State 369:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE . HashEntryProperties STAR-32 '}' ';'	(Rule 76)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE . '}' ';'	(Rule 77)

	'}'	shift, and go to state 403
	OP01_CLOSE	shift, and go to state 185
	OP01_NAMED	shift, and go to state 189
	OP01_NAMED_VOID	shift, and go to state 192
	OP01_OPEN	shift, and go to state 184
	OP01_PRINT	shift, and go to state 191
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 174
	OP07_STRING_REPEAT	shift, and go to state 171
	OP08_MATH_ADD_SUB	shift, and go to state 180
	OP10_NAMED_UNARY	shift, and go to state 193
	OP11_COMPARE_LT_GT	shift, and go to state 188
	OP12_COMPARE_EQ_NE	shift, and go to state 172
	OP19_LOOP_CONTROL	shift, and go to state 187
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 178
	OP22_LOGICAL_NEG	shift, and go to state 195
	OP23_LOGICAL_AND	shift, and go to state 181
	OP24_LOGICAL_OR_XOR	shift, and go to state 177
	WORD	shift, and go to state 173

	OpStringOrWord	go to state 402
	HashEntryProperties	go to state 404

State 370:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-26 OPTIONAL-27 STAR-28 STAR-29 Properties STAR-30 LITERAL_NUMBER . ';'	(Rule 72)

	';'	shift, and go to state 405

State 371:

	Subroutine -> SUB . WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)
	Method -> SUB . WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-33 STAR-34 '}'	(Rule 82)

	WORD	shift, and go to state 406

State 372:

	SubroutineOrMethod -> Subroutine .	(Rule 87)

	$default	reduce using rule 87 (SubroutineOrMethod)

State 373:

	STAR-30 -> STAR-30 SubroutineOrMethod .	(Rule 70)

	$default	reduce using rule 70 (STAR-30)

State 374:

	SubroutineOrMethod -> Method .	(Rule 88)

	$default	reduce using rule 88 (SubroutineOrMethod)

State 375:

	TypeInnerConstant -> MY Type '$TYPED_' WORD_UPPERCASE OP19_VARIABLE_ASSIGN .	(Rule 240)

	$default	reduce using rule 240 (TypeInnerConstant)

State 376:

	Subroutine -> SUB WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' . ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)

	';'	shift, and go to state 407

State 377:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA . LITERAL_STRING OP21_LIST_COMMA SubExpression	(Rule 96)

	LITERAL_STRING	shift, and go to state 408

State 378:

	OperatorVoid -> OP01_NAMED ListElement OP21_LIST_COMMA ListElements ';' .	(Rule 134)

	$default	reduce using rule 134 (OperatorVoid)

State 379:

	TypeInner -> MY Type '$TYPED_' OpStringOrWord . OP19_VARIABLE_ASSIGN	(Rule 237)

	OP19_VARIABLE_ASSIGN	shift, and go to state 409

State 380:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)
	HashEntry -> VarOrLitOrOpStrOrWord OP20_HASH_FATARROW OPTIONAL-55 SubExpression .	(Rule 218)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252
	OP23_LOGICAL_AND	shift, and go to state 246
	OP24_LOGICAL_OR_XOR	shift, and go to state 242

	'}'	reduce using rule 218 (HashEntry)
	OP21_LIST_COMMA	reduce using rule 218 (HashEntry)

State 381:

	PAREN-56 -> OP21_LIST_COMMA HashEntry .	(Rule 222)

	$default	reduce using rule 222 (PAREN-56)

State 382:

	LoopWhile -> 'while' LPAREN SubExpression ')' . CodeBlock	(Rule 184)

	LBRACE	shift, and go to state 398

	CodeBlock	go to state 410

State 383:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock	(Rule 185)

	OP19_VARIABLE_ASSIGN	shift, and go to state 411

State 384:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL . OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 182)

	OP19_VARIABLE_ASSIGN	shift, and go to state 412

State 385:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL . LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 181)

	LPAREN	shift, and go to state 413

State 386:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL . LPAREN ListElements ')' CodeBlock	(Rule 183)

	LPAREN	shift, and go to state 414

State 387:

	PAREN-51 -> OP21_LIST_COMMA ListElement .	(Rule 201)

	$default	reduce using rule 201 (PAREN-51)

State 388:

	VariableRetrieval -> OP02_HASH_THINARROW SubExpression '}' .	(Rule 193)

	$default	reduce using rule 193 (VariableRetrieval)

State 389:

	VariableRetrieval -> OP02_HASH_THINARROW WORD '}' .	(Rule 194)

	$default	reduce using rule 194 (VariableRetrieval)

State 390:

	VariableRetrieval -> OP02_ARRAY_THINARROW SubExpression ']' .	(Rule 192)

	$default	reduce using rule 192 (VariableRetrieval)

State 391:

	Operator -> LPAREN OP01_PRINT FHREF_SYMBOL_BRACES ListElements ')' .	(Rule 93)

	$default	reduce using rule 93 (Operator)

State 392:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements . ')'	(Rule 95)

	')'	shift, and go to state 415

State 393:

	OpNamedScolonOrSubExpIn -> SubExpressionOrInput . ';'	(Rule 255)

	';'	shift, and go to state 416

State 394:

	OpNamedScolonOrSubExpIn -> OP01_NAMED_SCOLON .	(Rule 253)

	$default	reduce using rule 253 (OpNamedScolonOrSubExpIn)

State 395:

	OpNamedScolonOrSubExpIn -> OP10_NAMED_UNARY_SCOLON .	(Rule 254)

	$default	reduce using rule 254 (OpNamedScolonOrSubExpIn)

State 396:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExpIn .	(Rule 196)

	$default	reduce using rule 196 (VariableDeclaration)

State 397:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)
	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression . ']' OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 197)

	']'	shift, and go to state 417
	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252
	OP23_LOGICAL_AND	shift, and go to state 246
	OP24_LOGICAL_OR_XOR	shift, and go to state 242

State 398:

	CodeBlock -> LBRACE . PLUS-49 '}'	(Rule 188)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'if'	shift, and go to state 136
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 132
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 97
	OP01_NAMED_SCOLON	shift, and go to state 113
	OP01_NAMED_VOID	shift, and go to state 107
	OP01_NAMED_VOID_LPAREN	shift, and go to state 112
	OP01_NAMED_VOID_SCOLON	shift, and go to state 133
	OP01_OPEN	shift, and go to state 92
	OP01_PRINT	shift, and go to state 102
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 131
	OP19_LOOP_CONTROL	shift, and go to state 96
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 138
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 129

	'for'	reduce using rule 165 (OPTIONAL-44)
	'foreach'	reduce using rule 165 (OPTIONAL-44)
	'while'	reduce using rule 165 (OPTIONAL-44)

	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	SubExpression	go to state 141
	WordScoped	go to state 140
	ArrayDereference	go to state 139
	Statement	go to state 137
	Variable	go to state 145
	Operation	go to state 418
	LoopLabel	go to state 144
	Operator	go to state 111
	VariableModification	go to state 121
	VariableDeclaration	go to state 94
	OperatorVoid	go to state 95
	Conditional	go to state 118
	PAREN-43	go to state 119
	OPTIONAL-44	go to state 101
	PLUS-49	go to state 419
	ArrayReference	go to state 134
	Expression	go to state 135
	Literal	go to state 128
	HashReference	go to state 126

State 399:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock . STAR-46 OPTIONAL-48	(Rule 177)

	$default	reduce using rule 173 (STAR-46)

	STAR-46	go to state 420

State 400:

	Operator -> SubExpression OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral .	(Rule 119)

	$default	reduce using rule 119 (Operator)

State 401:

	Expression -> Variable OP02_METHOD_THINARROW LPAREN OPTIONAL-41 ')' .	(Rule 147)

	$default	reduce using rule 147 (Expression)

State 402:

	HashEntryProperties -> OpStringOrWord . OP20_HASH_FATARROW TypeInnerProperties	(Rule 221)

	OP20_HASH_FATARROW	shift, and go to state 421

State 403:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' . ';'	(Rule 77)

	';'	shift, and go to state 422

State 404:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties . STAR-32 '}' ';'	(Rule 76)

	$default	reduce using rule 75 (STAR-32)

	STAR-32	go to state 423

State 405:

	Class -> 'use parent qw(' WordScoped ')' ';' Include STAR-26 OPTIONAL-27 STAR-28 STAR-29 Properties STAR-30 LITERAL_NUMBER ';' .	(Rule 72)

	$default	reduce using rule 72 (Class)

State 406:

	Subroutine -> SUB WORD . LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)
	Method -> SUB WORD . LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-33 STAR-34 '}'	(Rule 82)

	LBRACE	shift, and go to state 424

State 407:

	Subroutine -> SUB WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' . OPTIONAL-22 STAR-23 '}'	(Rule 57)

	LPAREN_MY	shift, and go to state 427

	'%{'	reduce using rule 54 (OPTIONAL-22)
	'@{'	reduce using rule 54 (OPTIONAL-22)
	'for'	reduce using rule 54 (OPTIONAL-22)
	'foreach'	reduce using rule 54 (OPTIONAL-22)
	'if'	reduce using rule 54 (OPTIONAL-22)
	'undef'	reduce using rule 54 (OPTIONAL-22)
	'while'	reduce using rule 54 (OPTIONAL-22)
	'}'	reduce using rule 54 (OPTIONAL-22)
	CONSTANT_CALL_SCOPED	reduce using rule 54 (OPTIONAL-22)
	LBRACE	reduce using rule 54 (OPTIONAL-22)
	LBRACKET	reduce using rule 54 (OPTIONAL-22)
	LITERAL_NUMBER	reduce using rule 54 (OPTIONAL-22)
	LITERAL_STRING	reduce using rule 54 (OPTIONAL-22)
	LPAREN	reduce using rule 54 (OPTIONAL-22)
	MY	reduce using rule 54 (OPTIONAL-22)
	OP01_CLOSE	reduce using rule 54 (OPTIONAL-22)
	OP01_NAMED	reduce using rule 54 (OPTIONAL-22)
	OP01_NAMED_SCOLON	reduce using rule 54 (OPTIONAL-22)
	OP01_NAMED_VOID	reduce using rule 54 (OPTIONAL-22)
	OP01_NAMED_VOID_LPAREN	reduce using rule 54 (OPTIONAL-22)
	OP01_NAMED_VOID_SCOLON	reduce using rule 54 (OPTIONAL-22)
	OP01_OPEN	reduce using rule 54 (OPTIONAL-22)
	OP01_PRINT	reduce using rule 54 (OPTIONAL-22)
	OP03_MATH_INC_DEC	reduce using rule 54 (OPTIONAL-22)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 54 (OPTIONAL-22)
	OP05_LOGICAL_NEG	reduce using rule 54 (OPTIONAL-22)
	OP05_MATH_NEG_LPAREN	reduce using rule 54 (OPTIONAL-22)
	OP10_NAMED_UNARY	reduce using rule 54 (OPTIONAL-22)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 54 (OPTIONAL-22)
	OP19_LOOP_CONTROL	reduce using rule 54 (OPTIONAL-22)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 54 (OPTIONAL-22)
	OP22_LOGICAL_NEG	reduce using rule 54 (OPTIONAL-22)
	OP22_LOGICAL_NEG_LPAREN	reduce using rule 54 (OPTIONAL-22)
	SELF	reduce using rule 54 (OPTIONAL-22)
	VARIABLE_SYMBOL	reduce using rule 54 (OPTIONAL-22)
	WORD	reduce using rule 54 (OPTIONAL-22)
	WORD_SCOPED	reduce using rule 54 (OPTIONAL-22)
	WORD_UPPERCASE	reduce using rule 54 (OPTIONAL-22)

	SubroutineArguments	go to state 425
	OPTIONAL-22	go to state 426

State 408:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING . OP21_LIST_COMMA SubExpression	(Rule 96)

	OP21_LIST_COMMA	shift, and go to state 428

State 409:

	TypeInner -> MY Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN .	(Rule 237)

	$default	reduce using rule 237 (TypeInner)

State 410:

	LoopWhile -> 'while' LPAREN SubExpression ')' CodeBlock .	(Rule 184)

	$default	reduce using rule 184 (LoopWhile)

State 411:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . SubExpressionOrInput ')' CodeBlock	(Rule 185)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	FHREF_SYMBOL_IN	shift, and go to state 325
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	STDIN	shift, and go to state 326
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	SubExpressionOrInput	go to state 429
	Literal	go to state 128
	Operator	go to state 111
	HashReference	go to state 126
	Variable	go to state 164
	ArrayReference	go to state 134
	Expression	go to state 159
	WordScoped	go to state 140
	ArrayDereference	go to state 139
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	SubExpression	go to state 324

State 412:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN . OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 182)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_NAMED_SCOLON	shift, and go to state 433
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 432
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	Variable	go to state 164
	ArrayReference	go to state 134
	Expression	go to state 159
	Operator	go to state 111
	Literal	go to state 128
	HashReference	go to state 126
	OpNamedScolonOrSubExp	go to state 430
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	SubExpression	go to state 431
	ArrayDereference	go to state 139
	WordScoped	go to state 140

State 413:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN . SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 181)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	ArrayReference	go to state 134
	Expression	go to state 159
	Variable	go to state 164
	HashReference	go to state 126
	Operator	go to state 111
	Literal	go to state 128
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	SubExpression	go to state 434
	WordScoped	go to state 140
	ArrayDereference	go to state 139

State 414:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN . ListElements ')' CodeBlock	(Rule 183)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	ARGV	shift, and go to state 166
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 160
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP01_QW	shift, and go to state 167
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	Expression	go to state 159
	ArrayReference	go to state 134
	Variable	go to state 164
	HashReference	go to state 126
	Literal	go to state 128
	Operator	go to state 111
	ListElements	go to state 435
	HashDereference	go to state 142
	ListElement	go to state 209
	VariableSymbolOrSelf	go to state 108
	SubExpression	go to state 210
	TypeInner	go to state 163
	WordScoped	go to state 140
	ArrayDereference	go to state 139

State 415:

	Operator -> LPAREN OP01_NAMED ListElement OP21_LIST_COMMA ListElements ')' .	(Rule 95)

	$default	reduce using rule 95 (Operator)

State 416:

	OpNamedScolonOrSubExpIn -> SubExpressionOrInput ';' .	(Rule 255)

	$default	reduce using rule 255 (OpNamedScolonOrSubExpIn)

State 417:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' . OP19_VARIABLE_ASSIGN 'undef' ';'	(Rule 197)

	OP19_VARIABLE_ASSIGN	shift, and go to state 436

State 418:

	PLUS-49 -> Operation .	(Rule 187)

	$default	reduce using rule 187 (PLUS-49)

State 419:

	PLUS-49 -> PLUS-49 . Operation	(Rule 186)
	CodeBlock -> LBRACE PLUS-49 . '}'	(Rule 188)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'if'	shift, and go to state 136
	'undef'	shift, and go to state 104
	'}'	shift, and go to state 437
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 132
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 97
	OP01_NAMED_SCOLON	shift, and go to state 113
	OP01_NAMED_VOID	shift, and go to state 107
	OP01_NAMED_VOID_LPAREN	shift, and go to state 112
	OP01_NAMED_VOID_SCOLON	shift, and go to state 133
	OP01_OPEN	shift, and go to state 92
	OP01_PRINT	shift, and go to state 102
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 131
	OP19_LOOP_CONTROL	shift, and go to state 96
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 138
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 129

	'for'	reduce using rule 165 (OPTIONAL-44)
	'foreach'	reduce using rule 165 (OPTIONAL-44)
	'while'	reduce using rule 165 (OPTIONAL-44)

	SubExpression	go to state 141
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	Statement	go to state 137
	WordScoped	go to state 140
	ArrayDereference	go to state 139
	LoopLabel	go to state 144
	Variable	go to state 145
	Operation	go to state 438
	Operator	go to state 111
	VariableModification	go to state 121
	PAREN-43	go to state 119
	Conditional	go to state 118
	OperatorVoid	go to state 95
	VariableDeclaration	go to state 94
	Expression	go to state 135
	ArrayReference	go to state 134
	OPTIONAL-44	go to state 101
	HashReference	go to state 126
	Literal	go to state 128

State 420:

	STAR-46 -> STAR-46 . PAREN-45	(Rule 172)
	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-46 . OPTIONAL-48	(Rule 177)

	'else'	shift, and go to state 443
	'elsif'	shift, and go to state 439

	$end	reduce using rule 176 (OPTIONAL-48)
	'%{'	reduce using rule 176 (OPTIONAL-48)
	'@{'	reduce using rule 176 (OPTIONAL-48)
	'for'	reduce using rule 176 (OPTIONAL-48)
	'foreach'	reduce using rule 176 (OPTIONAL-48)
	'if'	reduce using rule 176 (OPTIONAL-48)
	'undef'	reduce using rule 176 (OPTIONAL-48)
	'while'	reduce using rule 176 (OPTIONAL-48)
	'}'	reduce using rule 176 (OPTIONAL-48)
	CONSTANT_CALL_SCOPED	reduce using rule 176 (OPTIONAL-48)
	LBRACE	reduce using rule 176 (OPTIONAL-48)
	LBRACKET	reduce using rule 176 (OPTIONAL-48)
	LITERAL_NUMBER	reduce using rule 176 (OPTIONAL-48)
	LITERAL_STRING	reduce using rule 176 (OPTIONAL-48)
	LPAREN	reduce using rule 176 (OPTIONAL-48)
	MY	reduce using rule 176 (OPTIONAL-48)
	OP01_CLOSE	reduce using rule 176 (OPTIONAL-48)
	OP01_NAMED	reduce using rule 176 (OPTIONAL-48)
	OP01_NAMED_SCOLON	reduce using rule 176 (OPTIONAL-48)
	OP01_NAMED_VOID	reduce using rule 176 (OPTIONAL-48)
	OP01_NAMED_VOID_LPAREN	reduce using rule 176 (OPTIONAL-48)
	OP01_NAMED_VOID_SCOLON	reduce using rule 176 (OPTIONAL-48)
	OP01_OPEN	reduce using rule 176 (OPTIONAL-48)
	OP01_PRINT	reduce using rule 176 (OPTIONAL-48)
	OP03_MATH_INC_DEC	reduce using rule 176 (OPTIONAL-48)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 176 (OPTIONAL-48)
	OP05_LOGICAL_NEG	reduce using rule 176 (OPTIONAL-48)
	OP05_MATH_NEG_LPAREN	reduce using rule 176 (OPTIONAL-48)
	OP10_NAMED_UNARY	reduce using rule 176 (OPTIONAL-48)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 176 (OPTIONAL-48)
	OP19_LOOP_CONTROL	reduce using rule 176 (OPTIONAL-48)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 176 (OPTIONAL-48)
	OP22_LOGICAL_NEG	reduce using rule 176 (OPTIONAL-48)
	OP22_LOGICAL_NEG_LPAREN	reduce using rule 176 (OPTIONAL-48)
	SELF	reduce using rule 176 (OPTIONAL-48)
	VARIABLE_SYMBOL	reduce using rule 176 (OPTIONAL-48)
	WORD	reduce using rule 176 (OPTIONAL-48)
	WORD_SCOPED	reduce using rule 176 (OPTIONAL-48)
	WORD_UPPERCASE	reduce using rule 176 (OPTIONAL-48)

	PAREN-47	go to state 441
	PAREN-45	go to state 442
	OPTIONAL-48	go to state 440

State 421:

	HashEntryProperties -> OpStringOrWord OP20_HASH_FATARROW . TypeInnerProperties	(Rule 221)

	MY	shift, and go to state 444

	TypeInnerProperties	go to state 445

State 422:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE '}' ';' .	(Rule 77)

	$default	reduce using rule 77 (Properties)

State 423:

	STAR-32 -> STAR-32 . PAREN-31	(Rule 74)
	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-32 . '}' ';'	(Rule 76)

	'}'	shift, and go to state 448
	OP21_LIST_COMMA	shift, and go to state 446

	PAREN-31	go to state 447

State 424:

	Subroutine -> SUB WORD LBRACE . LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)
	Method -> SUB WORD LBRACE . LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-33 STAR-34 '}'	(Rule 82)

	LBRACE	shift, and go to state 449

State 425:

	OPTIONAL-22 -> SubroutineArguments .	(Rule 53)

	$default	reduce using rule 53 (OPTIONAL-22)

State 426:

	Subroutine -> SUB WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 . STAR-23 '}'	(Rule 57)

	$default	reduce using rule 56 (STAR-23)

	STAR-23	go to state 450

State 427:

	SubroutineArguments -> LPAREN_MY . Type VARIABLE_SYMBOL STAR-25 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 61)

	TYPE_INTEGER	shift, and go to state 149
	WORD	shift, and go to state 152
	WORD_SCOPED	shift, and go to state 150

	Type	go to state 451

State 428:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA . SubExpression	(Rule 96)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	SubExpression	go to state 452
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	ArrayDereference	go to state 139
	WordScoped	go to state 140
	ArrayReference	go to state 134
	Expression	go to state 159
	Variable	go to state 164
	HashReference	go to state 126
	Operator	go to state 111
	Literal	go to state 128

State 429:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput . ')' CodeBlock	(Rule 185)

	')'	shift, and go to state 453

State 430:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp . VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 182)

	VARIABLE_SYMBOL	shift, and go to state 454

State 431:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)
	OpNamedScolonOrSubExp -> SubExpression . ';'	(Rule 252)

	';'	shift, and go to state 455
	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252
	OP23_LOGICAL_AND	shift, and go to state 246
	OP24_LOGICAL_OR_XOR	shift, and go to state 242

State 432:

	OpNamedScolonOrSubExp -> OP10_NAMED_UNARY_SCOLON .	(Rule 251)

	$default	reduce using rule 251 (OpNamedScolonOrSubExp)

State 433:

	OpNamedScolonOrSubExp -> OP01_NAMED_SCOLON .	(Rule 250)

	$default	reduce using rule 250 (OpNamedScolonOrSubExp)

State 434:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression . OP17_LIST_RANGE SubExpression ')' CodeBlock	(Rule 181)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 456
	OP18_TERNARY	shift, and go to state 252
	OP23_LOGICAL_AND	shift, and go to state 246
	OP24_LOGICAL_OR_XOR	shift, and go to state 242

State 435:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements . ')' CodeBlock	(Rule 183)

	')'	shift, and go to state 457

State 436:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN . 'undef' ';'	(Rule 197)

	'undef'	shift, and go to state 458

State 437:

	CodeBlock -> LBRACE PLUS-49 '}' .	(Rule 188)

	$default	reduce using rule 188 (CodeBlock)

State 438:

	PLUS-49 -> PLUS-49 Operation .	(Rule 186)

	$default	reduce using rule 186 (PLUS-49)

State 439:

	PAREN-45 -> 'elsif' . LPAREN SubExpression ')' CodeBlock	(Rule 171)

	LPAREN	shift, and go to state 459

State 440:

	Conditional -> 'if' LPAREN SubExpression ')' CodeBlock STAR-46 OPTIONAL-48 .	(Rule 177)

	$default	reduce using rule 177 (Conditional)

State 441:

	OPTIONAL-48 -> PAREN-47 .	(Rule 175)

	$default	reduce using rule 175 (OPTIONAL-48)

State 442:

	STAR-46 -> STAR-46 PAREN-45 .	(Rule 172)

	$default	reduce using rule 172 (STAR-46)

State 443:

	PAREN-47 -> 'else' . CodeBlock	(Rule 174)

	LBRACE	shift, and go to state 398

	CodeBlock	go to state 460

State 444:

	TypeInnerProperties -> MY . Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN SubExpression	(Rule 238)
	TypeInnerProperties -> MY . Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 239)

	TYPE_INTEGER	shift, and go to state 149
	WORD	shift, and go to state 152
	WORD_SCOPED	shift, and go to state 150

	Type	go to state 461

State 445:

	HashEntryProperties -> OpStringOrWord OP20_HASH_FATARROW TypeInnerProperties .	(Rule 221)

	$default	reduce using rule 221 (HashEntryProperties)

State 446:

	PAREN-31 -> OP21_LIST_COMMA . HashEntryProperties	(Rule 73)

	OP01_CLOSE	shift, and go to state 185
	OP01_NAMED	shift, and go to state 189
	OP01_NAMED_VOID	shift, and go to state 192
	OP01_OPEN	shift, and go to state 184
	OP01_PRINT	shift, and go to state 191
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 174
	OP07_STRING_REPEAT	shift, and go to state 171
	OP08_MATH_ADD_SUB	shift, and go to state 180
	OP10_NAMED_UNARY	shift, and go to state 193
	OP11_COMPARE_LT_GT	shift, and go to state 188
	OP12_COMPARE_EQ_NE	shift, and go to state 172
	OP19_LOOP_CONTROL	shift, and go to state 187
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 178
	OP22_LOGICAL_NEG	shift, and go to state 195
	OP23_LOGICAL_AND	shift, and go to state 181
	OP24_LOGICAL_OR_XOR	shift, and go to state 177
	WORD	shift, and go to state 173

	OpStringOrWord	go to state 402
	HashEntryProperties	go to state 462

State 447:

	STAR-32 -> STAR-32 PAREN-31 .	(Rule 74)

	$default	reduce using rule 74 (STAR-32)

State 448:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-32 '}' . ';'	(Rule 76)

	';'	shift, and go to state 463

State 449:

	Subroutine -> SUB WORD LBRACE LBRACE . MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)
	Method -> SUB WORD LBRACE LBRACE . MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-33 STAR-34 '}'	(Rule 82)

	MY	shift, and go to state 464

State 450:

	STAR-23 -> STAR-23 . Operation	(Rule 55)
	Subroutine -> SUB WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 . '}'	(Rule 57)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'if'	shift, and go to state 136
	'undef'	shift, and go to state 104
	'}'	shift, and go to state 465
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 132
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 97
	OP01_NAMED_SCOLON	shift, and go to state 113
	OP01_NAMED_VOID	shift, and go to state 107
	OP01_NAMED_VOID_LPAREN	shift, and go to state 112
	OP01_NAMED_VOID_SCOLON	shift, and go to state 133
	OP01_OPEN	shift, and go to state 92
	OP01_PRINT	shift, and go to state 102
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 131
	OP19_LOOP_CONTROL	shift, and go to state 96
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 138
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 129

	'for'	reduce using rule 165 (OPTIONAL-44)
	'foreach'	reduce using rule 165 (OPTIONAL-44)
	'while'	reduce using rule 165 (OPTIONAL-44)

	Statement	go to state 137
	WordScoped	go to state 140
	ArrayDereference	go to state 139
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	SubExpression	go to state 141
	Operator	go to state 111
	LoopLabel	go to state 144
	Operation	go to state 466
	Variable	go to state 145
	OperatorVoid	go to state 95
	VariableDeclaration	go to state 94
	Conditional	go to state 118
	PAREN-43	go to state 119
	VariableModification	go to state 121
	HashReference	go to state 126
	Literal	go to state 128
	Expression	go to state 135
	ArrayReference	go to state 134
	OPTIONAL-44	go to state 101

State 451:

	SubroutineArguments -> LPAREN_MY Type . VARIABLE_SYMBOL STAR-25 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 61)

	VARIABLE_SYMBOL	shift, and go to state 467

State 452:

	Operator -> OP01_OPEN MY TYPE_FHREF FHREF_SYMBOL OP21_LIST_COMMA LITERAL_STRING OP21_LIST_COMMA SubExpression .	(Rule 96)
	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252

	')'	reduce using rule 96 (Operator)
	';'	reduce using rule 96 (Operator)
	']'	reduce using rule 96 (Operator)
	'}'	reduce using rule 96 (Operator)
	OP21_LIST_COMMA	reduce using rule 96 (Operator)
	OP23_LOGICAL_AND	reduce using rule 96 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 96 (Operator)

State 453:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' . CodeBlock	(Rule 185)

	LBRACE	shift, and go to state 398

	CodeBlock	go to state 468

State 454:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL . OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 182)

	OP11_COMPARE_LT_GT	shift, and go to state 469

State 455:

	OpNamedScolonOrSubExp -> SubExpression ';' .	(Rule 252)

	$default	reduce using rule 252 (OpNamedScolonOrSubExp)

State 456:

	Operator -> SubExpression OP17_LIST_RANGE . SubExpression	(Rule 118)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE . SubExpression ')' CodeBlock	(Rule 181)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	Operator	go to state 111
	Literal	go to state 128
	HashReference	go to state 126
	Variable	go to state 164
	Expression	go to state 159
	ArrayReference	go to state 134
	WordScoped	go to state 140
	ArrayDereference	go to state 139
	SubExpression	go to state 470
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108

State 457:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' . CodeBlock	(Rule 183)

	LBRACE	shift, and go to state 398

	CodeBlock	go to state 471

State 458:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' . ';'	(Rule 197)

	';'	shift, and go to state 472

State 459:

	PAREN-45 -> 'elsif' LPAREN . SubExpression ')' CodeBlock	(Rule 171)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	HashReference	go to state 126
	Operator	go to state 111
	Literal	go to state 128
	Expression	go to state 159
	ArrayReference	go to state 134
	Variable	go to state 164
	ArrayDereference	go to state 139
	WordScoped	go to state 140
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	SubExpression	go to state 473

State 460:

	PAREN-47 -> 'else' CodeBlock .	(Rule 174)

	$default	reduce using rule 174 (PAREN-47)

State 461:

	TypeInnerProperties -> MY Type . '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN SubExpression	(Rule 238)
	TypeInnerProperties -> MY Type . '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 239)

	'$TYPED_'	shift, and go to state 474

State 462:

	PAREN-31 -> OP21_LIST_COMMA HashEntryProperties .	(Rule 73)

	$default	reduce using rule 73 (PAREN-31)

State 463:

	Properties -> 'our hashref $properties' OP19_VARIABLE_ASSIGN LBRACE HashEntryProperties STAR-32 '}' ';' .	(Rule 76)

	$default	reduce using rule 76 (Properties)

State 464:

	Subroutine -> SUB WORD LBRACE LBRACE MY . Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}'	(Rule 57)
	Method -> SUB WORD LBRACE LBRACE MY . TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-33 STAR-34 '}'	(Rule 82)

	TYPE_INTEGER	shift, and go to state 149
	TYPE_METHOD	shift, and go to state 475
	WORD	shift, and go to state 152
	WORD_SCOPED	shift, and go to state 150

	Type	go to state 264

State 465:

	Subroutine -> SUB WORD LBRACE LBRACE MY Type '$RETURN_TYPE' '}' ';' OPTIONAL-22 STAR-23 '}' .	(Rule 57)

	$default	reduce using rule 57 (Subroutine)

State 466:

	STAR-23 -> STAR-23 Operation .	(Rule 55)

	$default	reduce using rule 55 (STAR-23)

State 467:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL . STAR-25 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 61)

	$default	reduce using rule 60 (STAR-25)

	STAR-25	go to state 476

State 468:

	LoopWhile -> 'while' LPAREN_MY Type VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN SubExpressionOrInput ')' CodeBlock .	(Rule 185)

	$default	reduce using rule 185 (LoopWhile)

State 469:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT . OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock	(Rule 182)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_NAMED_SCOLON	shift, and go to state 433
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 432
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	OpNamedScolonOrSubExp	go to state 477
	SubExpression	go to state 431
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	WordScoped	go to state 140
	ArrayDereference	go to state 139
	Variable	go to state 164
	Expression	go to state 159
	ArrayReference	go to state 134
	Literal	go to state 128
	Operator	go to state 111
	HashReference	go to state 126

State 470:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression OP17_LIST_RANGE SubExpression .	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)
	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression . ')' CodeBlock	(Rule 181)

	')'	shift, and go to state 478
	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253

	OP17_LIST_RANGE	error (nonassociative)

	OP18_TERNARY	reduce using rule 118 (Operator)
	OP23_LOGICAL_AND	reduce using rule 118 (Operator)
	OP24_LOGICAL_OR_XOR	reduce using rule 118 (Operator)

State 471:

	LoopForEach -> 'foreach' MY Type VARIABLE_SYMBOL LPAREN ListElements ')' CodeBlock .	(Rule 183)

	$default	reduce using rule 183 (LoopForEach)

State 472:

	VariableDeclaration -> MY Type VARIABLE_SYMBOL OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' ';' .	(Rule 197)

	$default	reduce using rule 197 (VariableDeclaration)

State 473:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)
	PAREN-45 -> 'elsif' LPAREN SubExpression . ')' CodeBlock	(Rule 171)

	')'	shift, and go to state 479
	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252
	OP23_LOGICAL_AND	shift, and go to state 246
	OP24_LOGICAL_OR_XOR	shift, and go to state 242

State 474:

	TypeInnerProperties -> MY Type '$TYPED_' . OpStringOrWord OP19_VARIABLE_ASSIGN SubExpression	(Rule 238)
	TypeInnerProperties -> MY Type '$TYPED_' . OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 239)

	OP01_CLOSE	shift, and go to state 185
	OP01_NAMED	shift, and go to state 189
	OP01_NAMED_VOID	shift, and go to state 192
	OP01_OPEN	shift, and go to state 184
	OP01_PRINT	shift, and go to state 191
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 174
	OP07_STRING_REPEAT	shift, and go to state 171
	OP08_MATH_ADD_SUB	shift, and go to state 180
	OP10_NAMED_UNARY	shift, and go to state 193
	OP11_COMPARE_LT_GT	shift, and go to state 188
	OP12_COMPARE_EQ_NE	shift, and go to state 172
	OP19_LOOP_CONTROL	shift, and go to state 187
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 178
	OP22_LOGICAL_NEG	shift, and go to state 195
	OP23_LOGICAL_AND	shift, and go to state 181
	OP24_LOGICAL_OR_XOR	shift, and go to state 177
	WORD	shift, and go to state 173

	OpStringOrWord	go to state 480

State 475:

	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD . '$RETURN_TYPE' '}' ';' OPTIONAL-33 STAR-34 '}'	(Rule 82)

	'$RETURN_TYPE'	shift, and go to state 481

State 476:

	STAR-25 -> STAR-25 . PAREN-24	(Rule 59)
	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-25 . ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 61)

	')'	shift, and go to state 484
	OP21_LIST_COMMA	shift, and go to state 482

	PAREN-24	go to state 483

State 477:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp . SubExpressionOrVarMod ')' CodeBlock	(Rule 182)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	Variable	go to state 145
	ArrayReference	go to state 134
	Expression	go to state 159
	SubExpressionOrVarMod	go to state 487
	Literal	go to state 128
	Operator	go to state 111
	HashReference	go to state 126
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	SubExpression	go to state 485
	VariableModification	go to state 486
	ArrayDereference	go to state 139
	WordScoped	go to state 140

State 478:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' . CodeBlock	(Rule 181)

	LBRACE	shift, and go to state 398

	CodeBlock	go to state 488

State 479:

	PAREN-45 -> 'elsif' LPAREN SubExpression ')' . CodeBlock	(Rule 171)

	LBRACE	shift, and go to state 398

	CodeBlock	go to state 489

State 480:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord . OP19_VARIABLE_ASSIGN SubExpression	(Rule 238)
	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord . OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 239)

	OP02_ARRAY_THINARROW	shift, and go to state 490
	OP19_VARIABLE_ASSIGN	shift, and go to state 491

State 481:

	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' . '}' ';' OPTIONAL-33 STAR-34 '}'	(Rule 82)

	'}'	shift, and go to state 492

State 482:

	PAREN-24 -> OP21_LIST_COMMA . MY Type VARIABLE_SYMBOL	(Rule 58)

	MY	shift, and go to state 493

State 483:

	STAR-25 -> STAR-25 PAREN-24 .	(Rule 59)

	$default	reduce using rule 59 (STAR-25)

State 484:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-25 ')' . OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 61)

	OP19_VARIABLE_ASSIGN	shift, and go to state 494

State 485:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)
	SubExpressionOrVarMod -> SubExpression .	(Rule 161)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252
	OP23_LOGICAL_AND	shift, and go to state 246
	OP24_LOGICAL_OR_XOR	shift, and go to state 242

	')'	reduce using rule 161 (SubExpressionOrVarMod)

State 486:

	SubExpressionOrVarMod -> VariableModification .	(Rule 162)

	$default	reduce using rule 162 (SubExpressionOrVarMod)

State 487:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod . ')' CodeBlock	(Rule 182)

	')'	shift, and go to state 495

State 488:

	LoopFor -> 'for' MY TYPE_INTEGER VARIABLE_SYMBOL LPAREN SubExpression OP17_LIST_RANGE SubExpression ')' CodeBlock .	(Rule 181)

	$default	reduce using rule 181 (LoopFor)

State 489:

	PAREN-45 -> 'elsif' LPAREN SubExpression ')' CodeBlock .	(Rule 171)

	$default	reduce using rule 171 (PAREN-45)

State 490:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW . SubExpression ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 239)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	Variable	go to state 164
	ArrayReference	go to state 134
	Expression	go to state 159
	Literal	go to state 128
	Operator	go to state 111
	HashReference	go to state 126
	SubExpression	go to state 496
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	ArrayDereference	go to state 139
	WordScoped	go to state 140

State 491:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN . SubExpression	(Rule 238)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'undef'	shift, and go to state 104
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 165
	OP01_OPEN	shift, and go to state 92
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 161

	Variable	go to state 164
	ArrayReference	go to state 134
	Expression	go to state 159
	Literal	go to state 128
	Operator	go to state 111
	HashReference	go to state 126
	HashDereference	go to state 142
	VariableSymbolOrSelf	go to state 108
	SubExpression	go to state 497
	ArrayDereference	go to state 139
	WordScoped	go to state 140

State 492:

	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' . ';' OPTIONAL-33 STAR-34 '}'	(Rule 82)

	';'	shift, and go to state 498

State 493:

	PAREN-24 -> OP21_LIST_COMMA MY . Type VARIABLE_SYMBOL	(Rule 58)

	TYPE_INTEGER	shift, and go to state 149
	WORD	shift, and go to state 152
	WORD_SCOPED	shift, and go to state 150

	Type	go to state 499

State 494:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-25 ')' OP19_VARIABLE_ASSIGN . '@ARG;'	(Rule 61)

	'@ARG;'	shift, and go to state 500

State 495:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' . CodeBlock	(Rule 182)

	LBRACE	shift, and go to state 398

	CodeBlock	go to state 501

State 496:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)
	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression . ']' OP19_VARIABLE_ASSIGN 'undef'	(Rule 239)

	']'	shift, and go to state 502
	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252
	OP23_LOGICAL_AND	shift, and go to state 246
	OP24_LOGICAL_OR_XOR	shift, and go to state 242

State 497:

	Operator -> SubExpression . OP04_MATH_POW SubExpression	(Rule 100)
	Operator -> SubExpression . OP06_REGEX_BIND OP06_REGEX_PATTERN	(Rule 104)
	Operator -> SubExpression . OP07_STRING_REPEAT SubExpression	(Rule 105)
	Operator -> SubExpression . OP07_MATH_MULT_DIV_MOD SubExpression	(Rule 106)
	Operator -> SubExpression . OP08_MATH_ADD_SUB SubExpression	(Rule 107)
	Operator -> SubExpression . OP08_STRING_CAT SubExpression	(Rule 108)
	Operator -> SubExpression . OP09_BITWISE_SHIFT SubExpression	(Rule 109)
	Operator -> SubExpression . OP11_COMPARE_LT_GT SubExpression	(Rule 112)
	Operator -> SubExpression . OP12_COMPARE_EQ_NE SubExpression	(Rule 113)
	Operator -> SubExpression . OP13_BITWISE_AND SubExpression	(Rule 114)
	Operator -> SubExpression . OP14_BITWISE_OR_XOR SubExpression	(Rule 115)
	Operator -> SubExpression . OP15_LOGICAL_AND SubExpression	(Rule 116)
	Operator -> SubExpression . OP16_LOGICAL_OR SubExpression	(Rule 117)
	Operator -> SubExpression . OP17_LIST_RANGE SubExpression	(Rule 118)
	Operator -> SubExpression . OP18_TERNARY VariableOrLiteral COLON VariableOrLiteral	(Rule 119)
	Operator -> SubExpression . OP23_LOGICAL_AND SubExpression	(Rule 122)
	Operator -> SubExpression . OP24_LOGICAL_OR_XOR SubExpression	(Rule 123)
	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP19_VARIABLE_ASSIGN SubExpression .	(Rule 238)

	OP04_MATH_POW	shift, and go to state 247
	OP06_REGEX_BIND	shift, and go to state 251
	OP07_MATH_MULT_DIV_MOD	shift, and go to state 240
	OP07_STRING_REPEAT	shift, and go to state 238
	OP08_MATH_ADD_SUB	shift, and go to state 244
	OP08_STRING_CAT	shift, and go to state 245
	OP09_BITWISE_SHIFT	shift, and go to state 250
	OP11_COMPARE_LT_GT	shift, and go to state 249
	OP12_COMPARE_EQ_NE	shift, and go to state 239
	OP13_BITWISE_AND	shift, and go to state 243
	OP14_BITWISE_OR_XOR	shift, and go to state 237
	OP15_LOGICAL_AND	shift, and go to state 248
	OP16_LOGICAL_OR	shift, and go to state 253
	OP17_LIST_RANGE	shift, and go to state 241
	OP18_TERNARY	shift, and go to state 252
	OP23_LOGICAL_AND	shift, and go to state 246
	OP24_LOGICAL_OR_XOR	shift, and go to state 242

	'}'	reduce using rule 238 (TypeInnerProperties)
	OP21_LIST_COMMA	reduce using rule 238 (TypeInnerProperties)

State 498:

	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' . OPTIONAL-33 STAR-34 '}'	(Rule 82)

	LPAREN_MY	shift, and go to state 503

	'%{'	reduce using rule 79 (OPTIONAL-33)
	'@{'	reduce using rule 79 (OPTIONAL-33)
	'for'	reduce using rule 79 (OPTIONAL-33)
	'foreach'	reduce using rule 79 (OPTIONAL-33)
	'if'	reduce using rule 79 (OPTIONAL-33)
	'undef'	reduce using rule 79 (OPTIONAL-33)
	'while'	reduce using rule 79 (OPTIONAL-33)
	'}'	reduce using rule 79 (OPTIONAL-33)
	CONSTANT_CALL_SCOPED	reduce using rule 79 (OPTIONAL-33)
	LBRACE	reduce using rule 79 (OPTIONAL-33)
	LBRACKET	reduce using rule 79 (OPTIONAL-33)
	LITERAL_NUMBER	reduce using rule 79 (OPTIONAL-33)
	LITERAL_STRING	reduce using rule 79 (OPTIONAL-33)
	LPAREN	reduce using rule 79 (OPTIONAL-33)
	MY	reduce using rule 79 (OPTIONAL-33)
	OP01_CLOSE	reduce using rule 79 (OPTIONAL-33)
	OP01_NAMED	reduce using rule 79 (OPTIONAL-33)
	OP01_NAMED_SCOLON	reduce using rule 79 (OPTIONAL-33)
	OP01_NAMED_VOID	reduce using rule 79 (OPTIONAL-33)
	OP01_NAMED_VOID_LPAREN	reduce using rule 79 (OPTIONAL-33)
	OP01_NAMED_VOID_SCOLON	reduce using rule 79 (OPTIONAL-33)
	OP01_OPEN	reduce using rule 79 (OPTIONAL-33)
	OP01_PRINT	reduce using rule 79 (OPTIONAL-33)
	OP03_MATH_INC_DEC	reduce using rule 79 (OPTIONAL-33)
	OP05_BITWISE_NEG_LPAREN	reduce using rule 79 (OPTIONAL-33)
	OP05_LOGICAL_NEG	reduce using rule 79 (OPTIONAL-33)
	OP05_MATH_NEG_LPAREN	reduce using rule 79 (OPTIONAL-33)
	OP10_NAMED_UNARY	reduce using rule 79 (OPTIONAL-33)
	OP10_NAMED_UNARY_SCOLON	reduce using rule 79 (OPTIONAL-33)
	OP19_LOOP_CONTROL	reduce using rule 79 (OPTIONAL-33)
	OP19_LOOP_CONTROL_SCOLON	reduce using rule 79 (OPTIONAL-33)
	OP22_LOGICAL_NEG	reduce using rule 79 (OPTIONAL-33)
	OP22_LOGICAL_NEG_LPAREN	reduce using rule 79 (OPTIONAL-33)
	SELF	reduce using rule 79 (OPTIONAL-33)
	VARIABLE_SYMBOL	reduce using rule 79 (OPTIONAL-33)
	WORD	reduce using rule 79 (OPTIONAL-33)
	WORD_SCOPED	reduce using rule 79 (OPTIONAL-33)
	WORD_UPPERCASE	reduce using rule 79 (OPTIONAL-33)

	MethodArguments	go to state 504
	OPTIONAL-33	go to state 505

State 499:

	PAREN-24 -> OP21_LIST_COMMA MY Type . VARIABLE_SYMBOL	(Rule 58)

	VARIABLE_SYMBOL	shift, and go to state 506

State 500:

	SubroutineArguments -> LPAREN_MY Type VARIABLE_SYMBOL STAR-25 ')' OP19_VARIABLE_ASSIGN '@ARG;' .	(Rule 61)

	$default	reduce using rule 61 (SubroutineArguments)

State 501:

	LoopFor -> 'for' LPAREN_MY TYPE_INTEGER VARIABLE_SYMBOL OP19_VARIABLE_ASSIGN OpNamedScolonOrSubExp VARIABLE_SYMBOL OP11_COMPARE_LT_GT OpNamedScolonOrSubExp SubExpressionOrVarMod ')' CodeBlock .	(Rule 182)

	$default	reduce using rule 182 (LoopFor)

State 502:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' . OP19_VARIABLE_ASSIGN 'undef'	(Rule 239)

	OP19_VARIABLE_ASSIGN	shift, and go to state 507

State 503:

	MethodArguments -> LPAREN_MY . Type SELF STAR-36 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 86)

	TYPE_INTEGER	shift, and go to state 149
	WORD	shift, and go to state 152
	WORD_SCOPED	shift, and go to state 150

	Type	go to state 508

State 504:

	OPTIONAL-33 -> MethodArguments .	(Rule 78)

	$default	reduce using rule 78 (OPTIONAL-33)

State 505:

	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-33 . STAR-34 '}'	(Rule 82)

	$default	reduce using rule 81 (STAR-34)

	STAR-34	go to state 509

State 506:

	PAREN-24 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL .	(Rule 58)

	$default	reduce using rule 58 (PAREN-24)

State 507:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN . 'undef'	(Rule 239)

	'undef'	shift, and go to state 510

State 508:

	MethodArguments -> LPAREN_MY Type . SELF STAR-36 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 86)

	SELF	shift, and go to state 511

State 509:

	STAR-34 -> STAR-34 . Operation	(Rule 80)
	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-33 STAR-34 . '}'	(Rule 82)

	'%{'	shift, and go to state 114
	'@{'	shift, and go to state 99
	'if'	shift, and go to state 136
	'undef'	shift, and go to state 104
	'}'	shift, and go to state 513
	CONSTANT_CALL_SCOPED	shift, and go to state 116
	LBRACE	shift, and go to state 100
	LBRACKET	shift, and go to state 125
	LITERAL_NUMBER	shift, and go to state 98
	LITERAL_STRING	shift, and go to state 123
	LPAREN	shift, and go to state 130
	MY	shift, and go to state 132
	OP01_CLOSE	shift, and go to state 93
	OP01_NAMED	shift, and go to state 97
	OP01_NAMED_SCOLON	shift, and go to state 113
	OP01_NAMED_VOID	shift, and go to state 107
	OP01_NAMED_VOID_LPAREN	shift, and go to state 112
	OP01_NAMED_VOID_SCOLON	shift, and go to state 133
	OP01_OPEN	shift, and go to state 92
	OP01_PRINT	shift, and go to state 102
	OP03_MATH_INC_DEC	shift, and go to state 115
	OP05_BITWISE_NEG_LPAREN	shift, and go to state 122
	OP05_LOGICAL_NEG	shift, and go to state 120
	OP05_MATH_NEG_LPAREN	shift, and go to state 124
	OP10_NAMED_UNARY	shift, and go to state 109
	OP10_NAMED_UNARY_SCOLON	shift, and go to state 131
	OP19_LOOP_CONTROL	shift, and go to state 96
	OP19_LOOP_CONTROL_SCOLON	shift, and go to state 138
	OP22_LOGICAL_NEG	shift, and go to state 110
	OP22_LOGICAL_NEG_LPAREN	shift, and go to state 106
	SELF	shift, and go to state 143
	VARIABLE_SYMBOL	shift, and go to state 103
	WORD	shift, and go to state 24
	WORD_SCOPED	shift, and go to state 25
	WORD_UPPERCASE	shift, and go to state 129

	'for'	reduce using rule 165 (OPTIONAL-44)
	'foreach'	reduce using rule 165 (OPTIONAL-44)
	'while'	reduce using rule 165 (OPTIONAL-44)

	HashReference	go to state 126
	Literal	go to state 128
	ArrayReference	go to state 134
	Expression	go to state 135
	OPTIONAL-44	go to state 101
	OperatorVoid	go to state 95
	VariableDeclaration	go to state 94
	Conditional	go to state 118
	PAREN-43	go to state 119
	VariableModification	go to state 121
	Operator	go to state 111
	LoopLabel	go to state 144
	Variable	go to state 145
	Operation	go to state 512
	Statement	go to state 137
	ArrayDereference	go to state 139
	WordScoped	go to state 140
	VariableSymbolOrSelf	go to state 108
	HashDereference	go to state 142
	SubExpression	go to state 141

State 510:

	TypeInnerProperties -> MY Type '$TYPED_' OpStringOrWord OP02_ARRAY_THINARROW SubExpression ']' OP19_VARIABLE_ASSIGN 'undef' .	(Rule 239)

	$default	reduce using rule 239 (TypeInnerProperties)

State 511:

	MethodArguments -> LPAREN_MY Type SELF . STAR-36 ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 86)

	$default	reduce using rule 85 (STAR-36)

	STAR-36	go to state 514

State 512:

	STAR-34 -> STAR-34 Operation .	(Rule 80)

	$default	reduce using rule 80 (STAR-34)

State 513:

	Method -> SUB WORD LBRACE LBRACE MY TYPE_METHOD '$RETURN_TYPE' '}' ';' OPTIONAL-33 STAR-34 '}' .	(Rule 82)

	$default	reduce using rule 82 (Method)

State 514:

	STAR-36 -> STAR-36 . PAREN-35	(Rule 84)
	MethodArguments -> LPAREN_MY Type SELF STAR-36 . ')' OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 86)

	')'	shift, and go to state 517
	OP21_LIST_COMMA	shift, and go to state 516

	PAREN-35	go to state 515

State 515:

	STAR-36 -> STAR-36 PAREN-35 .	(Rule 84)

	$default	reduce using rule 84 (STAR-36)

State 516:

	PAREN-35 -> OP21_LIST_COMMA . MY Type VARIABLE_SYMBOL	(Rule 83)

	MY	shift, and go to state 518

State 517:

	MethodArguments -> LPAREN_MY Type SELF STAR-36 ')' . OP19_VARIABLE_ASSIGN '@ARG;'	(Rule 86)

	OP19_VARIABLE_ASSIGN	shift, and go to state 519

State 518:

	PAREN-35 -> OP21_LIST_COMMA MY . Type VARIABLE_SYMBOL	(Rule 83)

	TYPE_INTEGER	shift, and go to state 149
	WORD	shift, and go to state 152
	WORD_SCOPED	shift, and go to state 150

	Type	go to state 520

State 519:

	MethodArguments -> LPAREN_MY Type SELF STAR-36 ')' OP19_VARIABLE_ASSIGN . '@ARG;'	(Rule 86)

	'@ARG;'	shift, and go to state 521

State 520:

	PAREN-35 -> OP21_LIST_COMMA MY Type . VARIABLE_SYMBOL	(Rule 83)

	VARIABLE_SYMBOL	shift, and go to state 522

State 521:

	MethodArguments -> LPAREN_MY Type SELF STAR-36 ')' OP19_VARIABLE_ASSIGN '@ARG;' .	(Rule 86)

	$default	reduce using rule 86 (MethodArguments)

State 522:

	PAREN-35 -> OP21_LIST_COMMA MY Type VARIABLE_SYMBOL .	(Rule 83)

	$default	reduce using rule 83 (PAREN-35)


Summary:
--------
Number of rules         : 273
Number of terminals     : 103
Number of non-terminals : 115
Number of states        : 523
