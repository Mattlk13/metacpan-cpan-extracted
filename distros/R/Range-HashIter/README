NAME
    Range::HashIter - Generate a tied-hash iterator for range

VERSION
    This document describes version 0.001 of Range::HashIter (from Perl
    distribution Range-HashIter), released on 2019-05-12.

SYNOPSIS
      use Range::HashIter qw(range_hashiter);

      my $iter = range_hashiter(1, 10);
      while (my ($key, undef) = each %$iter) { ... } # 1, 2, 3, 4, 5, 6, 7, 8, 9, 10

    You can add step:

     my $iter = range_hashiter(1, 10, 2); # 1, 3, 5, 7, 9

    You can use alphanumeric strings too since "++" has some extra builtin
    magic (see perlop):

     $iter = range_hashiter("zx", "aab"); # zx, zy, zz, aaa, aab

    Infinite list:

     $iter = range_hashiter(1, Inf); # 1, 2, 3, ...

DESCRIPTION
    PROOF OF CONCEPT.

    This module offers a tied-hash-based iterator that you can use using
    while() and each(). It's most probably useful as a proof of concept
    only.

FUNCTIONS
  range_hashiter($start, $end [ , $step ]) => hashref
HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/Range-HashIter>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-Range-HashIter>.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=Range-HashIter>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

SEE ALSO
    Range::Iter

    Range::Iterator

    Range::ArrayIter

    Range::HandleIter

AUTHOR
    perlancar <perlancar@cpan.org>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2019 by perlancar@cpan.org.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

