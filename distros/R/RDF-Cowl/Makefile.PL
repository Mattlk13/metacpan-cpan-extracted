# This file was automatically generated by Dist::Zilla::Plugin::MakeMaker v6.030.
use strict;
use warnings;

use 5.013002;

use ExtUtils::MakeMaker;

my %WriteMakefileArgs = (
  "ABSTRACT" => "A lightweight API for working with OWL 2 ontologies",
  "AUTHOR" => "Zakariyya Mughal <zmughal\@cpan.org>",
  "CONFIGURE_REQUIRES" => {
    "ExtUtils::MakeMaker" => 0,
    "FFI::Build::MM" => "0.83"
  },
  "DISTNAME" => "RDF-Cowl",
  "LICENSE" => "open_source",
  "MIN_PERL_VERSION" => "5.013002",
  "NAME" => "RDF::Cowl",
  "PREREQ_PM" => {
    "Alien::Cowl" => 0,
    "Class::Method::Modifiers" => 0,
    "Class::Tiny" => 0,
    "Const::Exporter" => 0,
    "Const::Fast" => 0,
    "Devel::StrictMode" => 0,
    "Exporter::Tiny" => 0,
    "FFI::C" => 0,
    "FFI::C::File" => 0,
    "FFI::CheckLib" => "0.28",
    "FFI::Platypus" => 0,
    "FFI::Platypus::Memory" => 0,
    "FFI::Platypus::Record" => 0,
    "Scalar::Util" => 0,
    "Type::Library" => "0.008",
    "Type::Params" => 0,
    "Type::Utils" => 0,
    "Types::Common" => 0,
    "base" => 0,
    "constant" => 0,
    "feature" => 0,
    "namespace::autoclean" => 0,
    "overload" => 0,
    "parent" => 0,
    "strict" => 0,
    "warnings" => 0
  },
  "TEST_REQUIRES" => {
    "Capture::Tiny" => 0,
    "Feature::Compat::Try" => 0,
    "Path::Tiny" => 0,
    "Test2::V0" => 0,
    "Text::Diff" => 0,
    "boolean" => 0,
    "lib" => 0
  },
  "VERSION" => "1.0.0",
  "test" => {
    "TESTS" => "t/upstream/*.t"
  }
);


my %FallbackPrereqs = (
  "Alien::Cowl" => 0,
  "Capture::Tiny" => 0,
  "Class::Method::Modifiers" => 0,
  "Class::Tiny" => 0,
  "Const::Exporter" => 0,
  "Const::Fast" => 0,
  "Devel::StrictMode" => 0,
  "Exporter::Tiny" => 0,
  "FFI::C" => 0,
  "FFI::C::File" => 0,
  "FFI::CheckLib" => "0.28",
  "FFI::Platypus" => 0,
  "FFI::Platypus::Memory" => 0,
  "FFI::Platypus::Record" => 0,
  "Feature::Compat::Try" => 0,
  "Path::Tiny" => 0,
  "Scalar::Util" => 0,
  "Test2::V0" => 0,
  "Text::Diff" => 0,
  "Type::Library" => "0.008",
  "Type::Params" => 0,
  "Type::Utils" => 0,
  "Types::Common" => 0,
  "base" => 0,
  "boolean" => 0,
  "constant" => 0,
  "feature" => 0,
  "lib" => 0,
  "namespace::autoclean" => 0,
  "overload" => 0,
  "parent" => 0,
  "strict" => 0,
  "warnings" => 0
);


# BEGIN code inserted by Dist::Zilla::Plugin::FFI::Build
use FFI::Build::MM 0.83;
my $fbmm = FFI::Build::MM->new;
%WriteMakefileArgs = $fbmm->mm_args(%WriteMakefileArgs);
# END code inserted by Dist::Zilla::Plugin::FFI::Build


unless ( eval { ExtUtils::MakeMaker->VERSION(6.63_03) } ) {
  delete $WriteMakefileArgs{TEST_REQUIRES};
  delete $WriteMakefileArgs{BUILD_REQUIRES};
  $WriteMakefileArgs{PREREQ_PM} = \%FallbackPrereqs;
}

delete $WriteMakefileArgs{CONFIGURE_REQUIRES}
  unless eval { ExtUtils::MakeMaker->VERSION(6.52) };

WriteMakefile(%WriteMakefileArgs);


# BEGIN code inserted by Dist::Zilla::Plugin::FFI::Build
BEGIN {
  # append to any existing postamble.
  if(my $old = MY->can('postamble'))
  {
    no warnings 'redefine';
    *MY::postamble = sub {
      $old->(@_) .
      "\n" .
      $fbmm->mm_postamble;
    };
  }
  else
  {
    *MY::postamble = sub {
      $fbmm->mm_postamble;
    };
  }
}
# END code inserted by Dist::Zilla::Plugin::FFI::Build

