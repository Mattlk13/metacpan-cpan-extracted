NAME
    Regexp::From::String - Convert '/.../' or 'qr(...)' into Regexp object

VERSION
    This document describes version 0.004 of Regexp::From::String (from Perl
    distribution Regexp-From-String), released on 2022-11-03.

SYNOPSIS
     use Regexp::From::String qw(str_maybe_to_re str_to_re);

     my $re1 = str_maybe_to_re('foo.');       # stays as string 'foo.'
     my $re2 = str_maybe_to_re('/foo.');      # stays as string '/foo.'
     my $re3 = str_maybe_to_re('/foo./');     # compiled to Regexp object qr(foo.) (metacharacters are allowed)
     my $re4 = str_maybe_to_re('qr(foo.)i');  # compiled to Regexp object qr(foo.)i
     my $re5 = str_maybe_to_re('qr(foo[)i');  # dies, invalid regex syntax

     my $re1 = str_to_re('foo.');       # compiled to Regexp object qr(foo\.) (metacharacters are quoted)
     my $re2 = str_to_re('/foo.');      # compiled to Regexp object qr(/foo\.)
     my $re2 = str_to_re({case_insensitive=>1}, 'foo.');    # compiled to Regexp object qr(foo\.)i
     my $re2 = str_to_re({anchored=>1}, 'foo.');            # compiled to Regexp object qr(\Afoo\.\z)
     my $re3 = str_to_re('/foo./');     # compiled to Regexp object qr(foo) (metacharacters are allowed)
     my $re4 = str_to_re('qr(foo.)i');  # compiled to Regexp object qr(foo.)i
     my $re4 = str_to_re({always_quote=>1}, 'qr(foo.)');  # compiled to Regexp object qr(qr\(foo\.\)) (metacharacters are quoted)
     my $re5 = str_to_re('qr(foo[)i');  # dies, invalid regex syntax

FUNCTIONS
  str_maybe_to_re
    Maybe convert string to Regexp object.

    Usage:

     $str_or_re = str_maybe_to_re($str);

    Check if string $str is in the form of "/.../" or "qr(...)'" and if so,
    compile the inside regex (currently simply using stringy "eval") and
    return the resulting Regexp object. Otherwise, will simply return the
    argument unmodified.

    Will die if compilation fails, e.g. when the regexp syntax is invalid.

    For the "qr(...)" form, unlike in Perl, currently only the "()"
    delimiter characters are recognized and not others.

    Optional modifiers "i", "m", and "s" are currently allowed at the end.

  str_to_re
    Convert string to Regexp object.

    Usage:

     $str_or_re = str_to_re([ \%opts , ] $str);

    This function is similar to "str_maybe_to_re" except that when string is
    not in the form of "/.../" or "qr(...)", the string is "quotemeta()"'ed
    then converted to a Regexp object anyway. There are some options
    available to specify in first argument hashref "\%opts":

    *   always_quote

        Bool. Default false. If set to true, will always "quotemeta()"
        regardless of whether the string is in the form of "/.../" or
        "qr(...)" or not. This means user will not be able to use
        metacharacters and the Regexp will only match the literal string
        (with some option like anchoring and case-sensitivity, see other
        options).

        Defaults to false because the point of this function is to allow
        specifying regex.

    *   case_insensitive

        Bool. If set to true will compile to Regexp object with "i" regexp
        modifier.

    *   anchored

        Bool. If set to true will anchor the pattern with "\A" and "\z".

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/Regexp-From-String>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-Regexp-From-String>.

SEE ALSO
    Sah::Schema::str_or_re

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR,
    Pod::Weaver::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla- and/or Pod::Weaver plugins. Any additional steps
    required beyond that are considered a bug and can be reported to me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2022 by perlancar <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=Regexp-From-String>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

