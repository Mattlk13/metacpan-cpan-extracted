.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Glib::index 3"
.TH Glib::index 3 "2019-03-03" "perl v5.28.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Glib \- API Reference Pod Index
.SH "PAGES"
.IX Header "PAGES"
.IP "Glib::BookmarkFile" 4
.IX Item "Glib::BookmarkFile"
.PD 0
.IP "Glib::Boxed" 4
.IX Item "Glib::Boxed"
.IP "Glib::Bytes" 4
.IX Item "Glib::Bytes"
.IP "Glib::Error" 4
.IX Item "Glib::Error"
.IP "Glib::Flags" 4
.IX Item "Glib::Flags"
.IP "Glib::KeyFile" 4
.IX Item "Glib::KeyFile"
.IP "Glib::Log" 4
.IX Item "Glib::Log"
.IP "Glib::MainLoop" 4
.IX Item "Glib::MainLoop"
.IP "Glib::Markup" 4
.IX Item "Glib::Markup"
.IP "Glib::Object" 4
.IX Item "Glib::Object"
.IP "Glib::OptionContext" 4
.IX Item "Glib::OptionContext"
.IP "Glib::OptionGroup" 4
.IX Item "Glib::OptionGroup"
.IP "Glib::Param::Boolean" 4
.IX Item "Glib::Param::Boolean"
.IP "Glib::Param::Double" 4
.IX Item "Glib::Param::Double"
.IP "Glib::Param::Enum" 4
.IX Item "Glib::Param::Enum"
.IP "Glib::Param::Flags" 4
.IX Item "Glib::Param::Flags"
.IP "Glib::Param::GType" 4
.IX Item "Glib::Param::GType"
.IP "Glib::Param::Int" 4
.IX Item "Glib::Param::Int"
.IP "Glib::Param::Int64" 4
.IX Item "Glib::Param::Int64"
.IP "Glib::Param::String" 4
.IX Item "Glib::Param::String"
.IP "Glib::Param::UInt" 4
.IX Item "Glib::Param::UInt"
.IP "Glib::Param::UInt64" 4
.IX Item "Glib::Param::UInt64"
.IP "Glib::Param::Unichar" 4
.IX Item "Glib::Param::Unichar"
.IP "Glib::ParamSpec" 4
.IX Item "Glib::ParamSpec"
.IP "Glib::Signal" 4
.IX Item "Glib::Signal"
.IP "Glib::Type" 4
.IX Item "Glib::Type"
.IP "Glib::Utils" 4
.IX Item "Glib::Utils"
.IP "Glib::Variant" 4
.IX Item "Glib::Variant"
.IP "Glib::VariantDict" 4
.IX Item "Glib::VariantDict"
.IP "Glib::VariantType" 4
.IX Item "Glib::VariantType"
.IP "Glib::version" 4
.IX Item "Glib::version"
