NAME
    Bencher::Scenario::File::Which::Cached - Benchmark File::Which::Cached

VERSION
    This document describes version 0.002 of
    Bencher::Scenario::File::Which::Cached (from Perl distribution
    Bencher-Scenario-File-Which-Cached), released on 2022-03-19.

SYNOPSIS
    To run benchmark with default option:

     % bencher -m File::Which::Cached

    To run module startup overhead benchmark:

     % bencher --module-startup -m File::Which::Cached

    For more options (dump scenario, list/include/exclude/add participants,
    list/include/exclude/add datasets, etc), see bencher or run "bencher
    --help".

DESCRIPTION
    Packaging a benchmark script as a Bencher scenario makes it convenient
    to include/exclude/add participants/datasets (either via CLI or Perl
    code), send the result to a central repository, among others . See
    Bencher and bencher (CLI) for more details.

BENCHMARKED MODULES
    Version numbers shown below are the versions used when running the
    sample benchmark.

    File::Which 1.27

    File::Which::Cached 1.03

BENCHMARK PARTICIPANTS
    *   File::Which::which (perl_code)

        Function call template:

         File::Which::which("ls")

    *   File::Which::Cached::which (perl_code)

        Function call template:

         File::Which::Cached::which("ls")

SAMPLE BENCHMARK RESULTS
    Run on: perl: *v5.34.0*, CPU: *Intel(R) Core(TM) i5-7200U CPU @ 2.50GHz
    (2 cores)*, OS: *GNU/Linux Ubuntu version 20.04*, OS kernel: *Linux
    version 5.4.0-91-generic*.

    Benchmark with default options ("bencher -m File::Which::Cached"):

     #table1#
     +----------------------------+-----------+-----------+-----------------------+-----------------------+---------+---------+
     | participant                | rate (/s) | time (Î¼s) | pct_faster_vs_slowest | pct_slower_vs_fastest |  errors | samples |
     +----------------------------+-----------+-----------+-----------------------+-----------------------+---------+---------+
     | File::Which::which         |     25000 |     39    |                 0.00% |             35707.24% | 6.5e-08 |      21 |
     | File::Which::Cached::which |   9100000 |      0.11 |             35707.24% |                 0.00% | 2.1e-10 |      20 |
     +----------------------------+-----------+-----------+-----------------------+-----------------------+---------+---------+

    Formatted as Benchmark.pm result:

                  Rate    FW:w  FWC:w 
      FW:w     25000/s      --   -99% 
      FWC:w  9100000/s  35354%     -- 
 
     Legends:
       FW:w: participant=File::Which::which
       FWC:w: participant=File::Which::Cached::which

    Benchmark module startup overhead ("bencher -m File::Which::Cached
    --module-startup"):

     #table2#
     +---------------------+-----------+-------------------+-----------------------+-----------------------+---------+---------+
     | participant         | time (ms) | mod_overhead_time | pct_faster_vs_slowest | pct_slower_vs_fastest |  errors | samples |
     +---------------------+-----------+-------------------+-----------------------+-----------------------+---------+---------+
     | File::Which::Cached |      15   |               8.9 |                 0.00% |               145.11% | 5.8e-06 |      23 |
     | File::Which         |      14.5 |               8.4 |                 3.23% |               137.44% | 8.1e-06 |      21 |
     | perl -e1 (baseline) |       6.1 |               0   |               145.11% |                 0.00% | 1.5e-05 |      20 |
     +---------------------+-----------+-------------------+-----------------------+-----------------------+---------+---------+

    Formatted as Benchmark.pm result:

                              Rate  FW:C   F:W  perl -e1 (baseline) 
      FW:C                  66.7/s    --   -3%                 -59% 
      F:W                   69.0/s    3%    --                 -57% 
      perl -e1 (baseline)  163.9/s  145%  137%                   -- 
 
     Legends:
       F:W: mod_overhead_time=8.4 participant=File::Which
       FW:C: mod_overhead_time=8.9 participant=File::Which::Cached
       perl -e1 (baseline): mod_overhead_time=0 participant=perl -e1 (baseline)

    To display as an interactive HTML table on a browser, you can add option
    "--format html+datatables".

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/Bencher-Scenario-File-Which-Cached>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-Bencher-Scenario-File-Which-Cached>.

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla plugin and/or Pod::Weaver::Plugin. Any additional
    steps required beyond that are considered a bug and can be reported to
    me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2022, 2019 by perlancar
    <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=Bencher-Scenario-File
    -Which-Cached>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

