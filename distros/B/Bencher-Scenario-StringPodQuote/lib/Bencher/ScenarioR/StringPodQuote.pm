## no critic
package Bencher::ScenarioR::StringPodQuote;

our $VERSION = 0.001; # VERSION

our $results = do{my$a=[[200,"OK",[{dataset=>"long",env=>"PERL5OPT=-Iarchive/String-PodQuote-0.002/lib",errors=>1.7e-11,rate=>25183.9,samples=>20,time=>39.708,vs_slowest=>1},{dataset=>"long",env=>"PERL5OPT=-Iarchive/String-PodQuote-0.003/lib",errors=>1.1e-08,rate=>25300,samples=>30,time=>39.6,vs_slowest=>1},{dataset=>"short",env=>"PERL5OPT=-Iarchive/String-PodQuote-0.003/lib",errors=>1.3e-08,rate=>85000,samples=>20,time=>12,vs_slowest=>3.4},{dataset=>"short",env=>"PERL5OPT=-Iarchive/String-PodQuote-0.002/lib",errors=>3.3e-09,rate=>88500,samples=>20,time=>11.3,vs_slowest=>3.52}],{"func.bencher_args"=>{action=>"bench",env_hashes=>[{PERL5OPT=>"-Iarchive/String-PodQuote-0.002/lib"},{PERL5OPT=>"-Iarchive/String-PodQuote-0.003/lib"}],note=>"Run by Pod::Weaver::Plugin::Bencher::Scenario",scenario=>{datasets=>[{args=>{text=>"This is <, >, C<=>, =, /, and |."},include_by_default=>1,name=>"short",seq=>0},{args=>{text=>"Normally you will only need to do this in an application, not in modules. One\npiece of advice is to allow user to change the level without her having to\nmodify the source code, for example via environment variable and/or < command-line\noption. An application framework like L<Perinci::CmdLine> will already take care\nof this for you, so you don't need to do C<set_level> manually at all.\n"},include_by_default=>1,name=>"long",seq=>1}],env_hashes=>['fix','fix'],participants=>[{_name=>"String::PodQuote::pod_escape",fcall_template=>"String::PodQuote::pod_escape(<text>)",function=>"pod_escape",include_by_default=>1,module=>"String::PodQuote",seq=>0,type=>"perl_code"}],summary=>"Benchmark String::PodQuote"}},"func.bencher_version"=>undef,"func.code_startup"=>undef,"func.cpu_info"=>[{L2_cache=>{max_cache_size=>"3072 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","art","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","tsc_known_freq","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","3dnowprefetch","cpuid_fault","epb","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","mpx","rdseed","adx","smap","clflushopt","intel_pt","xsaveopt","xsavec","xgetbv1","xsaves","dtherm","ida","arat","pln","pts","hwp","hwp_notify","hwp_act_window","hwp_epp","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>142,name=>"Intel(R) Core(TM) i5-7200U CPU \@ 2.50GHz",number_of_cores=>2,number_of_logical_processors=>4,processor_id=>0,speed=>1994.923,stepping=>9},{L2_cache=>{max_cache_size=>"3072 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","art","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","tsc_known_freq","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","3dnowprefetch","cpuid_fault","epb","invpcid_single","pti","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","mpx","rdseed","adx","smap","clflushopt","intel_pt","xsaveopt","xsavec","xgetbv1","xsaves","dtherm","ida","arat","pln","pts","hwp","hwp_notify","hwp_act_window","hwp_epp"],manufacturer=>"GenuineIntel",model=>142,name=>"Intel(R) Core(TM) i5-7200U CPU \@ 2.50GHz",number_of_cores=>2,number_of_logical_processors=>4,processor_id=>1,speed=>1758.721,stepping=>9},{L2_cache=>{max_cache_size=>"3072 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","art","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","tsc_known_freq","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","3dnowprefetch","cpuid_fault","epb","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","mpx","rdseed","adx","smap","clflushopt","intel_pt","xsaveopt","xsavec","xgetbv1","xsaves","dtherm","ida","arat","pln","pts","hwp","hwp_notify","hwp_act_window","hwp_epp","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>142,name=>"Intel(R) Core(TM) i5-7200U CPU \@ 2.50GHz",number_of_cores=>2,number_of_logical_processors=>4,processor_id=>2,speed=>1518.713,stepping=>9},{L2_cache=>{max_cache_size=>"3072 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","art","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","tsc_known_freq","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","3dnowprefetch","cpuid_fault","epb","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","mpx","rdseed","adx","smap","clflushopt","intel_pt","xsaveopt","xsavec","xgetbv1","xsaves","dtherm","ida","arat","pln","pts","hwp","hwp_notify","hwp_act_window","hwp_epp","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>142,name=>"Intel(R) Core(TM) i5-7200U CPU \@ 2.50GHz",number_of_cores=>2,number_of_logical_processors=>4,processor_id=>3,speed=>1343.466,stepping=>9}],"func.elapsed_time"=>0.142927885055542,"func.module_startup"=>undef,"func.module_versions"=>{"Benchmark::Dumb"=>0.111,"Devel::Platform::Info"=>0.16,"String::PodQuote"=>0.003,"Sys::Info"=>0.7811,__PACKAGE__=>1.046,perl=>"v5.30.0"},"func.note"=>"Run by Pod::Weaver::Plugin::Bencher::Scenario","func.permute"=>["perl",["perl"],"participant",[0],"dataset",[0,1],"env_hash",[0,1]],"func.platform_info"=>{archname=>"x86_64",codename=>"disco",is32bit=>0,is64bit=>1,kernel=>"linux-5.0.0-37-generic",kname=>"Linux",kvers=>"5.0.0-37-generic",osflag=>"linux",oslabel=>"Ubuntu",osname=>"GNU/Linux",osvers=>19.04,source=>{"cat /etc/.issue"=>"","cat /etc/issue"=>"Ubuntu 19.04 \\n \\l","lsb_release -a"=>"Distributor ID:\tUbuntu\nDescription:\tUbuntu 19.04\nRelease:\t19.04\nCodename:\tdisco","uname -a"=>"Linux u1-XPS-13-9360 5.0.0-37-generic #40-Ubuntu SMP Thu Nov 14 00:14:01 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux","uname -m"=>"x86_64","uname -o"=>"GNU/Linux","uname -r"=>"5.0.0-37-generic","uname -s"=>"Linux"}},"func.precision"=>0,"func.scenario_env_hashes"=>[{PERL5OPT=>"-Iarchive/String-PodQuote-0.002/lib"},{PERL5OPT=>"-Iarchive/String-PodQuote-0.003/lib"}],"func.time_end"=>1576541811.26728,"func.time_factor"=>1000000,"func.time_start"=>1576541811.12435,"table.field_aligns"=>["left",undef,"number","number","number","number","number"],"table.field_units"=>[undef,undef,"/s","\x{3BC}s"],"table.fields"=>["dataset","env","rate","time","vs_slowest","errors","samples"]}]];$a->[0][3]{"func.bencher_args"}{scenario}{env_hashes}[0]=$a->[0][3]{"func.bencher_args"}{env_hashes}[0];$a->[0][3]{"func.bencher_args"}{scenario}{env_hashes}[1]=$a->[0][3]{"func.bencher_args"}{env_hashes}[1];$a};

1;
# ABSTRACT: Benchmark String::PodQuote

=head1 DESCRIPTION

This module is automatically generated by Pod::Weaver::Plugin::Bencher::Scenario during distribution build.

A Bencher::ScenarioR::* module contains the raw result of sample benchmark and might be useful for some stuffs later.

