## no critic
package Bencher::ScenarioR::ModuleInstalledTiny::module_installed;

our $VERSION = 0.003; # VERSION

our $results = [[200,"OK",[{dataset=>"strict",errors=>6.9e-07,participant=>"Module::Load::Conditional::check_install",rate=>2400,samples=>20,time=>420,vs_slowest=>1},{dataset=>"Bencher::Scenario::ModuleInstalledTiny::module_installed::Test",errors=>3.1e-07,participant=>"Module::Load::Conditional::check_install",rate=>28000,samples=>21,time=>36,vs_slowest=>12},{dataset=>"strict",errors=>5.3e-08,participant=>"Module::Path::More::module_path",rate=>44000,samples=>20,time=>23,vs_slowest=>18},{dataset=>"Bencher::Scenario::ModuleInstalledTiny::module_installed::Test",errors=>1.4e-07,participant=>"Module::Path::More::module_path",rate=>44000,samples=>20,time=>23,vs_slowest=>18},{dataset=>"Bencher::Scenario::ModuleInstalledTiny::module_installed::Test",errors=>2.7e-08,participant=>"require",rate=>50000,samples=>20,time=>20,vs_slowest=>21},{dataset=>"Bencher::Scenario::ModuleInstalledTiny::module_installed::Test",errors=>6.7e-09,participant=>"Module::Installed::Tiny::module_installed",rate=>62300,samples=>20,time=>16,vs_slowest=>26},{dataset=>"strict",errors=>2.1e-10,participant=>"Module::Installed::Tiny::module_installed",rate=>1410000,samples=>20,time=>0.708,vs_slowest=>590},{dataset=>"strict",errors=>1.2e-11,participant=>"require",rate=>3736000,samples=>20,time=>0.2677,vs_slowest=>1561}],{"func.bencher_args"=>{action=>"bench",note=>"Run by Pod::Weaver::Plugin::Bencher::Scenario",scenario=>{datasets=>[{args=>{module=>"strict"},include_by_default=>1,name=>"strict",seq=>0},{args=>{module=>"Bencher::Scenario::ModuleInstalledTiny::module_installed::Test"},include_by_default=>1,name=>"Bencher::Scenario::ModuleInstalledTiny::module_installed::Test",seq=>1}],description=>"\nThis scenario benchmarks `module_installed()` vs some others for the task of\nchecking whether a module \"is available locally\". There are several approaches\n(also described in <pm:Module::Installed::Tiny> documentation):\n\n1. require() it (executes module source code, security and resource concern).\n\n2. find module path in filesystem using Module::Path (cannot handle\nhooks/references in \@INC; on the other hand does not quickly check %INC first).\n\n3. <pm:Module::Load::Conditional>'s `check_install()`. Like `require()`, it\nfirst checks %INC, then scan \@INC (hooks/references in \@INC are supported).\nAdditionally, you can specify a version number, in which case it will also use\n<pm:Module::Metadata> to extract version from module source code.\n\n4. <pm:Module::Installed::Tiny>'s `module_installed()`, which also does things\nlike Perl's `require()` except actually evaluating the module source code.\n\n",participants=>[{_name=>"Module::Installed::Tiny::module_installed",fcall_template=>"Module::Installed::Tiny::module_installed(<module>)",function=>"module_installed",include_by_default=>1,module=>"Module::Installed::Tiny",seq=>0,type=>"perl_code"},{_name=>"Module::Path::More::module_path",fcall_template=>"Module::Path::More::module_path(module => <module>)",function=>"module_path",include_by_default=>1,module=>"Module::Path::More",seq=>1,type=>"perl_code"},{_name=>"Module::Load::Conditional::check_install",fcall_template=>"Module::Load::Conditional::check_install(module => <module>)",function=>"check_install",include_by_default=>1,module=>"Module::Load::Conditional",seq=>2,type=>"perl_code"},{code_template=>"eval { (my \$pm = <module> . \".pm\") =~ s!::!/!g; require \$pm; 1 } ? 1:0",include_by_default=>1,name=>"require",seq=>3,type=>"perl_code"}],summary=>"Benchmark module_installed() vs some others"}},"func.bencher_version"=>undef,"func.code_startup"=>undef,"func.cpu_info"=>[{L2_cache=>{max_cache_size=>"3072 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","art","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","tsc_known_freq","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","3dnowprefetch","cpuid_fault","epb","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","mpx","rdseed","adx","smap","clflushopt","intel_pt","xsaveopt","xsavec","xgetbv1","xsaves","dtherm","ida","arat","pln","pts","hwp","hwp_notify","hwp_act_window","hwp_epp","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>142,name=>"Intel(R) Core(TM) i5-7200U CPU \@ 2.50GHz",number_of_cores=>2,number_of_logical_processors=>4,processor_id=>0,speed=>2319.272,stepping=>9},{L2_cache=>{max_cache_size=>"3072 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","art","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","tsc_known_freq","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","3dnowprefetch","cpuid_fault","epb","invpcid_single","pti","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","mpx","rdseed","adx","smap","clflushopt","intel_pt","xsaveopt","xsavec","xgetbv1","xsaves","dtherm","ida","arat","pln","pts","hwp","hwp_notify","hwp_act_window","hwp_epp"],manufacturer=>"GenuineIntel",model=>142,name=>"Intel(R) Core(TM) i5-7200U CPU \@ 2.50GHz",number_of_cores=>2,number_of_logical_processors=>4,processor_id=>1,speed=>2638.778,stepping=>9},{L2_cache=>{max_cache_size=>"3072 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","art","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","tsc_known_freq","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","3dnowprefetch","cpuid_fault","epb","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","mpx","rdseed","adx","smap","clflushopt","intel_pt","xsaveopt","xsavec","xgetbv1","xsaves","dtherm","ida","arat","pln","pts","hwp","hwp_notify","hwp_act_window","hwp_epp","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>142,name=>"Intel(R) Core(TM) i5-7200U CPU \@ 2.50GHz",number_of_cores=>2,number_of_logical_processors=>4,processor_id=>2,speed=>2479.852,stepping=>9},{L2_cache=>{max_cache_size=>"3072 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","art","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","tsc_known_freq","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","3dnowprefetch","cpuid_fault","epb","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","mpx","rdseed","adx","smap","clflushopt","intel_pt","xsaveopt","xsavec","xgetbv1","xsaves","dtherm","ida","arat","pln","pts","hwp","hwp_notify","hwp_act_window","hwp_epp","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>142,name=>"Intel(R) Core(TM) i5-7200U CPU \@ 2.50GHz",number_of_cores=>2,number_of_logical_processors=>4,processor_id=>3,speed=>2457.962,stepping=>9}],"func.elapsed_time"=>0.220839977264404,"func.module_startup"=>undef,"func.module_versions"=>{"Benchmark::Dumb"=>0.111,"Devel::Platform::Info"=>0.16,"Module::Installed::Tiny"=>0.004,"Module::Load::Conditional"=>0.68,"Module::Path::More"=>0.33,"Sys::Info"=>0.7811,__PACKAGE__=>1.046,perl=>"v5.30.0"},"func.note"=>"Run by Pod::Weaver::Plugin::Bencher::Scenario","func.permute"=>["perl",["perl"],"participant",[0,1,2,3],"dataset",[0,1]],"func.platform_info"=>{archname=>"x86_64",codename=>"disco",is32bit=>0,is64bit=>1,kernel=>"linux-5.0.0-37-generic",kname=>"Linux",kvers=>"5.0.0-37-generic",osflag=>"linux",oslabel=>"Ubuntu",osname=>"GNU/Linux",osvers=>19.04,source=>{"cat /etc/.issue"=>"","cat /etc/issue"=>"Ubuntu 19.04 \\n \\l","lsb_release -a"=>"Distributor ID:\tUbuntu\nDescription:\tUbuntu 19.04\nRelease:\t19.04\nCodename:\tdisco","uname -a"=>"Linux u1-XPS-13-9360 5.0.0-37-generic #40-Ubuntu SMP Thu Nov 14 00:14:01 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux","uname -m"=>"x86_64","uname -o"=>"GNU/Linux","uname -r"=>"5.0.0-37-generic","uname -s"=>"Linux"}},"func.precision"=>0,"func.time_end"=>1578555681.84511,"func.time_factor"=>1000000,"func.time_start"=>1578555681.62427,"table.field_aligns"=>["left","left","number","number","number","number","number"],"table.field_units"=>[undef,undef,"/s","\x{3BC}s"],"table.fields"=>["participant","dataset","rate","time","vs_slowest","errors","samples"]}]];

1;
# ABSTRACT: Benchmark module_installed() vs some others

=head1 DESCRIPTION

This module is automatically generated by Pod::Weaver::Plugin::Bencher::Scenario during distribution build.

A Bencher::ScenarioR::* module contains the raw result of sample benchmark and might be useful for some stuffs later.

