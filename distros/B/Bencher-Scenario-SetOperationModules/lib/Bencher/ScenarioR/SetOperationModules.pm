## no critic
package Bencher::ScenarioR::SetOperationModules;

our $VERSION = "0.130"; # VERSION

our $results = [[200,"OK",[{errors=>2e-07,participant=>"Set::Scalar::difference",pct_faster_vs_slowest=>0,pct_slower_vs_fastest=>21.4712593443107,rate=>12000,samples=>23,time=>81},{errors=>4e-08,participant=>"Array::AsObject::difference",pct_faster_vs_slowest=>1.07151253988733,pct_slower_vs_fastest=>9.84775443625022,rate=>26000,samples=>20,time=>39},{errors=>6.7e-09,participant=>"Set::Array::difference",pct_faster_vs_slowest=>4.6775956220358,pct_slower_vs_fastest=>2.95788302659239,rate=>70000,samples=>20,time=>14.3},{errors=>1.3e-08,participant=>"Set::Object::difference",pct_faster_vs_slowest=>8.80780659281396,pct_slower_vs_fastest=>1.29116052928441,rate=>120000,samples=>20,time=>8.3},{errors=>5.7e-12,participant=>"Array::Set::Naive::set_diff",pct_faster_vs_slowest=>9.02094977546614,pct_slower_vs_fastest=>1.24242809791604,rate=>123482,samples=>25,time=>8.09832},{errors=>1.3e-08,participant=>"Set::Tiny::difference",pct_faster_vs_slowest=>11.0015916533789,pct_slower_vs_fastest=>0.872356600133472,rate=>150000,samples=>20,time=>6.8},{errors=>1.7e-09,participant=>"List::Collection::subtract",pct_faster_vs_slowest=>14.2325492564268,pct_slower_vs_fastest=>0.475213305798424,rate=>188000,samples=>20,time=>5.33},{errors=>5e-09,participant=>"Array::Set::set_diff",pct_faster_vs_slowest=>18.318520078985,pct_slower_vs_fastest=>0.163197763205232,rate=>240000,samples=>20,time=>4.2},{errors=>0,participant=>"Array::Utils::array_minus",pct_faster_vs_slowest=>21.4712593443107,pct_slower_vs_fastest=>0,rate=>276900,samples=>20,time=>3.61141}],{"func.bencher_args"=>{action=>"bench",note=>"Run by Pod::Weaver::Plugin::Bencher::Scenario",scenario=>{datasets=>[{args=>{set1=>[1,2,3,4,5,6,7,8,9,10],set2=>[2,3,4,5,6,7,8,9,10,11]},include_by_default=>1,name=>"num10",seq=>0},{args=>{set1=>[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],set2=>[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101]},include_by_default=>1,name=>"num100",seq=>1}],modules=>{"List::MoreUtils"=>{version=>0.407}},participants=>[{_name=>"Array::Utils::unique",code_template=>"&Array::Utils::unique(<set1>, <set2>)",function=>"unique",include_by_default=>1,module=>"Array::Utils",seq=>0,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Scalar::union",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Scalar",seq=>1,tags=>["op:union"],type=>"perl_code"},{_name=>"List::MoreUtils::PP::uniq",fcall_template=>"List::MoreUtils::PP::uniq(\@{<set1>}, \@{<set2>})",function=>"uniq",include_by_default=>1,module=>"List::MoreUtils::PP",seq=>2,tags=>["op:union"],type=>"perl_code"},{fcall_template=>"List::MoreUtils::uniq(\@{<set1>}, \@{<set2>})",function=>"uniq",include_by_default=>1,module=>"List::MoreUtils",name=>"List::MoreUtils::XS::uniq",seq=>3,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Set::set_union",fcall_template=>"Array::Set::set_union(<set1>, <set2>)",function=>"set_union",include_by_default=>1,module=>"Array::Set",seq=>4,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_union",fcall_template=>"Array::Set::Naive::set_union(<set1>, <set2>)",function=>"set_union",include_by_default=>1,module=>"Array::Set::Naive",seq=>5,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Array::union",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Array",seq=>6,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::AsObject::union",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->union(\$s2, 1)",function=>"union",include_by_default=>1,module=>"Array::AsObject",seq=>7,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Object::union",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Object",seq=>8,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Tiny::union",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Tiny",seq=>9,tags=>["op:union"],type=>"perl_code"},{_name=>"List::Collection::union",code_template=>"[List::Collection::union(<set1>, <set2>)]",function=>"union",include_by_default=>1,module=>"List::Collection",seq=>10,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Utils::array_diff",code_template=>"&Array::Utils::array_diff(<set1>, <set2>)",function=>"array_diff",include_by_default=>1,module=>"Array::Utils",seq=>11,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Scalar::symmetric_difference",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Scalar",seq=>12,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"List::MoreUtils::PP::singleton",fcall_template=>"List::MoreUtils::PP::singleton(\@{<set1>}, \@{<set2>})",function=>"singleton",include_by_default=>1,module=>"List::MoreUtils::PP",seq=>13,tags=>["op:symdiff"],type=>"perl_code"},{fcall_template=>"List::MoreUtils::singleton(\@{<set1>}, \@{<set2>})",function=>"singleton",include_by_default=>1,module=>"List::MoreUtils",name=>"List::MoreUtils::XS::singleton",seq=>14,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Set::set_symdiff",fcall_template=>"Array::Set::set_symdiff(<set1>, <set2>)",function=>"set_symdiff",include_by_default=>1,module=>"Array::Set",seq=>15,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_symdiff",fcall_template=>"Array::Set::Naive::set_symdiff(<set1>, <set2>)",function=>"set_symdiff",include_by_default=>1,module=>"Array::Set::Naive",seq=>16,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Array::symmetric_difference",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Array",seq=>17,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::AsObject::symmetric_difference",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Array::AsObject",seq=>18,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Object::symmetric_difference",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Object",seq=>19,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Tiny::symmetric_difference",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Tiny",seq=>20,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"List::Collection::complement",code_template=>"[List::Collection::complement(<set1>, <set2>)]",function=>"complement",include_by_default=>1,module=>"List::Collection",seq=>21,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Utils::array_minus",code_template=>"&Array::Utils::array_minus(<set1>, <set2>)",function=>"array_minus",include_by_default=>1,module=>"Array::Utils",seq=>22,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Scalar::difference",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Scalar",seq=>23,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Set::set_diff",fcall_template=>"Array::Set::set_diff(<set1>, <set2>)",function=>"set_diff",include_by_default=>1,module=>"Array::Set",seq=>24,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_diff",fcall_template=>"Array::Set::Naive::set_diff(<set1>, <set2>)",function=>"set_diff",include_by_default=>1,module=>"Array::Set::Naive",seq=>25,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Array::difference",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Array",seq=>26,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::AsObject::difference",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Array::AsObject",seq=>27,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Object::difference",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Object",seq=>28,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Tiny::difference",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Tiny",seq=>29,tags=>["op:diff"],type=>"perl_code"},{_name=>"List::Collection::subtract",code_template=>"[List::Collection::subtract(<set1>, <set2>)]",function=>"subtract",include_by_default=>1,module=>"List::Collection",seq=>30,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Utils::intersect",code_template=>"&Array::Utils::intersect(<set1>, <set2>)",function=>"intersect",include_by_default=>1,module=>"Array::Utils",seq=>31,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Scalar::intersection",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Scalar",seq=>32,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::Set::set_intersect",fcall_template=>"Array::Set::set_intersect(<set1>, <set2>)",function=>"set_intersect",include_by_default=>1,module=>"Array::Set",seq=>33,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_intersect",fcall_template=>"Array::Set::Naive::set_intersect(<set1>, <set2>)",function=>"set_intersect",include_by_default=>1,module=>"Array::Set::Naive",seq=>34,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Array::intersection",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Array",seq=>35,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::AsObject::intersection",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->intersection(\$s2, 1)",function=>"intersection",include_by_default=>1,module=>"Array::AsObject",seq=>36,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Object::intersection",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Object",seq=>37,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Tiny::intersection",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Tiny",seq=>38,tags=>["op:intersect"],type=>"perl_code"},{_name=>"List::Collection::intersect",code_template=>"[List::Collection::intersect(<set1>, <set2>)]",function=>"intersect",include_by_default=>1,module=>"List::Collection",seq=>39,tags=>["op:intersect"],type=>"perl_code"}],summary=>"Benchmark Perl set operation (union, intersection, diff, symmetric diff) modules"}},"func.bencher_version"=>undef,"func.code_startup"=>undef,"func.cpu_info"=>[{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>0,speed=>2475.429,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>1,speed=>2419.744,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>2,speed=>2474.523,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>3,speed=>2472.777,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>4,speed=>2472.466,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>5,speed=>2467.679,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>6,speed=>"2252.040",stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>7,speed=>2261.284,stepping=>3}],"func.elapsed_time"=>3.27770900726318,"func.module_startup"=>undef,"func.module_versions"=>{"Array::AsObject"=>1.02,"Array::Set"=>0.062,"Array::Set::Naive"=>0.001,"Array::Utils"=>0.5,"Benchmark::Dumb"=>0.111,"Devel::Platform::Info"=>"1.00","List::Collection"=>"0.0.4","List::MoreUtils"=>0.428,"List::MoreUtils::PP"=>0.428,"Set::Array"=>"0.30","Set::Object"=>"1.40","Set::Scalar"=>1.29,"Set::Tiny"=>0.04,"Sys::Info"=>0.7811,__PACKAGE__=>1.053,perl=>"v5.30.2"},"func.note"=>"Run by Pod::Weaver::Plugin::Bencher::Scenario","func.permute"=>["participant",[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"perl",["perl"]],"func.platform_info"=>{archname=>"x86_64",codename=>"tara",is32bit=>0,is64bit=>1,kernel=>"linux-5.3.0-68-generic",kname=>"Linux",kvers=>"5.3.0-68-generic",osflag=>"linux",oslabel=>"LinuxMint",osname=>"GNU/Linux",osvers=>19,source=>{"cat /etc/.issue"=>"","cat /etc/issue"=>"Linux Mint 19 Tara \\n \\l","lsb_release -a"=>"Distributor ID:\tLinuxMint\nDescription:\tLinux Mint 19 Tara\nRelease:\t19\nCodename:\ttara","uname -a"=>"Linux builder 5.3.0-68-generic #63-Ubuntu SMP Mon Sep 28 13:51:38 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux","uname -m"=>"x86_64","uname -o"=>"GNU/Linux","uname -r"=>"5.3.0-68-generic","uname -s"=>"Linux"}},"func.precision"=>0,"func.time_end"=>1621044770.66485,"func.time_factor"=>1000000,"func.time_start"=>1621044767.38715,"table.field_aligns"=>["left","number","number","number","number","number","number"],"table.field_formats"=>[undef,undef,undef,"percent","percent",undef,undef],"table.field_units"=>[undef,"/s","\x{3BC}s"],"table.fields"=>["participant","rate","time","pct_faster_vs_slowest","pct_slower_vs_fastest","errors","samples"]}],[200,"OK",[{errors=>4.1e-06,participant=>"Array::AsObject::difference",pct_faster_vs_slowest=>0,pct_slower_vs_fastest=>64.0249011959076,rate=>480,samples=>20,time=>2.1},{errors=>6.9e-07,participant=>"Set::Scalar::difference",pct_faster_vs_slowest=>3.56064631346439,pct_slower_vs_fastest=>13.2578259147031,rate=>2200,samples=>20,time=>0.46},{errors=>2.1e-07,participant=>"Array::Set::Naive::set_diff",pct_faster_vs_slowest=>10.2866287931171,pct_slower_vs_fastest=>4.76123325997586,rate=>5400,samples=>21,time=>0.19},{errors=>1.3e-07,participant=>"Set::Array::difference",pct_faster_vs_slowest=>27.1602898005217,pct_slower_vs_fastest=>1.3090991483583,rate=>13000,samples=>22,time=>0.074},{errors=>9.9e-08,participant=>"Set::Object::difference",pct_faster_vs_slowest=>31.1112164798252,pct_slower_vs_fastest=>1.0249902782961,rate=>15000,samples=>23,time=>0.065},{errors=>1.3e-07,participant=>"Set::Tiny::difference",pct_faster_vs_slowest=>34.5964554028081,pct_slower_vs_fastest=>0.826724050473237,rate=>17000,samples=>20,time=>0.059},{errors=>5e-08,participant=>"Array::Set::set_diff",pct_faster_vs_slowest=>61.9458352521643,pct_slower_vs_fastest=>0.0330294440516105,rate=>30000,samples=>23,time=>0.033},{errors=>1.2e-08,participant=>"List::Collection::subtract",pct_faster_vs_slowest=>63.0771869860934,pct_slower_vs_fastest=>0.014790196860856,rate=>30700,samples=>23,time=>0.0326},{errors=>1.1e-08,participant=>"Array::Utils::array_minus",pct_faster_vs_slowest=>64.0249011959076,pct_slower_vs_fastest=>0,rate=>31100,samples=>29,time=>0.0321}],{"func.bencher_args"=>{action=>"bench",note=>"Run by Pod::Weaver::Plugin::Bencher::Scenario",scenario=>{datasets=>[{args=>{set1=>[1,2,3,4,5,6,7,8,9,10],set2=>[2,3,4,5,6,7,8,9,10,11]},include_by_default=>1,name=>"num10",seq=>0},{args=>{set1=>[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],set2=>[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101]},include_by_default=>1,name=>"num100",seq=>1}],modules=>{"List::MoreUtils"=>{version=>0.407}},participants=>[{_name=>"Array::Utils::unique",code_template=>"&Array::Utils::unique(<set1>, <set2>)",function=>"unique",include_by_default=>1,module=>"Array::Utils",seq=>0,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Scalar::union",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Scalar",seq=>1,tags=>["op:union"],type=>"perl_code"},{_name=>"List::MoreUtils::PP::uniq",fcall_template=>"List::MoreUtils::PP::uniq(\@{<set1>}, \@{<set2>})",function=>"uniq",include_by_default=>1,module=>"List::MoreUtils::PP",seq=>2,tags=>["op:union"],type=>"perl_code"},{fcall_template=>"List::MoreUtils::uniq(\@{<set1>}, \@{<set2>})",function=>"uniq",include_by_default=>1,module=>"List::MoreUtils",name=>"List::MoreUtils::XS::uniq",seq=>3,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Set::set_union",fcall_template=>"Array::Set::set_union(<set1>, <set2>)",function=>"set_union",include_by_default=>1,module=>"Array::Set",seq=>4,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_union",fcall_template=>"Array::Set::Naive::set_union(<set1>, <set2>)",function=>"set_union",include_by_default=>1,module=>"Array::Set::Naive",seq=>5,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Array::union",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Array",seq=>6,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::AsObject::union",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->union(\$s2, 1)",function=>"union",include_by_default=>1,module=>"Array::AsObject",seq=>7,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Object::union",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Object",seq=>8,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Tiny::union",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Tiny",seq=>9,tags=>["op:union"],type=>"perl_code"},{_name=>"List::Collection::union",code_template=>"[List::Collection::union(<set1>, <set2>)]",function=>"union",include_by_default=>1,module=>"List::Collection",seq=>10,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Utils::array_diff",code_template=>"&Array::Utils::array_diff(<set1>, <set2>)",function=>"array_diff",include_by_default=>1,module=>"Array::Utils",seq=>11,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Scalar::symmetric_difference",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Scalar",seq=>12,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"List::MoreUtils::PP::singleton",fcall_template=>"List::MoreUtils::PP::singleton(\@{<set1>}, \@{<set2>})",function=>"singleton",include_by_default=>1,module=>"List::MoreUtils::PP",seq=>13,tags=>["op:symdiff"],type=>"perl_code"},{fcall_template=>"List::MoreUtils::singleton(\@{<set1>}, \@{<set2>})",function=>"singleton",include_by_default=>1,module=>"List::MoreUtils",name=>"List::MoreUtils::XS::singleton",seq=>14,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Set::set_symdiff",fcall_template=>"Array::Set::set_symdiff(<set1>, <set2>)",function=>"set_symdiff",include_by_default=>1,module=>"Array::Set",seq=>15,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_symdiff",fcall_template=>"Array::Set::Naive::set_symdiff(<set1>, <set2>)",function=>"set_symdiff",include_by_default=>1,module=>"Array::Set::Naive",seq=>16,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Array::symmetric_difference",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Array",seq=>17,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::AsObject::symmetric_difference",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Array::AsObject",seq=>18,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Object::symmetric_difference",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Object",seq=>19,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Tiny::symmetric_difference",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Tiny",seq=>20,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"List::Collection::complement",code_template=>"[List::Collection::complement(<set1>, <set2>)]",function=>"complement",include_by_default=>1,module=>"List::Collection",seq=>21,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Utils::array_minus",code_template=>"&Array::Utils::array_minus(<set1>, <set2>)",function=>"array_minus",include_by_default=>1,module=>"Array::Utils",seq=>22,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Scalar::difference",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Scalar",seq=>23,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Set::set_diff",fcall_template=>"Array::Set::set_diff(<set1>, <set2>)",function=>"set_diff",include_by_default=>1,module=>"Array::Set",seq=>24,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_diff",fcall_template=>"Array::Set::Naive::set_diff(<set1>, <set2>)",function=>"set_diff",include_by_default=>1,module=>"Array::Set::Naive",seq=>25,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Array::difference",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Array",seq=>26,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::AsObject::difference",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Array::AsObject",seq=>27,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Object::difference",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Object",seq=>28,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Tiny::difference",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Tiny",seq=>29,tags=>["op:diff"],type=>"perl_code"},{_name=>"List::Collection::subtract",code_template=>"[List::Collection::subtract(<set1>, <set2>)]",function=>"subtract",include_by_default=>1,module=>"List::Collection",seq=>30,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Utils::intersect",code_template=>"&Array::Utils::intersect(<set1>, <set2>)",function=>"intersect",include_by_default=>1,module=>"Array::Utils",seq=>31,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Scalar::intersection",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Scalar",seq=>32,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::Set::set_intersect",fcall_template=>"Array::Set::set_intersect(<set1>, <set2>)",function=>"set_intersect",include_by_default=>1,module=>"Array::Set",seq=>33,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_intersect",fcall_template=>"Array::Set::Naive::set_intersect(<set1>, <set2>)",function=>"set_intersect",include_by_default=>1,module=>"Array::Set::Naive",seq=>34,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Array::intersection",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Array",seq=>35,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::AsObject::intersection",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->intersection(\$s2, 1)",function=>"intersection",include_by_default=>1,module=>"Array::AsObject",seq=>36,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Object::intersection",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Object",seq=>37,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Tiny::intersection",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Tiny",seq=>38,tags=>["op:intersect"],type=>"perl_code"},{_name=>"List::Collection::intersect",code_template=>"[List::Collection::intersect(<set1>, <set2>)]",function=>"intersect",include_by_default=>1,module=>"List::Collection",seq=>39,tags=>["op:intersect"],type=>"perl_code"}],summary=>"Benchmark Perl set operation (union, intersection, diff, symmetric diff) modules"}},"func.bencher_version"=>undef,"func.code_startup"=>undef,"func.cpu_info"=>[{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>0,speed=>2475.429,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>1,speed=>2419.744,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>2,speed=>2474.523,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>3,speed=>2472.777,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>4,speed=>2472.466,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>5,speed=>2467.679,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>6,speed=>"2252.040",stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>7,speed=>2261.284,stepping=>3}],"func.elapsed_time"=>3.27770900726318,"func.module_startup"=>undef,"func.module_versions"=>{"Array::AsObject"=>1.02,"Array::Set"=>0.062,"Array::Set::Naive"=>0.001,"Array::Utils"=>0.5,"Benchmark::Dumb"=>0.111,"Devel::Platform::Info"=>"1.00","List::Collection"=>"0.0.4","List::MoreUtils"=>0.428,"List::MoreUtils::PP"=>0.428,"Set::Array"=>"0.30","Set::Object"=>"1.40","Set::Scalar"=>1.29,"Set::Tiny"=>0.04,"Sys::Info"=>0.7811,__PACKAGE__=>1.053,perl=>"v5.30.2"},"func.note"=>"Run by Pod::Weaver::Plugin::Bencher::Scenario","func.permute"=>["participant",[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"perl",["perl"]],"func.platform_info"=>{archname=>"x86_64",codename=>"tara",is32bit=>0,is64bit=>1,kernel=>"linux-5.3.0-68-generic",kname=>"Linux",kvers=>"5.3.0-68-generic",osflag=>"linux",oslabel=>"LinuxMint",osname=>"GNU/Linux",osvers=>19,source=>{"cat /etc/.issue"=>"","cat /etc/issue"=>"Linux Mint 19 Tara \\n \\l","lsb_release -a"=>"Distributor ID:\tLinuxMint\nDescription:\tLinux Mint 19 Tara\nRelease:\t19\nCodename:\ttara","uname -a"=>"Linux builder 5.3.0-68-generic #63-Ubuntu SMP Mon Sep 28 13:51:38 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux","uname -m"=>"x86_64","uname -o"=>"GNU/Linux","uname -r"=>"5.3.0-68-generic","uname -s"=>"Linux"}},"func.precision"=>0,"func.time_end"=>1621044770.66485,"func.time_factor"=>1000,"func.time_start"=>1621044767.38715,"table.field_aligns"=>["left","number","number","number","number","number","number"],"table.field_formats"=>[undef,undef,undef,"percent","percent",undef,undef],"table.field_units"=>[undef,"/s","ms"],"table.fields"=>["participant","rate","time","pct_faster_vs_slowest","pct_slower_vs_fastest","errors","samples"]}],[200,"OK",[{errors=>1e-07,participant=>"Set::Scalar::intersection",pct_faster_vs_slowest=>0,pct_slower_vs_fastest=>22.4759098519363,rate=>12000,samples=>21,time=>86},{errors=>1.1e-07,participant=>"Array::AsObject::intersection",pct_faster_vs_slowest=>0.0469021170489355,pct_slower_vs_fastest=>21.424168859369,rate=>12000,samples=>20,time=>82},{errors=>1e-07,participant=>"List::Collection::intersect",pct_faster_vs_slowest=>0.617845988060691,pct_slower_vs_fastest=>13.5105962033363,rate=>19000,samples=>22,time=>53},{errors=>5.1e-08,participant=>"Set::Array::intersection",pct_faster_vs_slowest=>1.70883848764678,pct_slower_vs_fastest=>7.6664118067557,rate=>32000,samples=>22,time=>32},{errors=>5.8e-12,participant=>"Set::Object::intersection",pct_faster_vs_slowest=>7.4040276511677,pct_slower_vs_fastest=>1.79341178139441,rate=>98244.7,samples=>20,time=>10.1787},{errors=>5.8e-12,participant=>"Array::Set::Naive::set_intersect",pct_faster_vs_slowest=>7.88161769400539,pct_slower_vs_fastest=>1.64320202250782,rate=>103828,samples=>22,time=>9.63133},{errors=>8.1e-09,participant=>"Set::Tiny::intersection",pct_faster_vs_slowest=>12.7031742582185,pct_slower_vs_fastest=>0.71317312394656,rate=>160000,samples=>21,time=>6.2},{errors=>1.6e-09,participant=>"Array::Set::set_intersect",pct_faster_vs_slowest=>15.1637510721501,pct_slower_vs_fastest=>0.452380066183082,rate=>189000,samples=>21,time=>5.29},{errors=>0,participant=>"Array::Utils::intersect",pct_faster_vs_slowest=>22.4759098519363,pct_slower_vs_fastest=>0,rate=>274438,samples=>20,time=>3.64381}],{"func.bencher_args"=>{action=>"bench",note=>"Run by Pod::Weaver::Plugin::Bencher::Scenario",scenario=>{datasets=>[{args=>{set1=>[1,2,3,4,5,6,7,8,9,10],set2=>[2,3,4,5,6,7,8,9,10,11]},include_by_default=>1,name=>"num10",seq=>0},{args=>{set1=>[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],set2=>[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101]},include_by_default=>1,name=>"num100",seq=>1}],modules=>{"List::MoreUtils"=>{version=>0.407}},participants=>[{_name=>"Array::Utils::unique",code_template=>"&Array::Utils::unique(<set1>, <set2>)",function=>"unique",include_by_default=>1,module=>"Array::Utils",seq=>0,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Scalar::union",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Scalar",seq=>1,tags=>["op:union"],type=>"perl_code"},{_name=>"List::MoreUtils::PP::uniq",fcall_template=>"List::MoreUtils::PP::uniq(\@{<set1>}, \@{<set2>})",function=>"uniq",include_by_default=>1,module=>"List::MoreUtils::PP",seq=>2,tags=>["op:union"],type=>"perl_code"},{fcall_template=>"List::MoreUtils::uniq(\@{<set1>}, \@{<set2>})",function=>"uniq",include_by_default=>1,module=>"List::MoreUtils",name=>"List::MoreUtils::XS::uniq",seq=>3,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Set::set_union",fcall_template=>"Array::Set::set_union(<set1>, <set2>)",function=>"set_union",include_by_default=>1,module=>"Array::Set",seq=>4,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_union",fcall_template=>"Array::Set::Naive::set_union(<set1>, <set2>)",function=>"set_union",include_by_default=>1,module=>"Array::Set::Naive",seq=>5,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Array::union",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Array",seq=>6,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::AsObject::union",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->union(\$s2, 1)",function=>"union",include_by_default=>1,module=>"Array::AsObject",seq=>7,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Object::union",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Object",seq=>8,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Tiny::union",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Tiny",seq=>9,tags=>["op:union"],type=>"perl_code"},{_name=>"List::Collection::union",code_template=>"[List::Collection::union(<set1>, <set2>)]",function=>"union",include_by_default=>1,module=>"List::Collection",seq=>10,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Utils::array_diff",code_template=>"&Array::Utils::array_diff(<set1>, <set2>)",function=>"array_diff",include_by_default=>1,module=>"Array::Utils",seq=>11,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Scalar::symmetric_difference",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Scalar",seq=>12,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"List::MoreUtils::PP::singleton",fcall_template=>"List::MoreUtils::PP::singleton(\@{<set1>}, \@{<set2>})",function=>"singleton",include_by_default=>1,module=>"List::MoreUtils::PP",seq=>13,tags=>["op:symdiff"],type=>"perl_code"},{fcall_template=>"List::MoreUtils::singleton(\@{<set1>}, \@{<set2>})",function=>"singleton",include_by_default=>1,module=>"List::MoreUtils",name=>"List::MoreUtils::XS::singleton",seq=>14,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Set::set_symdiff",fcall_template=>"Array::Set::set_symdiff(<set1>, <set2>)",function=>"set_symdiff",include_by_default=>1,module=>"Array::Set",seq=>15,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_symdiff",fcall_template=>"Array::Set::Naive::set_symdiff(<set1>, <set2>)",function=>"set_symdiff",include_by_default=>1,module=>"Array::Set::Naive",seq=>16,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Array::symmetric_difference",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Array",seq=>17,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::AsObject::symmetric_difference",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Array::AsObject",seq=>18,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Object::symmetric_difference",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Object",seq=>19,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Tiny::symmetric_difference",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Tiny",seq=>20,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"List::Collection::complement",code_template=>"[List::Collection::complement(<set1>, <set2>)]",function=>"complement",include_by_default=>1,module=>"List::Collection",seq=>21,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Utils::array_minus",code_template=>"&Array::Utils::array_minus(<set1>, <set2>)",function=>"array_minus",include_by_default=>1,module=>"Array::Utils",seq=>22,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Scalar::difference",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Scalar",seq=>23,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Set::set_diff",fcall_template=>"Array::Set::set_diff(<set1>, <set2>)",function=>"set_diff",include_by_default=>1,module=>"Array::Set",seq=>24,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_diff",fcall_template=>"Array::Set::Naive::set_diff(<set1>, <set2>)",function=>"set_diff",include_by_default=>1,module=>"Array::Set::Naive",seq=>25,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Array::difference",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Array",seq=>26,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::AsObject::difference",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Array::AsObject",seq=>27,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Object::difference",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Object",seq=>28,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Tiny::difference",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Tiny",seq=>29,tags=>["op:diff"],type=>"perl_code"},{_name=>"List::Collection::subtract",code_template=>"[List::Collection::subtract(<set1>, <set2>)]",function=>"subtract",include_by_default=>1,module=>"List::Collection",seq=>30,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Utils::intersect",code_template=>"&Array::Utils::intersect(<set1>, <set2>)",function=>"intersect",include_by_default=>1,module=>"Array::Utils",seq=>31,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Scalar::intersection",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Scalar",seq=>32,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::Set::set_intersect",fcall_template=>"Array::Set::set_intersect(<set1>, <set2>)",function=>"set_intersect",include_by_default=>1,module=>"Array::Set",seq=>33,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_intersect",fcall_template=>"Array::Set::Naive::set_intersect(<set1>, <set2>)",function=>"set_intersect",include_by_default=>1,module=>"Array::Set::Naive",seq=>34,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Array::intersection",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Array",seq=>35,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::AsObject::intersection",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->intersection(\$s2, 1)",function=>"intersection",include_by_default=>1,module=>"Array::AsObject",seq=>36,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Object::intersection",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Object",seq=>37,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Tiny::intersection",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Tiny",seq=>38,tags=>["op:intersect"],type=>"perl_code"},{_name=>"List::Collection::intersect",code_template=>"[List::Collection::intersect(<set1>, <set2>)]",function=>"intersect",include_by_default=>1,module=>"List::Collection",seq=>39,tags=>["op:intersect"],type=>"perl_code"}],summary=>"Benchmark Perl set operation (union, intersection, diff, symmetric diff) modules"}},"func.bencher_version"=>undef,"func.code_startup"=>undef,"func.cpu_info"=>[{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>0,speed=>2475.429,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>1,speed=>2419.744,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>2,speed=>2474.523,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>3,speed=>2472.777,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>4,speed=>2472.466,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>5,speed=>2467.679,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>6,speed=>"2252.040",stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>7,speed=>2261.284,stepping=>3}],"func.elapsed_time"=>3.27770900726318,"func.module_startup"=>undef,"func.module_versions"=>{"Array::AsObject"=>1.02,"Array::Set"=>0.062,"Array::Set::Naive"=>0.001,"Array::Utils"=>0.5,"Benchmark::Dumb"=>0.111,"Devel::Platform::Info"=>"1.00","List::Collection"=>"0.0.4","List::MoreUtils"=>0.428,"List::MoreUtils::PP"=>0.428,"Set::Array"=>"0.30","Set::Object"=>"1.40","Set::Scalar"=>1.29,"Set::Tiny"=>0.04,"Sys::Info"=>0.7811,__PACKAGE__=>1.053,perl=>"v5.30.2"},"func.note"=>"Run by Pod::Weaver::Plugin::Bencher::Scenario","func.permute"=>["participant",[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"perl",["perl"]],"func.platform_info"=>{archname=>"x86_64",codename=>"tara",is32bit=>0,is64bit=>1,kernel=>"linux-5.3.0-68-generic",kname=>"Linux",kvers=>"5.3.0-68-generic",osflag=>"linux",oslabel=>"LinuxMint",osname=>"GNU/Linux",osvers=>19,source=>{"cat /etc/.issue"=>"","cat /etc/issue"=>"Linux Mint 19 Tara \\n \\l","lsb_release -a"=>"Distributor ID:\tLinuxMint\nDescription:\tLinux Mint 19 Tara\nRelease:\t19\nCodename:\ttara","uname -a"=>"Linux builder 5.3.0-68-generic #63-Ubuntu SMP Mon Sep 28 13:51:38 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux","uname -m"=>"x86_64","uname -o"=>"GNU/Linux","uname -r"=>"5.3.0-68-generic","uname -s"=>"Linux"}},"func.precision"=>0,"func.time_end"=>1621044770.66485,"func.time_factor"=>1000000,"func.time_start"=>1621044767.38715,"table.field_aligns"=>["left","number","number","number","number","number","number"],"table.field_formats"=>[undef,undef,undef,"percent","percent",undef,undef],"table.field_units"=>[undef,"/s","\x{3BC}s"],"table.fields"=>["participant","rate","time","pct_faster_vs_slowest","pct_slower_vs_fastest","errors","samples"]}],[200,"OK",[{errors=>5.3e-06,participant=>"Array::AsObject::intersection",pct_faster_vs_slowest=>0,pct_slower_vs_fastest=>131.693584109305,rate=>240,samples=>21,time=>4.3},{errors=>1.8e-06,participant=>"Set::Array::intersection",pct_faster_vs_slowest=>1.06401106525313,pct_slower_vs_fastest=>63.2891825257884,rate=>486,samples=>20,time=>2.06},{errors=>6.9e-07,participant=>"List::Collection::intersect",pct_faster_vs_slowest=>4.81996263659488,pct_slower_vs_fastest=>21.7997312688834,rate=>1370,samples=>20,time=>0.73},{errors=>8.3e-07,participant=>"Set::Scalar::intersection",pct_faster_vs_slowest=>7.42879764597042,pct_slower_vs_fastest=>14.7428840604262,rate=>2000,samples=>21,time=>0.5},{errors=>2.1e-07,participant=>"Array::Set::Naive::set_intersect",pct_faster_vs_slowest=>19.6466239426581,pct_slower_vs_fastest=>5.42689015297781,rate=>4900,samples=>21,time=>0.21},{errors=>1.1e-07,participant=>"Set::Object::intersection",pct_faster_vs_slowest=>46.9513244218525,pct_slower_vs_fastest=>1.76725587268313,rate=>11000,samples=>20,time=>0.089},{errors=>1.1e-07,participant=>"Set::Tiny::intersection",pct_faster_vs_slowest=>74.4618972755634,pct_slower_vs_fastest=>0.758418339585995,rate=>18000,samples=>20,time=>0.056},{errors=>1.2e-08,participant=>"Array::Set::set_intersect",pct_faster_vs_slowest=>94.7374134769495,pct_slower_vs_fastest=>0.386015971083797,rate=>22500,samples=>23,time=>0.0444},{errors=>5e-12,participant=>"Array::Utils::intersect",pct_faster_vs_slowest=>131.693584109305,pct_slower_vs_fastest=>0,rate=>31216.5,samples=>21,time=>0.0320344}],{"func.bencher_args"=>{action=>"bench",note=>"Run by Pod::Weaver::Plugin::Bencher::Scenario",scenario=>{datasets=>[{args=>{set1=>[1,2,3,4,5,6,7,8,9,10],set2=>[2,3,4,5,6,7,8,9,10,11]},include_by_default=>1,name=>"num10",seq=>0},{args=>{set1=>[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],set2=>[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101]},include_by_default=>1,name=>"num100",seq=>1}],modules=>{"List::MoreUtils"=>{version=>0.407}},participants=>[{_name=>"Array::Utils::unique",code_template=>"&Array::Utils::unique(<set1>, <set2>)",function=>"unique",include_by_default=>1,module=>"Array::Utils",seq=>0,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Scalar::union",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Scalar",seq=>1,tags=>["op:union"],type=>"perl_code"},{_name=>"List::MoreUtils::PP::uniq",fcall_template=>"List::MoreUtils::PP::uniq(\@{<set1>}, \@{<set2>})",function=>"uniq",include_by_default=>1,module=>"List::MoreUtils::PP",seq=>2,tags=>["op:union"],type=>"perl_code"},{fcall_template=>"List::MoreUtils::uniq(\@{<set1>}, \@{<set2>})",function=>"uniq",include_by_default=>1,module=>"List::MoreUtils",name=>"List::MoreUtils::XS::uniq",seq=>3,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Set::set_union",fcall_template=>"Array::Set::set_union(<set1>, <set2>)",function=>"set_union",include_by_default=>1,module=>"Array::Set",seq=>4,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_union",fcall_template=>"Array::Set::Naive::set_union(<set1>, <set2>)",function=>"set_union",include_by_default=>1,module=>"Array::Set::Naive",seq=>5,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Array::union",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Array",seq=>6,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::AsObject::union",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->union(\$s2, 1)",function=>"union",include_by_default=>1,module=>"Array::AsObject",seq=>7,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Object::union",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Object",seq=>8,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Tiny::union",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Tiny",seq=>9,tags=>["op:union"],type=>"perl_code"},{_name=>"List::Collection::union",code_template=>"[List::Collection::union(<set1>, <set2>)]",function=>"union",include_by_default=>1,module=>"List::Collection",seq=>10,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Utils::array_diff",code_template=>"&Array::Utils::array_diff(<set1>, <set2>)",function=>"array_diff",include_by_default=>1,module=>"Array::Utils",seq=>11,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Scalar::symmetric_difference",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Scalar",seq=>12,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"List::MoreUtils::PP::singleton",fcall_template=>"List::MoreUtils::PP::singleton(\@{<set1>}, \@{<set2>})",function=>"singleton",include_by_default=>1,module=>"List::MoreUtils::PP",seq=>13,tags=>["op:symdiff"],type=>"perl_code"},{fcall_template=>"List::MoreUtils::singleton(\@{<set1>}, \@{<set2>})",function=>"singleton",include_by_default=>1,module=>"List::MoreUtils",name=>"List::MoreUtils::XS::singleton",seq=>14,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Set::set_symdiff",fcall_template=>"Array::Set::set_symdiff(<set1>, <set2>)",function=>"set_symdiff",include_by_default=>1,module=>"Array::Set",seq=>15,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_symdiff",fcall_template=>"Array::Set::Naive::set_symdiff(<set1>, <set2>)",function=>"set_symdiff",include_by_default=>1,module=>"Array::Set::Naive",seq=>16,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Array::symmetric_difference",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Array",seq=>17,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::AsObject::symmetric_difference",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Array::AsObject",seq=>18,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Object::symmetric_difference",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Object",seq=>19,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Tiny::symmetric_difference",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Tiny",seq=>20,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"List::Collection::complement",code_template=>"[List::Collection::complement(<set1>, <set2>)]",function=>"complement",include_by_default=>1,module=>"List::Collection",seq=>21,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Utils::array_minus",code_template=>"&Array::Utils::array_minus(<set1>, <set2>)",function=>"array_minus",include_by_default=>1,module=>"Array::Utils",seq=>22,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Scalar::difference",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Scalar",seq=>23,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Set::set_diff",fcall_template=>"Array::Set::set_diff(<set1>, <set2>)",function=>"set_diff",include_by_default=>1,module=>"Array::Set",seq=>24,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_diff",fcall_template=>"Array::Set::Naive::set_diff(<set1>, <set2>)",function=>"set_diff",include_by_default=>1,module=>"Array::Set::Naive",seq=>25,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Array::difference",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Array",seq=>26,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::AsObject::difference",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Array::AsObject",seq=>27,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Object::difference",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Object",seq=>28,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Tiny::difference",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Tiny",seq=>29,tags=>["op:diff"],type=>"perl_code"},{_name=>"List::Collection::subtract",code_template=>"[List::Collection::subtract(<set1>, <set2>)]",function=>"subtract",include_by_default=>1,module=>"List::Collection",seq=>30,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Utils::intersect",code_template=>"&Array::Utils::intersect(<set1>, <set2>)",function=>"intersect",include_by_default=>1,module=>"Array::Utils",seq=>31,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Scalar::intersection",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Scalar",seq=>32,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::Set::set_intersect",fcall_template=>"Array::Set::set_intersect(<set1>, <set2>)",function=>"set_intersect",include_by_default=>1,module=>"Array::Set",seq=>33,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_intersect",fcall_template=>"Array::Set::Naive::set_intersect(<set1>, <set2>)",function=>"set_intersect",include_by_default=>1,module=>"Array::Set::Naive",seq=>34,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Array::intersection",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Array",seq=>35,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::AsObject::intersection",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->intersection(\$s2, 1)",function=>"intersection",include_by_default=>1,module=>"Array::AsObject",seq=>36,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Object::intersection",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Object",seq=>37,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Tiny::intersection",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Tiny",seq=>38,tags=>["op:intersect"],type=>"perl_code"},{_name=>"List::Collection::intersect",code_template=>"[List::Collection::intersect(<set1>, <set2>)]",function=>"intersect",include_by_default=>1,module=>"List::Collection",seq=>39,tags=>["op:intersect"],type=>"perl_code"}],summary=>"Benchmark Perl set operation (union, intersection, diff, symmetric diff) modules"}},"func.bencher_version"=>undef,"func.code_startup"=>undef,"func.cpu_info"=>[{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>0,speed=>2475.429,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>1,speed=>2419.744,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>2,speed=>2474.523,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>3,speed=>2472.777,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>4,speed=>2472.466,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>5,speed=>2467.679,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>6,speed=>"2252.040",stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>7,speed=>2261.284,stepping=>3}],"func.elapsed_time"=>3.27770900726318,"func.module_startup"=>undef,"func.module_versions"=>{"Array::AsObject"=>1.02,"Array::Set"=>0.062,"Array::Set::Naive"=>0.001,"Array::Utils"=>0.5,"Benchmark::Dumb"=>0.111,"Devel::Platform::Info"=>"1.00","List::Collection"=>"0.0.4","List::MoreUtils"=>0.428,"List::MoreUtils::PP"=>0.428,"Set::Array"=>"0.30","Set::Object"=>"1.40","Set::Scalar"=>1.29,"Set::Tiny"=>0.04,"Sys::Info"=>0.7811,__PACKAGE__=>1.053,perl=>"v5.30.2"},"func.note"=>"Run by Pod::Weaver::Plugin::Bencher::Scenario","func.permute"=>["participant",[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"perl",["perl"]],"func.platform_info"=>{archname=>"x86_64",codename=>"tara",is32bit=>0,is64bit=>1,kernel=>"linux-5.3.0-68-generic",kname=>"Linux",kvers=>"5.3.0-68-generic",osflag=>"linux",oslabel=>"LinuxMint",osname=>"GNU/Linux",osvers=>19,source=>{"cat /etc/.issue"=>"","cat /etc/issue"=>"Linux Mint 19 Tara \\n \\l","lsb_release -a"=>"Distributor ID:\tLinuxMint\nDescription:\tLinux Mint 19 Tara\nRelease:\t19\nCodename:\ttara","uname -a"=>"Linux builder 5.3.0-68-generic #63-Ubuntu SMP Mon Sep 28 13:51:38 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux","uname -m"=>"x86_64","uname -o"=>"GNU/Linux","uname -r"=>"5.3.0-68-generic","uname -s"=>"Linux"}},"func.precision"=>0,"func.time_end"=>1621044770.66485,"func.time_factor"=>1000,"func.time_start"=>1621044767.38715,"table.field_aligns"=>["left","number","number","number","number","number","number"],"table.field_formats"=>[undef,undef,undef,"percent","percent",undef,undef],"table.field_units"=>[undef,"/s","ms"],"table.fields"=>["participant","rate","time","pct_faster_vs_slowest","pct_slower_vs_fastest","errors","samples"]}],[200,"OK",[{errors=>2.7e-07,participant=>"Array::AsObject::symmetric_difference",pct_faster_vs_slowest=>0,pct_slower_vs_fastest=>75.8346783141868,rate=>5500,samples=>20,time=>180},{errors=>6.4e-07,participant=>"List::Collection::complement",pct_faster_vs_slowest=>0.534340470090989,pct_slower_vs_fastest=>49.0766810313166,rate=>8400,samples=>20,time=>120},{errors=>8e-08,participant=>"Set::Scalar::symmetric_difference",pct_faster_vs_slowest=>2.45035391956393,pct_slower_vs_fastest=>21.2686368139004,rate=>19000,samples=>20,time=>53},{errors=>4.6e-11,participant=>"Array::Set::Naive::set_symdiff",pct_faster_vs_slowest=>5.45812275920676,pct_slower_vs_fastest=>10.8973703627189,rate=>35357,samples=>23,time=>28.283},{errors=>2.7e-08,participant=>"Set::Object::symmetric_difference",pct_faster_vs_slowest=>11.2170939064585,pct_slower_vs_fastest=>5.289112525653,rate=>67000,samples=>20,time=>15},{errors=>6.5e-09,participant=>"Set::Array::symmetric_difference",pct_faster_vs_slowest=>12.0088322612562,pct_slower_vs_fastest=>4.90634707029172,rate=>71200,samples=>21,time=>14},{errors=>1.3e-08,participant=>"Set::Tiny::symmetric_difference",pct_faster_vs_slowest=>23.5731558932378,pct_slower_vs_fastest=>2.12677291626717,rate=>130000,samples=>20,time=>7.4},{errors=>6.7e-09,participant=>"Array::Set::set_symdiff",pct_faster_vs_slowest=>30.7170830380762,pct_slower_vs_fastest=>1.42250140789892,rate=>170000,samples=>20,time=>5.8},{errors=>6.7e-09,participant=>"Array::Utils::array_diff",pct_faster_vs_slowest=>38.6459311278353,pct_slower_vs_fastest=>0.938021787568545,rate=>220000,samples=>20,time=>4.6},{errors=>1.4e-09,participant=>"List::MoreUtils::PP::singleton",pct_faster_vs_slowest=>43.1227027579232,pct_slower_vs_fastest=>0.741386486130191,rate=>242000,samples=>27,time=>4.14},{errors=>0,participant=>"List::MoreUtils::XS::singleton",pct_faster_vs_slowest=>75.8346783141868,pct_slower_vs_fastest=>0,rate=>420653,samples=>20,time=>2.37726}],{"func.bencher_args"=>{action=>"bench",note=>"Run by Pod::Weaver::Plugin::Bencher::Scenario",scenario=>{datasets=>[{args=>{set1=>[1,2,3,4,5,6,7,8,9,10],set2=>[2,3,4,5,6,7,8,9,10,11]},include_by_default=>1,name=>"num10",seq=>0},{args=>{set1=>[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],set2=>[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101]},include_by_default=>1,name=>"num100",seq=>1}],modules=>{"List::MoreUtils"=>{version=>0.407}},participants=>[{_name=>"Array::Utils::unique",code_template=>"&Array::Utils::unique(<set1>, <set2>)",function=>"unique",include_by_default=>1,module=>"Array::Utils",seq=>0,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Scalar::union",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Scalar",seq=>1,tags=>["op:union"],type=>"perl_code"},{_name=>"List::MoreUtils::PP::uniq",fcall_template=>"List::MoreUtils::PP::uniq(\@{<set1>}, \@{<set2>})",function=>"uniq",include_by_default=>1,module=>"List::MoreUtils::PP",seq=>2,tags=>["op:union"],type=>"perl_code"},{fcall_template=>"List::MoreUtils::uniq(\@{<set1>}, \@{<set2>})",function=>"uniq",include_by_default=>1,module=>"List::MoreUtils",name=>"List::MoreUtils::XS::uniq",seq=>3,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Set::set_union",fcall_template=>"Array::Set::set_union(<set1>, <set2>)",function=>"set_union",include_by_default=>1,module=>"Array::Set",seq=>4,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_union",fcall_template=>"Array::Set::Naive::set_union(<set1>, <set2>)",function=>"set_union",include_by_default=>1,module=>"Array::Set::Naive",seq=>5,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Array::union",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Array",seq=>6,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::AsObject::union",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->union(\$s2, 1)",function=>"union",include_by_default=>1,module=>"Array::AsObject",seq=>7,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Object::union",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Object",seq=>8,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Tiny::union",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Tiny",seq=>9,tags=>["op:union"],type=>"perl_code"},{_name=>"List::Collection::union",code_template=>"[List::Collection::union(<set1>, <set2>)]",function=>"union",include_by_default=>1,module=>"List::Collection",seq=>10,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Utils::array_diff",code_template=>"&Array::Utils::array_diff(<set1>, <set2>)",function=>"array_diff",include_by_default=>1,module=>"Array::Utils",seq=>11,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Scalar::symmetric_difference",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Scalar",seq=>12,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"List::MoreUtils::PP::singleton",fcall_template=>"List::MoreUtils::PP::singleton(\@{<set1>}, \@{<set2>})",function=>"singleton",include_by_default=>1,module=>"List::MoreUtils::PP",seq=>13,tags=>["op:symdiff"],type=>"perl_code"},{fcall_template=>"List::MoreUtils::singleton(\@{<set1>}, \@{<set2>})",function=>"singleton",include_by_default=>1,module=>"List::MoreUtils",name=>"List::MoreUtils::XS::singleton",seq=>14,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Set::set_symdiff",fcall_template=>"Array::Set::set_symdiff(<set1>, <set2>)",function=>"set_symdiff",include_by_default=>1,module=>"Array::Set",seq=>15,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_symdiff",fcall_template=>"Array::Set::Naive::set_symdiff(<set1>, <set2>)",function=>"set_symdiff",include_by_default=>1,module=>"Array::Set::Naive",seq=>16,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Array::symmetric_difference",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Array",seq=>17,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::AsObject::symmetric_difference",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Array::AsObject",seq=>18,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Object::symmetric_difference",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Object",seq=>19,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Tiny::symmetric_difference",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Tiny",seq=>20,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"List::Collection::complement",code_template=>"[List::Collection::complement(<set1>, <set2>)]",function=>"complement",include_by_default=>1,module=>"List::Collection",seq=>21,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Utils::array_minus",code_template=>"&Array::Utils::array_minus(<set1>, <set2>)",function=>"array_minus",include_by_default=>1,module=>"Array::Utils",seq=>22,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Scalar::difference",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Scalar",seq=>23,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Set::set_diff",fcall_template=>"Array::Set::set_diff(<set1>, <set2>)",function=>"set_diff",include_by_default=>1,module=>"Array::Set",seq=>24,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_diff",fcall_template=>"Array::Set::Naive::set_diff(<set1>, <set2>)",function=>"set_diff",include_by_default=>1,module=>"Array::Set::Naive",seq=>25,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Array::difference",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Array",seq=>26,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::AsObject::difference",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Array::AsObject",seq=>27,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Object::difference",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Object",seq=>28,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Tiny::difference",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Tiny",seq=>29,tags=>["op:diff"],type=>"perl_code"},{_name=>"List::Collection::subtract",code_template=>"[List::Collection::subtract(<set1>, <set2>)]",function=>"subtract",include_by_default=>1,module=>"List::Collection",seq=>30,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Utils::intersect",code_template=>"&Array::Utils::intersect(<set1>, <set2>)",function=>"intersect",include_by_default=>1,module=>"Array::Utils",seq=>31,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Scalar::intersection",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Scalar",seq=>32,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::Set::set_intersect",fcall_template=>"Array::Set::set_intersect(<set1>, <set2>)",function=>"set_intersect",include_by_default=>1,module=>"Array::Set",seq=>33,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_intersect",fcall_template=>"Array::Set::Naive::set_intersect(<set1>, <set2>)",function=>"set_intersect",include_by_default=>1,module=>"Array::Set::Naive",seq=>34,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Array::intersection",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Array",seq=>35,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::AsObject::intersection",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->intersection(\$s2, 1)",function=>"intersection",include_by_default=>1,module=>"Array::AsObject",seq=>36,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Object::intersection",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Object",seq=>37,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Tiny::intersection",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Tiny",seq=>38,tags=>["op:intersect"],type=>"perl_code"},{_name=>"List::Collection::intersect",code_template=>"[List::Collection::intersect(<set1>, <set2>)]",function=>"intersect",include_by_default=>1,module=>"List::Collection",seq=>39,tags=>["op:intersect"],type=>"perl_code"}],summary=>"Benchmark Perl set operation (union, intersection, diff, symmetric diff) modules"}},"func.bencher_version"=>undef,"func.code_startup"=>undef,"func.cpu_info"=>[{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>0,speed=>2475.429,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>1,speed=>2419.744,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>2,speed=>2474.523,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>3,speed=>2472.777,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>4,speed=>2472.466,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>5,speed=>2467.679,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>6,speed=>"2252.040",stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>7,speed=>2261.284,stepping=>3}],"func.elapsed_time"=>3.27770900726318,"func.module_startup"=>undef,"func.module_versions"=>{"Array::AsObject"=>1.02,"Array::Set"=>0.062,"Array::Set::Naive"=>0.001,"Array::Utils"=>0.5,"Benchmark::Dumb"=>0.111,"Devel::Platform::Info"=>"1.00","List::Collection"=>"0.0.4","List::MoreUtils"=>0.428,"List::MoreUtils::PP"=>0.428,"Set::Array"=>"0.30","Set::Object"=>"1.40","Set::Scalar"=>1.29,"Set::Tiny"=>0.04,"Sys::Info"=>0.7811,__PACKAGE__=>1.053,perl=>"v5.30.2"},"func.note"=>"Run by Pod::Weaver::Plugin::Bencher::Scenario","func.permute"=>["participant",[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"perl",["perl"]],"func.platform_info"=>{archname=>"x86_64",codename=>"tara",is32bit=>0,is64bit=>1,kernel=>"linux-5.3.0-68-generic",kname=>"Linux",kvers=>"5.3.0-68-generic",osflag=>"linux",oslabel=>"LinuxMint",osname=>"GNU/Linux",osvers=>19,source=>{"cat /etc/.issue"=>"","cat /etc/issue"=>"Linux Mint 19 Tara \\n \\l","lsb_release -a"=>"Distributor ID:\tLinuxMint\nDescription:\tLinux Mint 19 Tara\nRelease:\t19\nCodename:\ttara","uname -a"=>"Linux builder 5.3.0-68-generic #63-Ubuntu SMP Mon Sep 28 13:51:38 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux","uname -m"=>"x86_64","uname -o"=>"GNU/Linux","uname -r"=>"5.3.0-68-generic","uname -s"=>"Linux"}},"func.precision"=>0,"func.time_end"=>1621044770.66485,"func.time_factor"=>1000000,"func.time_start"=>1621044767.38715,"table.field_aligns"=>["left","number","number","number","number","number","number"],"table.field_formats"=>[undef,undef,undef,"percent","percent",undef,undef],"table.field_units"=>[undef,"/s","\x{3BC}s"],"table.fields"=>["participant","rate","time","pct_faster_vs_slowest","pct_slower_vs_fastest","errors","samples"]}],[200,"OK",[{errors=>1.2e-06,participant=>"Array::AsObject::symmetric_difference",pct_faster_vs_slowest=>0,pct_slower_vs_fastest=>435.874858191403,rate=>116,samples=>20,time=>8.62},{errors=>2.7e-06,participant=>"List::Collection::complement",pct_faster_vs_slowest=>3.71842364469002,pct_slower_vs_fastest=>91.5891549994773,rate=>550,samples=>20,time=>1.8},{errors=>4.8e-07,participant=>"Array::Set::Naive::set_symdiff",pct_faster_vs_slowest=>16.4333063361429,pct_slower_vs_fastest=>24.0597821071767,rate=>2020,samples=>20,time=>0.495},{errors=>4.2e-07,participant=>"Set::Scalar::symmetric_difference",pct_faster_vs_slowest=>24.1038443294809,pct_slower_vs_fastest=>16.4027074282944,rate=>2900,samples=>21,time=>0.34},{errors=>1.3e-07,participant=>"Set::Object::symmetric_difference",pct_faster_vs_slowest=>84.9295519675676,pct_slower_vs_fastest=>4.0841049230222,rate=>10000,samples=>20,time=>0.1},{errors=>9.9e-08,participant=>"Set::Array::symmetric_difference",pct_faster_vs_slowest=>112.973295444523,pct_slower_vs_fastest=>2.83313351156063,rate=>13000,samples=>23,time=>0.076},{errors=>1e-07,participant=>"Set::Tiny::symmetric_difference",pct_faster_vs_slowest=>131.917084403001,pct_slower_vs_fastest=>2.28682245893093,rate=>15000,samples=>21,time=>0.065},{errors=>1.3e-08,participant=>"Array::Set::set_symdiff",pct_faster_vs_slowest=>185.455829864082,pct_slower_vs_fastest=>1.3430474579951,rate=>21600,samples=>20,time=>0.0462},{errors=>5e-08,participant=>"List::MoreUtils::PP::singleton",pct_faster_vs_slowest=>237.410066381352,pct_slower_vs_fastest=>0.832451392772123,rate=>28000,samples=>23,time=>0.036},{errors=>2.3e-11,participant=>"Array::Utils::array_diff",pct_faster_vs_slowest=>238.648448011406,pct_slower_vs_fastest=>0.822982213390383,rate=>27797.2,samples=>20,time=>0.0359748},{errors=>2e-08,participant=>"List::MoreUtils::XS::singleton",pct_faster_vs_slowest=>435.874858191403,pct_slower_vs_fastest=>0,rate=>51000,samples=>20,time=>0.02}],{"func.bencher_args"=>{action=>"bench",note=>"Run by Pod::Weaver::Plugin::Bencher::Scenario",scenario=>{datasets=>[{args=>{set1=>[1,2,3,4,5,6,7,8,9,10],set2=>[2,3,4,5,6,7,8,9,10,11]},include_by_default=>1,name=>"num10",seq=>0},{args=>{set1=>[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],set2=>[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101]},include_by_default=>1,name=>"num100",seq=>1}],modules=>{"List::MoreUtils"=>{version=>0.407}},participants=>[{_name=>"Array::Utils::unique",code_template=>"&Array::Utils::unique(<set1>, <set2>)",function=>"unique",include_by_default=>1,module=>"Array::Utils",seq=>0,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Scalar::union",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Scalar",seq=>1,tags=>["op:union"],type=>"perl_code"},{_name=>"List::MoreUtils::PP::uniq",fcall_template=>"List::MoreUtils::PP::uniq(\@{<set1>}, \@{<set2>})",function=>"uniq",include_by_default=>1,module=>"List::MoreUtils::PP",seq=>2,tags=>["op:union"],type=>"perl_code"},{fcall_template=>"List::MoreUtils::uniq(\@{<set1>}, \@{<set2>})",function=>"uniq",include_by_default=>1,module=>"List::MoreUtils",name=>"List::MoreUtils::XS::uniq",seq=>3,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Set::set_union",fcall_template=>"Array::Set::set_union(<set1>, <set2>)",function=>"set_union",include_by_default=>1,module=>"Array::Set",seq=>4,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_union",fcall_template=>"Array::Set::Naive::set_union(<set1>, <set2>)",function=>"set_union",include_by_default=>1,module=>"Array::Set::Naive",seq=>5,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Array::union",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Array",seq=>6,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::AsObject::union",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->union(\$s2, 1)",function=>"union",include_by_default=>1,module=>"Array::AsObject",seq=>7,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Object::union",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Object",seq=>8,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Tiny::union",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Tiny",seq=>9,tags=>["op:union"],type=>"perl_code"},{_name=>"List::Collection::union",code_template=>"[List::Collection::union(<set1>, <set2>)]",function=>"union",include_by_default=>1,module=>"List::Collection",seq=>10,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Utils::array_diff",code_template=>"&Array::Utils::array_diff(<set1>, <set2>)",function=>"array_diff",include_by_default=>1,module=>"Array::Utils",seq=>11,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Scalar::symmetric_difference",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Scalar",seq=>12,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"List::MoreUtils::PP::singleton",fcall_template=>"List::MoreUtils::PP::singleton(\@{<set1>}, \@{<set2>})",function=>"singleton",include_by_default=>1,module=>"List::MoreUtils::PP",seq=>13,tags=>["op:symdiff"],type=>"perl_code"},{fcall_template=>"List::MoreUtils::singleton(\@{<set1>}, \@{<set2>})",function=>"singleton",include_by_default=>1,module=>"List::MoreUtils",name=>"List::MoreUtils::XS::singleton",seq=>14,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Set::set_symdiff",fcall_template=>"Array::Set::set_symdiff(<set1>, <set2>)",function=>"set_symdiff",include_by_default=>1,module=>"Array::Set",seq=>15,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_symdiff",fcall_template=>"Array::Set::Naive::set_symdiff(<set1>, <set2>)",function=>"set_symdiff",include_by_default=>1,module=>"Array::Set::Naive",seq=>16,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Array::symmetric_difference",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Array",seq=>17,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::AsObject::symmetric_difference",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Array::AsObject",seq=>18,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Object::symmetric_difference",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Object",seq=>19,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Tiny::symmetric_difference",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Tiny",seq=>20,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"List::Collection::complement",code_template=>"[List::Collection::complement(<set1>, <set2>)]",function=>"complement",include_by_default=>1,module=>"List::Collection",seq=>21,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Utils::array_minus",code_template=>"&Array::Utils::array_minus(<set1>, <set2>)",function=>"array_minus",include_by_default=>1,module=>"Array::Utils",seq=>22,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Scalar::difference",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Scalar",seq=>23,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Set::set_diff",fcall_template=>"Array::Set::set_diff(<set1>, <set2>)",function=>"set_diff",include_by_default=>1,module=>"Array::Set",seq=>24,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_diff",fcall_template=>"Array::Set::Naive::set_diff(<set1>, <set2>)",function=>"set_diff",include_by_default=>1,module=>"Array::Set::Naive",seq=>25,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Array::difference",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Array",seq=>26,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::AsObject::difference",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Array::AsObject",seq=>27,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Object::difference",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Object",seq=>28,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Tiny::difference",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Tiny",seq=>29,tags=>["op:diff"],type=>"perl_code"},{_name=>"List::Collection::subtract",code_template=>"[List::Collection::subtract(<set1>, <set2>)]",function=>"subtract",include_by_default=>1,module=>"List::Collection",seq=>30,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Utils::intersect",code_template=>"&Array::Utils::intersect(<set1>, <set2>)",function=>"intersect",include_by_default=>1,module=>"Array::Utils",seq=>31,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Scalar::intersection",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Scalar",seq=>32,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::Set::set_intersect",fcall_template=>"Array::Set::set_intersect(<set1>, <set2>)",function=>"set_intersect",include_by_default=>1,module=>"Array::Set",seq=>33,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_intersect",fcall_template=>"Array::Set::Naive::set_intersect(<set1>, <set2>)",function=>"set_intersect",include_by_default=>1,module=>"Array::Set::Naive",seq=>34,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Array::intersection",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Array",seq=>35,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::AsObject::intersection",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->intersection(\$s2, 1)",function=>"intersection",include_by_default=>1,module=>"Array::AsObject",seq=>36,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Object::intersection",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Object",seq=>37,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Tiny::intersection",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Tiny",seq=>38,tags=>["op:intersect"],type=>"perl_code"},{_name=>"List::Collection::intersect",code_template=>"[List::Collection::intersect(<set1>, <set2>)]",function=>"intersect",include_by_default=>1,module=>"List::Collection",seq=>39,tags=>["op:intersect"],type=>"perl_code"}],summary=>"Benchmark Perl set operation (union, intersection, diff, symmetric diff) modules"}},"func.bencher_version"=>undef,"func.code_startup"=>undef,"func.cpu_info"=>[{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>0,speed=>2475.429,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>1,speed=>2419.744,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>2,speed=>2474.523,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>3,speed=>2472.777,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>4,speed=>2472.466,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>5,speed=>2467.679,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>6,speed=>"2252.040",stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>7,speed=>2261.284,stepping=>3}],"func.elapsed_time"=>3.27770900726318,"func.module_startup"=>undef,"func.module_versions"=>{"Array::AsObject"=>1.02,"Array::Set"=>0.062,"Array::Set::Naive"=>0.001,"Array::Utils"=>0.5,"Benchmark::Dumb"=>0.111,"Devel::Platform::Info"=>"1.00","List::Collection"=>"0.0.4","List::MoreUtils"=>0.428,"List::MoreUtils::PP"=>0.428,"Set::Array"=>"0.30","Set::Object"=>"1.40","Set::Scalar"=>1.29,"Set::Tiny"=>0.04,"Sys::Info"=>0.7811,__PACKAGE__=>1.053,perl=>"v5.30.2"},"func.note"=>"Run by Pod::Weaver::Plugin::Bencher::Scenario","func.permute"=>["participant",[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"perl",["perl"]],"func.platform_info"=>{archname=>"x86_64",codename=>"tara",is32bit=>0,is64bit=>1,kernel=>"linux-5.3.0-68-generic",kname=>"Linux",kvers=>"5.3.0-68-generic",osflag=>"linux",oslabel=>"LinuxMint",osname=>"GNU/Linux",osvers=>19,source=>{"cat /etc/.issue"=>"","cat /etc/issue"=>"Linux Mint 19 Tara \\n \\l","lsb_release -a"=>"Distributor ID:\tLinuxMint\nDescription:\tLinux Mint 19 Tara\nRelease:\t19\nCodename:\ttara","uname -a"=>"Linux builder 5.3.0-68-generic #63-Ubuntu SMP Mon Sep 28 13:51:38 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux","uname -m"=>"x86_64","uname -o"=>"GNU/Linux","uname -r"=>"5.3.0-68-generic","uname -s"=>"Linux"}},"func.precision"=>0,"func.time_end"=>1621044770.66485,"func.time_factor"=>1000,"func.time_start"=>1621044767.38715,"table.field_aligns"=>["left","number","number","number","number","number","number"],"table.field_formats"=>[undef,undef,undef,"percent","percent",undef,undef],"table.field_units"=>[undef,"/s","ms"],"table.fields"=>["participant","rate","time","pct_faster_vs_slowest","pct_slower_vs_fastest","errors","samples"]}],[200,"OK",[{errors=>1.1e-07,participant=>"Set::Scalar::union",pct_faster_vs_slowest=>0,pct_slower_vs_fastest=>74.4185461935251,rate=>12000,samples=>20,time=>84},{errors=>4.4e-07,participant=>"List::Collection::union",pct_faster_vs_slowest=>0.421010615379289,pct_slower_vs_fastest=>52.0738795173565,rate=>17000,samples=>21,time=>59},{errors=>5.8e-12,participant=>"Array::Set::Naive::set_union",pct_faster_vs_slowest=>4.68016966928513,pct_slower_vs_fastest=>12.2775164448594,rate=>67752.2,samples=>23,time=>14.7597},{errors=>3.3e-09,participant=>"Array::AsObject::union",pct_faster_vs_slowest=>5.7759889787914,pct_slower_vs_fastest=>10.1302639997766,rate=>80800,samples=>21,time=>12.4},{errors=>1.3e-08,participant=>"Set::Array::union",pct_faster_vs_slowest=>7.62177842190435,pct_slower_vs_fastest=>7.74744658270478,rate=>100000,samples=>21,time=>9.7},{errors=>0,participant=>"Set::Object::union",pct_faster_vs_slowest=>8.75703703026011,pct_slower_vs_fastest=>6.72965665289829,rate=>116381,samples=>20,time=>8.5925},{errors=>1.3e-08,participant=>"Set::Tiny::union",pct_faster_vs_slowest=>11.7540718720353,pct_slower_vs_fastest=>4.91329160994367,rate=>150000,samples=>20,time=>6.6},{errors=>1.7e-09,participant=>"Array::Set::set_union",pct_faster_vs_slowest=>14.292429929908,pct_slower_vs_fastest=>3.9317568587335,rate=>182000,samples=>20,time=>5.48},{errors=>0,participant=>"List::MoreUtils::PP::uniq",pct_faster_vs_slowest=>25.6794941594676,pct_slower_vs_fastest=>1.82683568671641,rate=>318229,samples=>20,time=>3.14239},{errors=>8.3e-10,participant=>"List::MoreUtils::XS::uniq",pct_faster_vs_slowest=>42.1896254970559,pct_slower_vs_fastest=>0.746219035834567,rate=>515000,samples=>20,time=>1.94},{errors=>4.1e-10,participant=>"Array::Utils::unique",pct_faster_vs_slowest=>74.4185461935251,pct_slower_vs_fastest=>0,rate=>900000,samples=>21,time=>1.11}],{"func.bencher_args"=>{action=>"bench",note=>"Run by Pod::Weaver::Plugin::Bencher::Scenario",scenario=>{datasets=>[{args=>{set1=>[1,2,3,4,5,6,7,8,9,10],set2=>[2,3,4,5,6,7,8,9,10,11]},include_by_default=>1,name=>"num10",seq=>0},{args=>{set1=>[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],set2=>[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101]},include_by_default=>1,name=>"num100",seq=>1}],modules=>{"List::MoreUtils"=>{version=>0.407}},participants=>[{_name=>"Array::Utils::unique",code_template=>"&Array::Utils::unique(<set1>, <set2>)",function=>"unique",include_by_default=>1,module=>"Array::Utils",seq=>0,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Scalar::union",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Scalar",seq=>1,tags=>["op:union"],type=>"perl_code"},{_name=>"List::MoreUtils::PP::uniq",fcall_template=>"List::MoreUtils::PP::uniq(\@{<set1>}, \@{<set2>})",function=>"uniq",include_by_default=>1,module=>"List::MoreUtils::PP",seq=>2,tags=>["op:union"],type=>"perl_code"},{fcall_template=>"List::MoreUtils::uniq(\@{<set1>}, \@{<set2>})",function=>"uniq",include_by_default=>1,module=>"List::MoreUtils",name=>"List::MoreUtils::XS::uniq",seq=>3,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Set::set_union",fcall_template=>"Array::Set::set_union(<set1>, <set2>)",function=>"set_union",include_by_default=>1,module=>"Array::Set",seq=>4,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_union",fcall_template=>"Array::Set::Naive::set_union(<set1>, <set2>)",function=>"set_union",include_by_default=>1,module=>"Array::Set::Naive",seq=>5,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Array::union",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Array",seq=>6,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::AsObject::union",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->union(\$s2, 1)",function=>"union",include_by_default=>1,module=>"Array::AsObject",seq=>7,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Object::union",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Object",seq=>8,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Tiny::union",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Tiny",seq=>9,tags=>["op:union"],type=>"perl_code"},{_name=>"List::Collection::union",code_template=>"[List::Collection::union(<set1>, <set2>)]",function=>"union",include_by_default=>1,module=>"List::Collection",seq=>10,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Utils::array_diff",code_template=>"&Array::Utils::array_diff(<set1>, <set2>)",function=>"array_diff",include_by_default=>1,module=>"Array::Utils",seq=>11,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Scalar::symmetric_difference",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Scalar",seq=>12,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"List::MoreUtils::PP::singleton",fcall_template=>"List::MoreUtils::PP::singleton(\@{<set1>}, \@{<set2>})",function=>"singleton",include_by_default=>1,module=>"List::MoreUtils::PP",seq=>13,tags=>["op:symdiff"],type=>"perl_code"},{fcall_template=>"List::MoreUtils::singleton(\@{<set1>}, \@{<set2>})",function=>"singleton",include_by_default=>1,module=>"List::MoreUtils",name=>"List::MoreUtils::XS::singleton",seq=>14,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Set::set_symdiff",fcall_template=>"Array::Set::set_symdiff(<set1>, <set2>)",function=>"set_symdiff",include_by_default=>1,module=>"Array::Set",seq=>15,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_symdiff",fcall_template=>"Array::Set::Naive::set_symdiff(<set1>, <set2>)",function=>"set_symdiff",include_by_default=>1,module=>"Array::Set::Naive",seq=>16,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Array::symmetric_difference",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Array",seq=>17,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::AsObject::symmetric_difference",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Array::AsObject",seq=>18,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Object::symmetric_difference",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Object",seq=>19,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Tiny::symmetric_difference",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Tiny",seq=>20,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"List::Collection::complement",code_template=>"[List::Collection::complement(<set1>, <set2>)]",function=>"complement",include_by_default=>1,module=>"List::Collection",seq=>21,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Utils::array_minus",code_template=>"&Array::Utils::array_minus(<set1>, <set2>)",function=>"array_minus",include_by_default=>1,module=>"Array::Utils",seq=>22,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Scalar::difference",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Scalar",seq=>23,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Set::set_diff",fcall_template=>"Array::Set::set_diff(<set1>, <set2>)",function=>"set_diff",include_by_default=>1,module=>"Array::Set",seq=>24,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_diff",fcall_template=>"Array::Set::Naive::set_diff(<set1>, <set2>)",function=>"set_diff",include_by_default=>1,module=>"Array::Set::Naive",seq=>25,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Array::difference",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Array",seq=>26,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::AsObject::difference",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Array::AsObject",seq=>27,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Object::difference",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Object",seq=>28,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Tiny::difference",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Tiny",seq=>29,tags=>["op:diff"],type=>"perl_code"},{_name=>"List::Collection::subtract",code_template=>"[List::Collection::subtract(<set1>, <set2>)]",function=>"subtract",include_by_default=>1,module=>"List::Collection",seq=>30,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Utils::intersect",code_template=>"&Array::Utils::intersect(<set1>, <set2>)",function=>"intersect",include_by_default=>1,module=>"Array::Utils",seq=>31,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Scalar::intersection",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Scalar",seq=>32,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::Set::set_intersect",fcall_template=>"Array::Set::set_intersect(<set1>, <set2>)",function=>"set_intersect",include_by_default=>1,module=>"Array::Set",seq=>33,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_intersect",fcall_template=>"Array::Set::Naive::set_intersect(<set1>, <set2>)",function=>"set_intersect",include_by_default=>1,module=>"Array::Set::Naive",seq=>34,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Array::intersection",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Array",seq=>35,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::AsObject::intersection",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->intersection(\$s2, 1)",function=>"intersection",include_by_default=>1,module=>"Array::AsObject",seq=>36,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Object::intersection",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Object",seq=>37,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Tiny::intersection",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Tiny",seq=>38,tags=>["op:intersect"],type=>"perl_code"},{_name=>"List::Collection::intersect",code_template=>"[List::Collection::intersect(<set1>, <set2>)]",function=>"intersect",include_by_default=>1,module=>"List::Collection",seq=>39,tags=>["op:intersect"],type=>"perl_code"}],summary=>"Benchmark Perl set operation (union, intersection, diff, symmetric diff) modules"}},"func.bencher_version"=>undef,"func.code_startup"=>undef,"func.cpu_info"=>[{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>0,speed=>2475.429,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>1,speed=>2419.744,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>2,speed=>2474.523,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>3,speed=>2472.777,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>4,speed=>2472.466,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>5,speed=>2467.679,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>6,speed=>"2252.040",stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>7,speed=>2261.284,stepping=>3}],"func.elapsed_time"=>3.27770900726318,"func.module_startup"=>undef,"func.module_versions"=>{"Array::AsObject"=>1.02,"Array::Set"=>0.062,"Array::Set::Naive"=>0.001,"Array::Utils"=>0.5,"Benchmark::Dumb"=>0.111,"Devel::Platform::Info"=>"1.00","List::Collection"=>"0.0.4","List::MoreUtils"=>0.428,"List::MoreUtils::PP"=>0.428,"Set::Array"=>"0.30","Set::Object"=>"1.40","Set::Scalar"=>1.29,"Set::Tiny"=>0.04,"Sys::Info"=>0.7811,__PACKAGE__=>1.053,perl=>"v5.30.2"},"func.note"=>"Run by Pod::Weaver::Plugin::Bencher::Scenario","func.permute"=>["participant",[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"perl",["perl"]],"func.platform_info"=>{archname=>"x86_64",codename=>"tara",is32bit=>0,is64bit=>1,kernel=>"linux-5.3.0-68-generic",kname=>"Linux",kvers=>"5.3.0-68-generic",osflag=>"linux",oslabel=>"LinuxMint",osname=>"GNU/Linux",osvers=>19,source=>{"cat /etc/.issue"=>"","cat /etc/issue"=>"Linux Mint 19 Tara \\n \\l","lsb_release -a"=>"Distributor ID:\tLinuxMint\nDescription:\tLinux Mint 19 Tara\nRelease:\t19\nCodename:\ttara","uname -a"=>"Linux builder 5.3.0-68-generic #63-Ubuntu SMP Mon Sep 28 13:51:38 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux","uname -m"=>"x86_64","uname -o"=>"GNU/Linux","uname -r"=>"5.3.0-68-generic","uname -s"=>"Linux"}},"func.precision"=>0,"func.time_end"=>1621044770.66485,"func.time_factor"=>1000000,"func.time_start"=>1621044767.38715,"table.field_aligns"=>["left","number","number","number","number","number","number"],"table.field_formats"=>[undef,undef,undef,"percent","percent",undef,undef],"table.field_units"=>[undef,"/s","\x{3BC}s"],"table.fields"=>["participant","rate","time","pct_faster_vs_slowest","pct_slower_vs_fastest","errors","samples"]}],[200,"OK",[{errors=>1.3e-06,participant=>"List::Collection::union",pct_faster_vs_slowest=>0,pct_slower_vs_fastest=>283.135361947937,rate=>920,samples=>21,time=>1100},{errors=>4.8e-07,participant=>"Set::Scalar::union",pct_faster_vs_slowest=>1.24700222342294,pct_slower_vs_fastest=>125.450859276455,rate=>2070,samples=>20,time=>484},{errors=>4.3e-07,participant=>"Array::Set::Naive::set_union",pct_faster_vs_slowest=>2.10176696651832,pct_slower_vs_fastest=>90.6043548773987,rate=>2900,samples=>20,time=>350},{errors=>2.1e-07,participant=>"Array::AsObject::union",pct_faster_vs_slowest=>11.5375765382374,pct_slower_vs_fastest=>21.6627020845196,rate=>12000,samples=>20,time=>87},{errors=>1e-07,participant=>"Set::Object::union",pct_faster_vs_slowest=>14.1892195996772,pct_slower_vs_fastest=>17.7063831741543,rate=>14000,samples=>21,time=>72},{errors=>9.2e-08,participant=>"Set::Tiny::union",pct_faster_vs_slowest=>17.1102792662829,pct_slower_vs_fastest=>14.6891761728341,rate=>17000,samples=>27,time=>60},{errors=>5.2e-08,participant=>"Set::Array::union",pct_faster_vs_slowest=>22.6706270535248,pct_slower_vs_fastest=>11.0037108144808,rate=>22000,samples=>21,time=>46},{errors=>4e-08,participant=>"Array::Set::set_union",pct_faster_vs_slowest=>22.7641694263906,pct_slower_vs_fastest=>10.9564608739238,rate=>21900,samples=>20,time=>45.8},{errors=>0,participant=>"List::MoreUtils::PP::uniq",pct_faster_vs_slowest=>39.0617293848181,pct_slower_vs_fastest=>6.09243875167339,rate=>36848.1,samples=>20,time=>27.1384},{errors=>2.7e-08,participant=>"List::MoreUtils::XS::uniq",pct_faster_vs_slowest=>69.3425691061941,pct_slower_vs_fastest=>3.03930885036323,rate=>65000,samples=>20,time=>15},{errors=>1.7e-09,participant=>"Array::Utils::unique",pct_faster_vs_slowest=>283.135361947937,pct_slower_vs_fastest=>0,rate=>261000,samples=>20,time=>3.83}],{"func.bencher_args"=>{action=>"bench",note=>"Run by Pod::Weaver::Plugin::Bencher::Scenario",scenario=>{datasets=>[{args=>{set1=>[1,2,3,4,5,6,7,8,9,10],set2=>[2,3,4,5,6,7,8,9,10,11]},include_by_default=>1,name=>"num10",seq=>0},{args=>{set1=>[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],set2=>[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101]},include_by_default=>1,name=>"num100",seq=>1}],modules=>{"List::MoreUtils"=>{version=>0.407}},participants=>[{_name=>"Array::Utils::unique",code_template=>"&Array::Utils::unique(<set1>, <set2>)",function=>"unique",include_by_default=>1,module=>"Array::Utils",seq=>0,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Scalar::union",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Scalar",seq=>1,tags=>["op:union"],type=>"perl_code"},{_name=>"List::MoreUtils::PP::uniq",fcall_template=>"List::MoreUtils::PP::uniq(\@{<set1>}, \@{<set2>})",function=>"uniq",include_by_default=>1,module=>"List::MoreUtils::PP",seq=>2,tags=>["op:union"],type=>"perl_code"},{fcall_template=>"List::MoreUtils::uniq(\@{<set1>}, \@{<set2>})",function=>"uniq",include_by_default=>1,module=>"List::MoreUtils",name=>"List::MoreUtils::XS::uniq",seq=>3,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Set::set_union",fcall_template=>"Array::Set::set_union(<set1>, <set2>)",function=>"set_union",include_by_default=>1,module=>"Array::Set",seq=>4,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_union",fcall_template=>"Array::Set::Naive::set_union(<set1>, <set2>)",function=>"set_union",include_by_default=>1,module=>"Array::Set::Naive",seq=>5,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Array::union",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Array",seq=>6,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::AsObject::union",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->union(\$s2, 1)",function=>"union",include_by_default=>1,module=>"Array::AsObject",seq=>7,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Object::union",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Object",seq=>8,tags=>["op:union"],type=>"perl_code"},{_name=>"Set::Tiny::union",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->union(\$s2)",function=>"union",include_by_default=>1,module=>"Set::Tiny",seq=>9,tags=>["op:union"],type=>"perl_code"},{_name=>"List::Collection::union",code_template=>"[List::Collection::union(<set1>, <set2>)]",function=>"union",include_by_default=>1,module=>"List::Collection",seq=>10,tags=>["op:union"],type=>"perl_code"},{_name=>"Array::Utils::array_diff",code_template=>"&Array::Utils::array_diff(<set1>, <set2>)",function=>"array_diff",include_by_default=>1,module=>"Array::Utils",seq=>11,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Scalar::symmetric_difference",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Scalar",seq=>12,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"List::MoreUtils::PP::singleton",fcall_template=>"List::MoreUtils::PP::singleton(\@{<set1>}, \@{<set2>})",function=>"singleton",include_by_default=>1,module=>"List::MoreUtils::PP",seq=>13,tags=>["op:symdiff"],type=>"perl_code"},{fcall_template=>"List::MoreUtils::singleton(\@{<set1>}, \@{<set2>})",function=>"singleton",include_by_default=>1,module=>"List::MoreUtils",name=>"List::MoreUtils::XS::singleton",seq=>14,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Set::set_symdiff",fcall_template=>"Array::Set::set_symdiff(<set1>, <set2>)",function=>"set_symdiff",include_by_default=>1,module=>"Array::Set",seq=>15,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_symdiff",fcall_template=>"Array::Set::Naive::set_symdiff(<set1>, <set2>)",function=>"set_symdiff",include_by_default=>1,module=>"Array::Set::Naive",seq=>16,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Array::symmetric_difference",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Array",seq=>17,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::AsObject::symmetric_difference",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Array::AsObject",seq=>18,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Object::symmetric_difference",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Object",seq=>19,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Set::Tiny::symmetric_difference",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->symmetric_difference(\$s2)",function=>"symmetric_difference",include_by_default=>1,module=>"Set::Tiny",seq=>20,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"List::Collection::complement",code_template=>"[List::Collection::complement(<set1>, <set2>)]",function=>"complement",include_by_default=>1,module=>"List::Collection",seq=>21,tags=>["op:symdiff"],type=>"perl_code"},{_name=>"Array::Utils::array_minus",code_template=>"&Array::Utils::array_minus(<set1>, <set2>)",function=>"array_minus",include_by_default=>1,module=>"Array::Utils",seq=>22,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Scalar::difference",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Scalar",seq=>23,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Set::set_diff",fcall_template=>"Array::Set::set_diff(<set1>, <set2>)",function=>"set_diff",include_by_default=>1,module=>"Array::Set",seq=>24,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_diff",fcall_template=>"Array::Set::Naive::set_diff(<set1>, <set2>)",function=>"set_diff",include_by_default=>1,module=>"Array::Set::Naive",seq=>25,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Array::difference",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Array",seq=>26,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::AsObject::difference",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Array::AsObject",seq=>27,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Object::difference",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Object",seq=>28,tags=>["op:diff"],type=>"perl_code"},{_name=>"Set::Tiny::difference",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->difference(\$s2)",function=>"difference",include_by_default=>1,module=>"Set::Tiny",seq=>29,tags=>["op:diff"],type=>"perl_code"},{_name=>"List::Collection::subtract",code_template=>"[List::Collection::subtract(<set1>, <set2>)]",function=>"subtract",include_by_default=>1,module=>"List::Collection",seq=>30,tags=>["op:diff"],type=>"perl_code"},{_name=>"Array::Utils::intersect",code_template=>"&Array::Utils::intersect(<set1>, <set2>)",function=>"intersect",include_by_default=>1,module=>"Array::Utils",seq=>31,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Scalar::intersection",code_template=>"my \$s1 = Set::Scalar->new(\@{<set1>}); my \$s2 = Set::Scalar->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Scalar",seq=>32,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::Set::set_intersect",fcall_template=>"Array::Set::set_intersect(<set1>, <set2>)",function=>"set_intersect",include_by_default=>1,module=>"Array::Set",seq=>33,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::Set::Naive::set_intersect",fcall_template=>"Array::Set::Naive::set_intersect(<set1>, <set2>)",function=>"set_intersect",include_by_default=>1,module=>"Array::Set::Naive",seq=>34,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Array::intersection",code_template=>"my \$s1 = Set::Array->new(\@{<set1>}); my \$s2 = Set::Array->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Array",seq=>35,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Array::AsObject::intersection",code_template=>"my \$s1 = Array::AsObject->new(\@{<set1>}); my \$s2 = Array::AsObject->new(\@{<set2>}); \$s1->intersection(\$s2, 1)",function=>"intersection",include_by_default=>1,module=>"Array::AsObject",seq=>36,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Object::intersection",code_template=>"my \$s1 = Set::Object->new(\@{<set1>}); my \$s2 = Set::Object->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Object",seq=>37,tags=>["op:intersect"],type=>"perl_code"},{_name=>"Set::Tiny::intersection",code_template=>"my \$s1 = Set::Tiny->new(\@{<set1>}); my \$s2 = Set::Tiny->new(\@{<set2>}); \$s1->intersection(\$s2)",function=>"intersection",include_by_default=>1,module=>"Set::Tiny",seq=>38,tags=>["op:intersect"],type=>"perl_code"},{_name=>"List::Collection::intersect",code_template=>"[List::Collection::intersect(<set1>, <set2>)]",function=>"intersect",include_by_default=>1,module=>"List::Collection",seq=>39,tags=>["op:intersect"],type=>"perl_code"}],summary=>"Benchmark Perl set operation (union, intersection, diff, symmetric diff) modules"}},"func.bencher_version"=>undef,"func.code_startup"=>undef,"func.cpu_info"=>[{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>0,speed=>2475.429,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>1,speed=>2419.744,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>2,speed=>2474.523,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>3,speed=>2472.777,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>4,speed=>2472.466,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>5,speed=>2467.679,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>6,speed=>"2252.040",stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","xsaveopt","dtherm","ida","arat","pln","pts","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>7,speed=>2261.284,stepping=>3}],"func.elapsed_time"=>3.27770900726318,"func.module_startup"=>undef,"func.module_versions"=>{"Array::AsObject"=>1.02,"Array::Set"=>0.062,"Array::Set::Naive"=>0.001,"Array::Utils"=>0.5,"Benchmark::Dumb"=>0.111,"Devel::Platform::Info"=>"1.00","List::Collection"=>"0.0.4","List::MoreUtils"=>0.428,"List::MoreUtils::PP"=>0.428,"Set::Array"=>"0.30","Set::Object"=>"1.40","Set::Scalar"=>1.29,"Set::Tiny"=>0.04,"Sys::Info"=>0.7811,__PACKAGE__=>1.053,perl=>"v5.30.2"},"func.note"=>"Run by Pod::Weaver::Plugin::Bencher::Scenario","func.permute"=>["participant",[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"perl",["perl"]],"func.platform_info"=>{archname=>"x86_64",codename=>"tara",is32bit=>0,is64bit=>1,kernel=>"linux-5.3.0-68-generic",kname=>"Linux",kvers=>"5.3.0-68-generic",osflag=>"linux",oslabel=>"LinuxMint",osname=>"GNU/Linux",osvers=>19,source=>{"cat /etc/.issue"=>"","cat /etc/issue"=>"Linux Mint 19 Tara \\n \\l","lsb_release -a"=>"Distributor ID:\tLinuxMint\nDescription:\tLinux Mint 19 Tara\nRelease:\t19\nCodename:\ttara","uname -a"=>"Linux builder 5.3.0-68-generic #63-Ubuntu SMP Mon Sep 28 13:51:38 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux","uname -m"=>"x86_64","uname -o"=>"GNU/Linux","uname -r"=>"5.3.0-68-generic","uname -s"=>"Linux"}},"func.precision"=>0,"func.time_end"=>1621044770.66485,"func.time_factor"=>1000000,"func.time_start"=>1621044767.38715,"table.field_aligns"=>["left","number","number","number","number","number","number"],"table.field_formats"=>[undef,undef,undef,"percent","percent",undef,undef],"table.field_units"=>[undef,"/s","\x{3BC}s"],"table.fields"=>["participant","rate","time","pct_faster_vs_slowest","pct_slower_vs_fastest","errors","samples"]}]];

1;
# ABSTRACT: Benchmark Perl set operation (union, intersection, diff, symmetric diff) modules

=head1 DESCRIPTION

This module is automatically generated by Pod::Weaver::Plugin::Bencher::Scenario during distribution build.

A Bencher::ScenarioR::* module contains the raw result of sample benchmark and might be useful for some stuffs later.

