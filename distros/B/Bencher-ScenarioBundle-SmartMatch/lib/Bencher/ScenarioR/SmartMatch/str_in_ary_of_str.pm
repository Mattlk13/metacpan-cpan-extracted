## no critic
package Bencher::ScenarioR::SmartMatch::str_in_ary_of_str;

our $VERSION = 0.001; # VERSION

our $results = [[200,"OK",[{_name=>"dataset=1000-str-found-at-the-end participant=Switch::Right",_succinct_name=>"S:R 1000-str-found-at-the-end",dataset=>"1000-str-found-at-the-end",errors=>0.00014,participant=>"Switch::Right",pct_faster_vs_slowest=>0,pct_slower_vs_fastest=>377.874856486797,rate=>31,samples=>20,time=>33},{_name=>"dataset=1000-str-found-at-the-end participant=match::simple",_succinct_name=>"m:s 1000-str-found-at-the-end",dataset=>"1000-str-found-at-the-end",errors=>5.1e-06,participant=>"match::simple",pct_faster_vs_slowest=>0.0576923076923077,pct_slower_vs_fastest=>357.208955223881,rate=>32.1,samples=>21,time=>31.2},{_name=>"dataset=0-str participant=Switch::Right",_succinct_name=>"S:R 0-str",dataset=>"0-str",errors=>0.00047,participant=>"Switch::Right",pct_faster_vs_slowest=>0.1,pct_slower_vs_fastest=>343.43168771527,rate=>30,samples=>21,time=>30},{_name=>"dataset=10-str-found-at-the-end participant=Switch::Right",_succinct_name=>"S:R 10-str-found-at-the-end",dataset=>"10-str-found-at-the-end",errors=>0.00063,participant=>"Switch::Right",pct_faster_vs_slowest=>0.1,pct_slower_vs_fastest=>343.43168771527,rate=>30,samples=>20,time=>30},{_name=>"dataset=10-str-found-at-the-beginning participant=Switch::Right",_succinct_name=>"S:R 10-str-found-at-the-beginning",dataset=>"10-str-found-at-the-beginning",errors=>0.00037,participant=>"Switch::Right",pct_faster_vs_slowest=>0.1,pct_slower_vs_fastest=>343.43168771527,rate=>40,samples=>20,time=>30},{_name=>"dataset=1-str-found participant=Switch::Right",_succinct_name=>"S:R 1-str-found",dataset=>"1-str-found",errors=>1.4e-05,participant=>"Switch::Right",pct_faster_vs_slowest=>0.245283018867925,pct_slower_vs_fastest=>303.247990815155,rate=>37.7,samples=>23,time=>26.5},{_name=>"dataset=10-str-found-at-the-end participant=match::simple",_succinct_name=>"m:s 10-str-found-at-the-end",dataset=>"10-str-found-at-the-end",errors=>6.8e-08,participant=>"match::simple",pct_faster_vs_slowest=>80.0810810810811,pct_slower_vs_fastest=>3.67278989667049,rate=>2460,samples=>20,time=>0.407},{_name=>"dataset=10-str-found-at-the-beginning participant=match::simple",_succinct_name=>"m:s 10-str-found-at-the-beginning",dataset=>"10-str-found-at-the-beginning",errors=>3.9e-08,participant=>"match::simple",pct_faster_vs_slowest=>267.292682926829,pct_slower_vs_fastest=>0.412169919632606,rate=>8150,samples=>20,time=>0.123},{_name=>"dataset=1-str-found participant=match::simple",_succinct_name=>"m:s 1-str-found",dataset=>"1-str-found",errors=>6e-08,participant=>"match::simple",pct_faster_vs_slowest=>274,pct_slower_vs_fastest=>0.377726750861079,rate=>8310,samples=>21,time=>0.12},{_name=>"dataset=0-str participant=match::simple",_succinct_name=>"m:s 0-str",dataset=>"0-str",errors=>2.9e-08,participant=>"match::simple",pct_faster_vs_slowest=>377.874856486797,pct_slower_vs_fastest=>0,rate=>11500,samples=>20,time=>0.0871}],{"func.bencher_args"=>{action=>"bench",note=>"Run by Pod::Weaver::Plugin::Bencher::Scenario",scenario=>{datasets=>[{args=>{ary=>[],str=>"a"},include_by_default=>1,name=>"0-str",seq=>0},{args=>{ary=>["a"],str=>"a"},include_by_default=>1,name=>"1-str-found",seq=>1},{args=>{ary=>["a","b","c","d","e","f","g","h","i","j"],str=>"a"},include_by_default=>1,name=>"10-str-found-at-the-beginning",seq=>2},{args=>{ary=>["a","b","c","d","e","f","g","h","i","j"],str=>"j"},include_by_default=>1,name=>"10-str-found-at-the-end",seq=>3},{args=>{ary=>["aaa","aab","aac","aad","aae","aaf","aag","aah","aai","aaj","aak","aal","aam","aan","aao","aap","aaq","aar","aas","aat","aau","aav","aaw","aax","aay","aaz","aba","abb","abc","abd","abe","abf","abg","abh","abi","abj","abk","abl","abm","abn","abo","abp","abq","abr","abs","abt","abu","abv","abw","abx","aby","abz","aca","acb","acc","acd","ace","acf","acg","ach","aci","acj","ack","acl","acm","acn","aco","acp","acq","acr","acs","act","acu","acv","acw","acx","acy","acz","ada","adb","adc","add","ade","adf","adg","adh","adi","adj","adk","adl","adm","adn","ado","adp","adq","adr","ads","adt","adu","adv","adw","adx","ady","adz","aea","aeb","aec","aed","aee","aef","aeg","aeh","aei","aej","aek","ael","aem","aen","aeo","aep","aeq","aer","aes","aet","aeu","aev","aew","aex","aey","aez","afa","afb","afc","afd","afe","aff","afg","afh","afi","afj","afk","afl","afm","afn","afo","afp","afq","afr","afs","aft","afu","afv","afw","afx","afy","afz","aga","agb","agc","agd","age","agf","agg","agh","agi","agj","agk","agl","agm","agn","ago","agp","agq","agr","ags","agt","agu","agv","agw","agx","agy","agz","aha","ahb","ahc","ahd","ahe","ahf","ahg","ahh","ahi","ahj","ahk","ahl","ahm","ahn","aho","ahp","ahq","ahr","ahs","aht","ahu","ahv","ahw","ahx","ahy","ahz","aia","aib","aic","aid","aie","aif","aig","aih","aii","aij","aik","ail","aim","ain","aio","aip","aiq","air","ais","ait","aiu","aiv","aiw","aix","aiy","aiz","aja","ajb","ajc","ajd","aje","ajf","ajg","ajh","aji","ajj","ajk","ajl","ajm","ajn","ajo","ajp","ajq","ajr","ajs","ajt","aju","ajv","ajw","ajx","ajy","ajz","aka","akb","akc","akd","ake","akf","akg","akh","aki","akj","akk","akl","akm","akn","ako","akp","akq","akr","aks","akt","aku","akv","akw","akx","aky","akz","ala","alb","alc","ald","ale","alf","alg","alh","ali","alj","alk","all","alm","aln","alo","alp","alq","alr","als","alt","alu","alv","alw","alx","aly","alz","ama","amb","amc","amd","ame","amf","amg","amh","ami","amj","amk","aml","amm","amn","amo","amp","amq","amr","ams","amt","amu","amv","amw","amx","amy","amz","ana","anb","anc","and","ane","anf","ang","anh","ani","anj","ank","anl","anm","ann","ano","anp","anq","anr","ans","ant","anu","anv","anw","anx","any","anz","aoa","aob","aoc","aod","aoe","aof","aog","aoh","aoi","aoj","aok","aol","aom","aon","aoo","aop","aoq","aor","aos","aot","aou","aov","aow","aox","aoy","aoz","apa","apb","apc","apd","ape","apf","apg","aph","api","apj","apk","apl","apm","apn","apo","app","apq","apr","aps","apt","apu","apv","apw","apx","apy","apz","aqa","aqb","aqc","aqd","aqe","aqf","aqg","aqh","aqi","aqj","aqk","aql","aqm","aqn","aqo","aqp","aqq","aqr","aqs","aqt","aqu","aqv","aqw","aqx","aqy","aqz","ara","arb","arc","ard","are","arf","arg","arh","ari","arj","ark","arl","arm","arn","aro","arp","arq","arr","ars","art","aru","arv","arw","arx","ary","arz","asa","asb","asc","asd","ase","asf","asg","ash","asi","asj","ask","asl","asm","asn","aso","asp","asq","asr","ass","ast","asu","asv","asw","asx","asy","asz","ata","atb","atc","atd","ate","atf","atg","ath","ati","atj","atk","atl","atm","atn","ato","atp","atq","atr","ats","att","atu","atv","atw","atx","aty","atz","aua","aub","auc","aud","aue","auf","aug","auh","aui","auj","auk","aul","aum","aun","auo","aup","auq","aur","aus","aut","auu","auv","auw","aux","auy","auz","ava","avb","avc","avd","ave","avf","avg","avh","avi","avj","avk","avl","avm","avn","avo","avp","avq","avr","avs","avt","avu","avv","avw","avx","avy","avz","awa","awb","awc","awd","awe","awf","awg","awh","awi","awj","awk","awl","awm","awn","awo","awp","awq","awr","aws","awt","awu","awv","aww","awx","awy","awz","axa","axb","axc","axd","axe","axf","axg","axh","axi","axj","axk","axl","axm","axn","axo","axp","axq","axr","axs","axt","axu","axv","axw","axx","axy","axz","aya","ayb","ayc","ayd","aye","ayf","ayg","ayh","ayi","ayj","ayk","ayl","aym","ayn","ayo","ayp","ayq","ayr","ays","ayt","ayu","ayv","ayw","ayx","ayy","ayz","aza","azb","azc","azd","aze","azf","azg","azh","azi","azj","azk","azl","azm","azn","azo","azp","azq","azr","azs","azt","azu","azv","azw","azx","azy","azz","baa","bab","bac","bad","bae","baf","bag","bah","bai","baj","bak","bal","bam","ban","bao","bap","baq","bar","bas","bat","bau","bav","baw","bax","bay","baz","bba","bbb","bbc","bbd","bbe","bbf","bbg","bbh","bbi","bbj","bbk","bbl","bbm","bbn","bbo","bbp","bbq","bbr","bbs","bbt","bbu","bbv","bbw","bbx","bby","bbz","bca","bcb","bcc","bcd","bce","bcf","bcg","bch","bci","bcj","bck","bcl","bcm","bcn","bco","bcp","bcq","bcr","bcs","bct","bcu","bcv","bcw","bcx","bcy","bcz","bda","bdb","bdc","bdd","bde","bdf","bdg","bdh","bdi","bdj","bdk","bdl","bdm","bdn","bdo","bdp","bdq","bdr","bds","bdt","bdu","bdv","bdw","bdx","bdy","bdz","bea","beb","bec","bed","bee","bef","beg","beh","bei","bej","bek","bel","bem","ben","beo","bep","beq","ber","bes","bet","beu","bev","bew","bex","bey","bez","bfa","bfb","bfc","bfd","bfe","bff","bfg","bfh","bfi","bfj","bfk","bfl","bfm","bfn","bfo","bfp","bfq","bfr","bfs","bft","bfu","bfv","bfw","bfx","bfy","bfz","bga","bgb","bgc","bgd","bge","bgf","bgg","bgh","bgi","bgj","bgk","bgl","bgm","bgn","bgo","bgp","bgq","bgr","bgs","bgt","bgu","bgv","bgw","bgx","bgy","bgz","bha","bhb","bhc","bhd","bhe","bhf","bhg","bhh","bhi","bhj","bhk","bhl","bhm","bhn","bho","bhp","bhq","bhr","bhs","bht","bhu","bhv","bhw","bhx","bhy","bhz","bia","bib","bic","bid","bie","bif","big","bih","bii","bij","bik","bil","bim","bin","bio","bip","biq","bir","bis","bit","biu","biv","biw","bix","biy","biz","bja","bjb","bjc","bjd","bje","bjf","bjg","bjh","bji","bjj","bjk","bjl","bjm","bjn","bjo","bjp","bjq","bjr","bjs","bjt","bju","bjv","bjw","bjx","bjy","bjz","bka","bkb","bkc","bkd","bke","bkf","bkg","bkh","bki","bkj","bkk","bkl","bkm","bkn","bko","bkp","bkq","bkr","bks","bkt","bku","bkv","bkw","bkx","bky","bkz","bla","blb","blc","bld","ble","blf","blg","blh","bli","blj","blk","bll","blm","bln","blo","blp","blq","blr","bls","blt","blu","blv","blw","blx","bly","blz","bma","bmb","bmc","bmd","bme","bmf","bmg","bmh","bmi","bmj","bmk","bml"],str=>"bml"},include_by_default=>1,name=>"1000-str-found-at-the-end",seq=>4}],participants=>[{_name=>"match::simple",code_template=>"my \$str = <str>; my \$ary = <ary>; for (1..100) { match::simple::match(\$str, \$ary) } ",include_by_default=>1,module=>"match::simple",seq=>0,type=>"perl_code"},{_name=>"Switch::Right",code_template=>"my \$str = <str>; my \$ary = <ary>; for (1..100) { Switch::Right::smartmatch(\$str, \$ary) } ",include_by_default=>1,module=>"Switch::Right",seq=>1,type=>"perl_code"}],summary=>"Benchmark searching string in array-of-string using smartmatch: \$str ~~ \@ary_of_str"}},"func.bencher_version"=>undef,"func.code_startup"=>undef,"func.cpu_info"=>[{L2_cache=>{max_cache_size=>"3072 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","art","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","3dnowprefetch","cpuid_fault","epb","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","mpx","rdseed","adx","smap","clflushopt","intel_pt","xsaveopt","xsavec","xgetbv1","xsaves","dtherm","ida","arat","pln","pts","hwp","hwp_notify","hwp_act_window","hwp_epp","md_clear","flush_l1d","arch_capabilities"],manufacturer=>"GenuineIntel",model=>142,name=>"Intel(R) Core(TM) i5-7200U CPU \@ 2.50GHz",number_of_cores=>2,number_of_logical_processors=>4,processor_id=>0,speed=>2941.476,stepping=>9},{L2_cache=>{max_cache_size=>"3072 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","art","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","3dnowprefetch","cpuid_fault","epb","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","mpx","rdseed","adx","smap","clflushopt","intel_pt","xsaveopt","xsavec","xgetbv1","xsaves","dtherm","ida","arat","pln","pts","hwp","hwp_notify","hwp_act_window","hwp_epp","md_clear","flush_l1d","arch_capabilities"],manufacturer=>"GenuineIntel",model=>142,name=>"Intel(R) Core(TM) i5-7200U CPU \@ 2.50GHz",number_of_cores=>2,number_of_logical_processors=>4,processor_id=>1,speed=>2642.595,stepping=>9},{L2_cache=>{max_cache_size=>"3072 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","art","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","3dnowprefetch","cpuid_fault","epb","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","mpx","rdseed","adx","smap","clflushopt","intel_pt","xsaveopt","xsavec","xgetbv1","xsaves","dtherm","ida","arat","pln","pts","hwp","hwp_notify","hwp_act_window","hwp_epp","md_clear","flush_l1d","arch_capabilities"],manufacturer=>"GenuineIntel",model=>142,name=>"Intel(R) Core(TM) i5-7200U CPU \@ 2.50GHz",number_of_cores=>2,number_of_logical_processors=>4,processor_id=>2,speed=>2951.732,stepping=>9},{L2_cache=>{max_cache_size=>"3072 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","art","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","3dnowprefetch","cpuid_fault","epb","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","mpx","rdseed","adx","smap","clflushopt","intel_pt","xsaveopt","xsavec","xgetbv1","xsaves","dtherm","ida","arat","pln","pts","hwp","hwp_notify","hwp_act_window","hwp_epp","md_clear","flush_l1d","arch_capabilities"],manufacturer=>"GenuineIntel",model=>142,name=>"Intel(R) Core(TM) i5-7200U CPU \@ 2.50GHz",number_of_cores=>2,number_of_logical_processors=>4,processor_id=>3,speed=>2987.192,stepping=>9}],"func.elapsed_time"=>4.80964612960815,"func.module_startup"=>undef,"func.module_versions"=>{"Benchmark::Dumb"=>0.503,"Devel::Platform::Info"=>"1.00","Switch::Right"=>"0.000005","Sys::Info"=>0.7811,__PACKAGE__=>1.063,"match::simple"=>0.012,perl=>"v5.38.2"},"func.note"=>"Run by Pod::Weaver::Plugin::Bencher::Scenario","func.permute"=>["perl",["perl"],"participant",[0,1],"dataset",[0,1,2,3,4]],"func.platform_info"=>{archname=>"x86_64",codename=>"focal",is32bit=>0,is64bit=>1,kernel=>"linux-5.4.0-164-generic",kname=>"Linux",kvers=>"5.4.0-164-generic",osflag=>"linux",oslabel=>"Ubuntu",osname=>"GNU/Linux",osvers=>20.04,source=>{"cat /etc/.issue"=>"","cat /etc/issue"=>"Ubuntu 20.04.6 LTS \\n \\l","lsb_release -a"=>"LSB Version:\tcore-11.1.0ubuntu2-noarch:printing-11.1.0ubuntu2-noarch:security-11.1.0ubuntu2-noarch\nDistributor ID:\tUbuntu\nDescription:\tUbuntu 20.04.6 LTS\nRelease:\t20.04\nCodename:\tfocal","uname -a"=>"Linux u1-XPS-13-9360 5.4.0-164-generic #181-Ubuntu SMP Fri Sep 1 13:41:22 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux","uname -m"=>"x86_64","uname -o"=>"GNU/Linux","uname -r"=>"5.4.0-164-generic","uname -s"=>"Linux"}},"func.precision"=>0,"func.time_end"=>1719926772.56511,"func.time_factor"=>1,"func.time_start"=>1719926767.75546,"table.field_aligns"=>["left","left","number","number","number","number","number","number","number","number"],"table.field_formats"=>[undef,undef,undef,undef,"percent","percent","percent","percent",undef,undef],"table.field_units"=>[undef,undef,"/s","ms",undef,undef],"table.fields"=>["participant","dataset","rate","time","pct_faster_vs_slowest","pct_slower_vs_fastest","pct_faster_vs_slowest","pct_slower_vs_fastest","errors","samples"]}]];

1;
# ABSTRACT: Benchmark searching string in array-of-string using smartmatch: $str ~~ @ary_of_str

=head1 DESCRIPTION

This module is automatically generated by Pod::Weaver::Plugin::Bencher::Scenario during distribution build.

A Bencher::ScenarioR::* module contains the raw result of sample benchmark and might be useful for some stuffs later.

