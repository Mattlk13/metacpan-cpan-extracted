## no critic
package Bencher::ScenarioR::ParamsSah::Validate;

our $VERSION = 0.002; # VERSION

our $results = [[200,"OK",[{dataset=>"1,[1..100]",errors=>2.1e-07,p_tags=>"int_int[]",participant=>"Params::Sah-int_int[]",pct_faster_vs_slowest=>0,pct_slower_vs_fastest=>170.317295405128,rate=>16000,samples=>20,time=>64},{dataset=>"[(foobar)x100]",errors=>3.9e-07,p_tags=>"strwithlen[]",participant=>"Params::Sah-strwithlen[]",pct_faster_vs_slowest=>0.274200551357022,pct_slower_vs_fastest=>133.450809350754,rate=>20000,samples=>20,time=>50},{dataset=>"[(foobar)x100]",errors=>5.3e-08,p_tags=>"strwithlen[]",participant=>"Type::Params-strwithlen[]",pct_faster_vs_slowest=>0.906822731667055,pct_slower_vs_fastest=>88.8443743930789,rate=>30000,samples=>20,time=>33},{dataset=>"[(\"a\")x100]",errors=>2.7e-08,p_tags=>"str[]",participant=>"Params::Sah-str[]",pct_faster_vs_slowest=>1.85940843492168,pct_slower_vs_fastest=>58.913544813272,rate=>45000,samples=>20,time=>22},{dataset=>"1,[1..10]",errors=>2e-08,p_tags=>"int_int[]",participant=>"Params::Sah-int_int[]",pct_faster_vs_slowest=>5.80877527138121,pct_slower_vs_fastest=>24.1612497955709,rate=>110000,samples=>20,time=>9.4},{dataset=>"[(foobar)x10]",errors=>3e-07,p_tags=>"strwithlen[]",participant=>"Params::Sah-strwithlen[]",pct_faster_vs_slowest=>7.20270348634642,pct_slower_vs_fastest=>19.8854672962749,rate=>100000,samples=>29,time=>8},{dataset=>"[(\"a\")x100]",errors=>1.3e-08,p_tags=>"str[]",participant=>"Params::ValidationCompiler-str[]",pct_faster_vs_slowest=>7.85667733149374,pct_slower_vs_fastest=>18.3432919584792,rate=>140000,samples=>20,time=>7.2},{dataset=>"1,[1..100]",errors=>1.7e-08,p_tags=>"int_int[]",participant=>"Type::Params-int_int[]",pct_faster_vs_slowest=>8.31034752511126,pct_slower_vs_fastest=>17.4007412121903,rate=>150000,samples=>20,time=>6.9},{dataset=>"[(\"a\")x100]",errors=>9.8e-09,p_tags=>"str[]",participant=>"Type::Params-str[]",pct_faster_vs_slowest=>9.12170027694458,pct_slower_vs_fastest=>15.9257427821053,rate=>160000,samples=>21,time=>6.3},{dataset=>"[(foobar)x10]",errors=>1.4e-09,p_tags=>"strwithlen[]",participant=>"Type::Params-strwithlen[]",pct_faster_vs_slowest=>15.5187404698977,pct_slower_vs_fastest=>9.37108705214676,rate=>259000,samples=>29,time=>3.86},{dataset=>"1,[1..100]",errors=>2.3e-11,p_tags=>"int_int[]",participant=>"Params::ValidationCompiler-int_int[]",pct_faster_vs_slowest=>16.6682342228404,pct_slower_vs_fastest=>8.69634504752376,rate=>276980,samples=>20,time=>3.6104},{dataset=>"[(\"a\") x 10]",errors=>6.7e-09,p_tags=>"str[]",participant=>"Params::Sah-str[]",pct_faster_vs_slowest=>17.3657352239003,pct_slower_vs_fastest=>8.32809350219664,rate=>290000,samples=>20,time=>3.5},{dataset=>"1,[]",errors=>1.1e-07,p_tags=>"int_int[]",participant=>"Params::Sah-int_int[]",pct_faster_vs_slowest=>25.4454403408174,pct_slower_vs_fastest=>5.47814115391029,rate=>400000,samples=>24,time=>2},{dataset=>"1,[1..10]",errors=>6.7e-09,p_tags=>"int_int[]",participant=>"Type::Params-int_int[]",pct_faster_vs_slowest=>27.6624286456974,pct_slower_vs_fastest=>4.97706836091313,rate=>450000,samples=>20,time=>2.2},{dataset=>"1,[]",errors=>5e-09,p_tags=>"int_int[]",participant=>"Params::ValidationCompiler-int_int[]",pct_faster_vs_slowest=>37.713017254148,pct_slower_vs_fastest=>3.42531498592433,rate=>610000,samples=>20,time=>1.6},{dataset=>"1,[]",errors=>3.3e-09,p_tags=>"int_int[]",participant=>"Type::Params-int_int[]",pct_faster_vs_slowest=>38.6786215553884,pct_slower_vs_fastest=>3.31762215242237,rate=>620000,samples=>20,time=>1.6},{dataset=>"[]",errors=>2.3e-11,p_tags=>"str[]",participant=>"Params::Sah-str[]",pct_faster_vs_slowest=>52.0616605455636,pct_slower_vs_fastest=>2.22864557278639,rate=>831800,samples=>20,time=>1.202},{dataset=>"1,[1..10]",errors=>3.6e-10,p_tags=>"int_int[]",participant=>"Params::ValidationCompiler-int_int[]",pct_faster_vs_slowest=>55.1723697123927,pct_slower_vs_fastest=>2.04984988673769,rate=>881000,samples=>27,time=>1.14},{dataset=>"[(\"a\") x 10]",errors=>2.3e-11,p_tags=>"str[]",participant=>"Params::ValidationCompiler-str[]",pct_faster_vs_slowest=>62.60435595632,pct_slower_vs_fastest=>1.6934836903746,rate=>997100,samples=>24,time=>1.003},{dataset=>"[(\"a\") x 10]",errors=>3.7e-10,p_tags=>"str[]",participant=>"Type::Params-str[]",pct_faster_vs_slowest=>63.2335290894442,pct_slower_vs_fastest=>1.66710077795308,rate=>1010000,samples=>26,time=>0.993},{dataset=>"str-foobar",errors=>2.7e-08,p_tags=>"str",participant=>"Params::Sah-strwithlen",pct_faster_vs_slowest=>85.2875806767156,pct_slower_vs_fastest=>0.98542239869935,rate=>1000000,samples=>20,time=>0.7},{dataset=>1,errors=>2.1e-10,p_tags=>"int",participant=>"Params::ValidationCompiler-int",pct_faster_vs_slowest=>98.1860372583201,pct_slower_vs_fastest=>0.727231978821269,rate=>1550000,samples=>20,time=>0.643},{dataset=>1,errors=>2.1e-10,p_tags=>"int",participant=>"Type::Params-int",pct_faster_vs_slowest=>98.8810319840696,pct_slower_vs_fastest=>0.715213509532544,rate=>1570000,samples=>20,time=>0.639},{dataset=>"str-foobar",errors=>8.3e-10,p_tags=>"str",participant=>"Type::Params-strwithlen",pct_faster_vs_slowest=>110.70041475969,pct_slower_vs_fastest=>0.533721211095744,rate=>1800000,samples=>20,time=>0.57},{dataset=>1,errors=>2.3e-11,p_tags=>"int",participant=>"Params::Sah-int",pct_faster_vs_slowest=>120.964343840226,pct_slower_vs_fastest=>0.404650654535189,rate=>1912000,samples=>20,time=>0.523},{dataset=>"[]",errors=>6.3e-10,p_tags=>"str[]",participant=>"Params::ValidationCompiler-str[]",pct_faster_vs_slowest=>163.76440001644,pct_slower_vs_fastest=>0.0397713061075993,rate=>2600000,samples=>20,time=>0.39},{dataset=>"[]",errors=>1.6e-10,p_tags=>"str[]",participant=>"Type::Params-str[]",pct_faster_vs_slowest=>170.317295405128,pct_slower_vs_fastest=>0,rate=>2690000,samples=>36,time=>0.372}],{"func.bencher_args"=>{action=>"bench",note=>"Run by Pod::Weaver::Plugin::Bencher::Scenario",scenario=>{datasets=>[{args=>{args=>[1]},include_by_default=>1,include_participant_tags=>["int"],name=>1,seq=>0},{args=>{args=>[1,[]]},include_by_default=>1,include_participant_tags=>["int_int[]"],name=>"1,[]",seq=>1},{args=>{args=>[1,[1,2,3,4,5,6,7,8,9,10]]},include_by_default=>1,include_participant_tags=>["int_int[]"],name=>"1,[1..10]",seq=>2},{args=>{args=>[1,[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]]},include_by_default=>1,include_participant_tags=>["int_int[]"],name=>"1,[1..100]",seq=>3},{args=>{args=>[[]]},include_by_default=>1,include_participant_tags=>["str[]"],name=>"[]",seq=>4},{args=>{args=>[["a","a","a","a","a","a","a","a","a","a"]]},include_by_default=>1,include_participant_tags=>["str[]"],name=>"[(\"a\") x 10]",seq=>5},{args=>{args=>[["a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a"]]},include_by_default=>1,include_participant_tags=>["str[]"],name=>"[(\"a\")x100]",seq=>6},{args=>{args=>["foobar"]},include_by_default=>1,include_participant_tags=>["str"],name=>"str-foobar",seq=>7},{args=>{args=>[["foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar"]]},include_by_default=>1,include_participant_tags=>["strwithlen[]"],name=>"[(foobar)x10]",seq=>8},{args=>{args=>[["foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar"]]},include_by_default=>1,include_participant_tags=>["strwithlen[]"],name=>"[(foobar)x100]",seq=>9}],participants=>[{code_template=>"state \$validator = Params::Sah::gen_validator(\"int*\"); \$validator->(<args>)",include_by_default=>1,module=>"Params::Sah",name=>"Params::Sah-int",seq=>0,tags=>["int"],type=>"perl_code"},{code_template=>"use Type::Params qw(compile); use Types::Standard qw(Int); state \$validator = compile(Int); \$validator->(\@{<args>})",include_by_default=>1,module=>"Type::Params",name=>"Type::Params-int",seq=>1,tags=>["int"],type=>"perl_code"},{code_template=>"use Params::ValidationCompiler qw(validation_for); use Types::Standard qw(Int); state \$validator = validation_for(params => [{type=>Int}]); \$validator->(\@{<args>})",include_by_default=>1,module=>"Params::ValidationCompiler",name=>"Params::ValidationCompiler-int",seq=>2,tags=>["int"],type=>"perl_code"},{code_template=>"state \$validator = Params::Sah::gen_validator(\"int*\", [\"array*\",of=>\"int*\"]); \$validator->(<args>)",include_by_default=>1,module=>"Params::Sah",name=>"Params::Sah-int_int[]",seq=>3,tags=>["int_int[]"],type=>"perl_code"},{code_template=>"use Type::Params qw(compile); use Types::Standard qw(Int ArrayRef); state \$validator = compile(Int, ArrayRef[Int]); \$validator->(\@{<args>})",include_by_default=>1,module=>"Type::Params",name=>"Type::Params-int_int[]",seq=>4,tags=>["int_int[]"],type=>"perl_code"},{code_template=>"use Params::ValidationCompiler qw(validation_for); use Types::Standard qw(Int ArrayRef); state \$validator = validation_for(params => [{type=>Int},{type=>ArrayRef[Int]}]); \$validator->(\@{<args>})",include_by_default=>1,module=>"Params::ValidationCompiler",name=>"Params::ValidationCompiler-int_int[]",seq=>5,tags=>["int_int[]"],type=>"perl_code"},{code_template=>"state \$validator = Params::Sah::gen_validator([\"array*\",of=>\"str*\"]); \$validator->(<args>)",include_by_default=>1,module=>"Params::Sah",name=>"Params::Sah-str[]",seq=>6,tags=>["str[]"],type=>"perl_code"},{code_template=>"use Type::Params qw(compile); use Types::Standard qw(Str ArrayRef); state \$validator = compile(ArrayRef[Str]); \$validator->(\@{<args>})",include_by_default=>1,module=>"Type::Params",name=>"Type::Params-str[]",seq=>7,tags=>["str[]"],type=>"perl_code"},{code_template=>"use Params::ValidationCompiler qw(validation_for); use Types::Standard qw(Str ArrayRef); state \$validator = validation_for(params => [{type=>ArrayRef[Str]}]); \$validator->(\@{<args>})",include_by_default=>1,module=>"Params::ValidationCompiler",name=>"Params::ValidationCompiler-str[]",seq=>8,tags=>["str[]"],type=>"perl_code"},{code_template=>"state \$validator = Params::Sah::gen_validator([\"str*\",min_len=>4, max_len=>8]); \$validator->(<args>)",include_by_default=>1,module=>"Params::Sah",name=>"Params::Sah-strwithlen",seq=>9,tags=>["str"],type=>"perl_code"},{code_template=>"use Type::Params qw(compile); use Types::Standard qw(Str); state \$validator = compile(Str->where('length(\$_) >= 4 && length(\$_) <= 8')); \$validator->(\@{<args>})",include_by_default=>1,module=>"Type::Params",name=>"Type::Params-strwithlen",seq=>10,tags=>["str"],type=>"perl_code"},{code_template=>"state \$validator = Params::Sah::gen_validator(['array*', of=>[\"str*\",min_len=>4, max_len=>8]]); \$validator->(<args>)",include_by_default=>1,module=>"Params::Sah",name=>"Params::Sah-strwithlen[]",seq=>11,tags=>["strwithlen[]"],type=>"perl_code"},{code_template=>"use Type::Params qw(compile); use Types::Standard qw(Str ArrayRef); state \$validator = compile(ArrayRef[Str->where('length(\$_) >= 4 && length(\$_) <= 8')]); \$validator->(\@{<args>})",include_by_default=>1,module=>"Type::Params",name=>"Type::Params-strwithlen[]",seq=>12,tags=>["strwithlen[]"],type=>"perl_code"}],summary=>"Measure validation speed"}},"func.bencher_version"=>undef,"func.code_startup"=>undef,"func.cpu_info"=>[{L2_cache=>{max_cache_size=>"3072 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","art","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","3dnowprefetch","cpuid_fault","epb","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","mpx","rdseed","adx","smap","clflushopt","intel_pt","xsaveopt","xsavec","xgetbv1","xsaves","dtherm","ida","arat","pln","pts","hwp","hwp_notify","hwp_act_window","hwp_epp","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>142,name=>"Intel(R) Core(TM) i5-7200U CPU \@ 2.50GHz",number_of_cores=>2,number_of_logical_processors=>4,processor_id=>0,speed=>3100.156,stepping=>9},{L2_cache=>{max_cache_size=>"3072 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","art","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","3dnowprefetch","cpuid_fault","epb","invpcid_single","pti","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","mpx","rdseed","adx","smap","clflushopt","intel_pt","xsaveopt","xsavec","xgetbv1","xsaves","dtherm","ida","arat","pln","pts","hwp","hwp_notify","hwp_act_window","hwp_epp"],manufacturer=>"GenuineIntel",model=>142,name=>"Intel(R) Core(TM) i5-7200U CPU \@ 2.50GHz",number_of_cores=>2,number_of_logical_processors=>4,processor_id=>1,speed=>3099.921,stepping=>9},{L2_cache=>{max_cache_size=>"3072 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","art","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","3dnowprefetch","cpuid_fault","epb","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","mpx","rdseed","adx","smap","clflushopt","intel_pt","xsaveopt","xsavec","xgetbv1","xsaves","dtherm","ida","arat","pln","pts","hwp","hwp_notify","hwp_act_window","hwp_epp","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>142,name=>"Intel(R) Core(TM) i5-7200U CPU \@ 2.50GHz",number_of_cores=>2,number_of_logical_processors=>4,processor_id=>2,speed=>3100.255,stepping=>9},{L2_cache=>{max_cache_size=>"3072 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","art","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","tsc_deadline_timer","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","3dnowprefetch","cpuid_fault","epb","invpcid_single","pti","ssbd","ibrs","ibpb","stibp","tpr_shadow","vnmi","flexpriority","ept","vpid","ept_ad","fsgsbase","tsc_adjust","bmi1","avx2","smep","bmi2","erms","invpcid","mpx","rdseed","adx","smap","clflushopt","intel_pt","xsaveopt","xsavec","xgetbv1","xsaves","dtherm","ida","arat","pln","pts","hwp","hwp_notify","hwp_act_window","hwp_epp","md_clear","flush_l1d"],manufacturer=>"GenuineIntel",model=>142,name=>"Intel(R) Core(TM) i5-7200U CPU \@ 2.50GHz",number_of_cores=>2,number_of_logical_processors=>4,processor_id=>3,speed=>"3100.000",stepping=>9}],"func.elapsed_time"=>0.890448093414307,"func.module_startup"=>undef,"func.module_versions"=>{"Benchmark::Dumb"=>0.111,"Devel::Platform::Info"=>0.16,"Params::Sah"=>0.072,"Params::ValidationCompiler"=>"0.30","Sys::Info"=>0.7811,"Type::Params"=>1.004004,__PACKAGE__=>1.048,perl=>"v5.30.0"},"func.note"=>"Run by Pod::Weaver::Plugin::Bencher::Scenario","func.permute"=>["perl",["perl"],"participant",[0,1,2,3,4,5,6,7,8,9,10,11,12],"dataset",[0,1,2,3,4,5,6,7,8,9]],"func.platform_info"=>{archname=>"x86_64",codename=>"eoan",is32bit=>0,is64bit=>1,kernel=>"linux-5.3.0-46-generic",kname=>"Linux",kvers=>"5.3.0-46-generic",osflag=>"linux",oslabel=>"Ubuntu",osname=>"GNU/Linux",osvers=>"19.10",source=>{"cat /etc/.issue"=>"","cat /etc/issue"=>"Ubuntu 19.10 \\n \\l","lsb_release -a"=>"Distributor ID:\tUbuntu\nDescription:\tUbuntu 19.10\nRelease:\t19.10\nCodename:\teoan","uname -a"=>"Linux u1-XPS-13-9360 5.3.0-46-generic #38-Ubuntu SMP Fri Mar 27 17:37:05 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux","uname -m"=>"x86_64","uname -o"=>"GNU/Linux","uname -r"=>"5.3.0-46-generic","uname -s"=>"Linux"}},"func.precision"=>0,"func.time_end"=>1589108334.13343,"func.time_factor"=>1000000,"func.time_start"=>1589108333.24298,"table.field_aligns"=>["left","left","left","number","number","number","number","number","number"],"table.field_formats"=>[undef,undef,undef,undef,undef,"percent","percent",undef,undef],"table.field_units"=>[undef,undef,undef,"/s","\x{3BC}s"],"table.fields"=>["participant","dataset","p_tags","rate","time","pct_faster_vs_slowest","pct_slower_vs_fastest","errors","samples"]}]];

1;
# ABSTRACT: Measure validation speed

=head1 DESCRIPTION

This module is automatically generated by Pod::Weaver::Plugin::Bencher::Scenario during distribution build.

A Bencher::ScenarioR::* module contains the raw result of sample benchmark and might be useful for some stuffs later.

