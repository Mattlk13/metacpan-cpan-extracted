## no critic
package Bencher::ScenarioR::ParamsSah::Validate;

our $VERSION = 0.001; # VERSION

our $results = [[200,"OK",[{dataset=>"[(foobar)x100]",errors=>1.3e-08,p_tags=>"strwithlen[]",participant=>"Params::Sah-strwithlen[]",pct_faster_vs_slowest=>0,pct_slower_vs_fastest=>123.971686130896,rate=>26200,samples=>22,time=>38.1},{dataset=>"1,[1..100]",errors=>1.3e-08,p_tags=>"int_int[]",participant=>"Params::Sah-int_int[]",pct_faster_vs_slowest=>0.186727215832676,pct_slower_vs_fastest=>104.307845361251,rate=>31100,samples=>21,time=>32.1},{dataset=>"[(foobar)x100]",errors=>5.2e-08,p_tags=>"strwithlen[]",participant=>"Type::Params-strwithlen[]",pct_faster_vs_slowest=>0.349447064934712,pct_slower_vs_fastest=>91.6095505175982,rate=>35000,samples=>21,time=>28},{dataset=>"1,[1..100]",errors=>1.3e-08,p_tags=>"int_int[]",participant=>"Params::Sah(on_invalid-bool)-int_int[]",pct_faster_vs_slowest=>0.47387254081491,pct_slower_vs_fastest=>83.7913796275752,rate=>38700,samples=>20,time=>25.9},{dataset=>"[(\"a\")x100]",errors=>6.7e-09,p_tags=>"str[]",participant=>"Params::Sah-str[]",pct_faster_vs_slowest=>0.624601757382059,pct_slower_vs_fastest=>75.9245050751882,rate=>42600,samples=>20,time=>23.5},{dataset=>"[(\"a\")x100]",errors=>6.4e-09,p_tags=>"str[]",participant=>"Params::Sah(on_invalid-bool)-str[]",pct_faster_vs_slowest=>1.15117156135761,pct_slower_vs_fastest=>57.0947091230725,rate=>56400,samples=>22,time=>17.7},{dataset=>"[(foobar)x10]",errors=>0,p_tags=>"strwithlen[]",participant=>"Params::Sah-strwithlen[]",pct_faster_vs_slowest=>5.01580245602759,pct_slower_vs_fastest=>19.7739012449917,rate=>157842,samples=>20,time=>6.33545},{dataset=>"1,[1..10]",errors=>5.8e-12,p_tags=>"int_int[]",participant=>"Params::Sah-int_int[]",pct_faster_vs_slowest=>6.02243441978386,pct_slower_vs_fastest=>16.7960631115075,rate=>184250,samples=>26,time=>5.4273},{dataset=>"[(\"a\")x100]",errors=>0,p_tags=>"str[]",participant=>"Params::ValidationCompiler-str[]",pct_faster_vs_slowest=>6.67509709473059,pct_slower_vs_fastest=>15.2827498582,rate=>201379,samples=>30,time=>4.96577},{dataset=>"[(\"a\")x100]",errors=>0,p_tags=>"str[]",participant=>"Type::Params-str[]",pct_faster_vs_slowest=>6.68853785299347,pct_slower_vs_fastest=>15.2542850825972,rate=>201731,samples=>20,time=>4.95709},{dataset=>"[(\"a\") x 10]",errors=>6.7e-09,p_tags=>"str[]",participant=>"Params::Sah-str[]",pct_faster_vs_slowest=>7.89977973855592,pct_slower_vs_fastest=>13.0421100074521,rate=>230000,samples=>20,time=>4.3},{dataset=>"1,[1..10]",errors=>1.7e-09,p_tags=>"int_int[]",participant=>"Params::Sah(on_invalid-bool)-int_int[]",pct_faster_vs_slowest=>8.66487024633791,pct_slower_vs_fastest=>11.930508423354,rate=>254000,samples=>20,time=>3.94},{dataset=>"[(foobar)x10]",errors=>5.8e-12,p_tags=>"strwithlen[]",participant=>"Type::Params-strwithlen[]",pct_faster_vs_slowest=>10.7577286532481,pct_slower_vs_fastest=>9.62889694229946,rate=>308500,samples=>20,time=>3.2415},{dataset=>"1,[1..100]",errors=>2.7e-09,p_tags=>"int_int[]",participant=>"Params::ValidationCompiler-int_int[]",pct_faster_vs_slowest=>12.3250754160158,pct_slower_vs_fastest=>8.37868509026889,rate=>350000,samples=>31,time=>2.86},{dataset=>"[(\"a\") x 10]",errors=>4e-09,p_tags=>"str[]",participant=>"Params::Sah(on_invalid-bool)-str[]",pct_faster_vs_slowest=>12.3971497888741,pct_slower_vs_fastest=>8.32822936970377,rate=>350000,samples=>22,time=>2.8},{dataset=>"1,[1..100]",errors=>8.1e-10,p_tags=>"int_int[]",participant=>"Type::Params-int_int[]",pct_faster_vs_slowest=>12.6349920683863,pct_slower_vs_fastest=>8.16551219862104,rate=>358000,samples=>21,time=>2.8},{dataset=>"1,[]",errors=>2.5e-09,p_tags=>"int_int[]",participant=>"Params::Sah-int_int[]",pct_faster_vs_slowest=>15.8380630921544,pct_slower_vs_fastest=>6.42197516703248,rate=>440000,samples=>20,time=>2.3},{dataset=>"[]",errors=>3.3e-09,p_tags=>"str[]",participant=>"Params::Sah-str[]",pct_faster_vs_slowest=>19.0366140124593,pct_slower_vs_fastest=>5.23716592300402,rate=>530000,samples=>20,time=>1.9},{dataset=>"1,[]",errors=>5.7e-12,p_tags=>"int_int[]",participant=>"Params::Sah(on_invalid-bool)-int_int[]",pct_faster_vs_slowest=>27.7660930474069,pct_slower_vs_fastest=>3.34440943804711,rate=>754760,samples=>20,time=>1.3249},{dataset=>"[]",errors=>0,p_tags=>"str[]",participant=>"Params::Sah(on_invalid-bool)-str[]",pct_faster_vs_slowest=>37.2233516057344,pct_slower_vs_fastest=>2.26951146042743,rate=>1002900,samples=>20,time=>0.997107},{dataset=>"1,[1..10]",errors=>1.1e-09,p_tags=>"int_int[]",participant=>"Params::ValidationCompiler-int_int[]",pct_faster_vs_slowest=>37.7549207530041,pct_slower_vs_fastest=>2.22466627986096,rate=>1000000,samples=>26,time=>0.98},{dataset=>"1,[1..10]",errors=>4.3e-10,p_tags=>"int_int[]",participant=>"Type::Params-int_int[]",pct_faster_vs_slowest=>39.3146616564603,pct_slower_vs_fastest=>2.09990660955651,rate=>1060000,samples=>20,time=>0.945},{dataset=>"[(\"a\") x 10]",errors=>0,p_tags=>"str[]",participant=>"Params::ValidationCompiler-str[]",pct_faster_vs_slowest=>45.2183021490739,pct_slower_vs_fastest=>1.70394368291177,rate=>1212670,samples=>20,time=>0.824625},{dataset=>"[(\"a\") x 10]",errors=>5.5e-12,p_tags=>"str[]",participant=>"Type::Params-str[]",pct_faster_vs_slowest=>45.9838069188708,pct_slower_vs_fastest=>1.65988846639631,rate=>1232800,samples=>25,time=>0.81119},{dataset=>"1,[]",errors=>0,p_tags=>"int_int[]",participant=>"Params::ValidationCompiler-int_int[]",pct_faster_vs_slowest=>51.7037359848565,pct_slower_vs_fastest=>1.37121114462937,rate=>1382840,samples=>20,time=>0.723152},{dataset=>"1,[]",errors=>0,p_tags=>"int_int[]",participant=>"Type::Params-int_int[]",pct_faster_vs_slowest=>56.562930658446,pct_slower_vs_fastest=>1.17104453684655,rate=>1510330,samples=>24,time=>0.662106},{dataset=>1,errors=>6.3e-10,p_tags=>"int",participant=>"Type::Params-int",pct_faster_vs_slowest=>65.647275011129,pct_slower_vs_fastest=>0.875120717389086,rate=>1700000,samples=>20,time=>0.57},{dataset=>1,errors=>8.3e-10,p_tags=>"int",participant=>"Params::ValidationCompiler-int",pct_faster_vs_slowest=>69.143495153089,pct_slower_vs_fastest=>0.78165752730376,rate=>1800000,samples=>20,time=>0.54},{dataset=>"str-foobar",errors=>2.1e-10,p_tags=>"str",participant=>"Type::Params-strwithlen",pct_faster_vs_slowest=>78.8461552481011,pct_slower_vs_fastest=>0.565155964524266,rate=>2090000,samples=>20,time=>0.477},{dataset=>1,errors=>2.8e-11,p_tags=>"int",participant=>"Params::Sah-int",pct_faster_vs_slowest=>83.0978281212847,pct_slower_vs_fastest=>0.486027510135737,rate=>2207000,samples=>20,time=>0.4532},{dataset=>"str-foobar",errors=>7.5e-10,p_tags=>"str",participant=>"Params::Sah-strwithlen",pct_faster_vs_slowest=>86.257797653895,pct_slower_vs_fastest=>0.432212243387023,rate=>2300000,samples=>25,time=>0.44},{dataset=>"[]",errors=>1e-10,p_tags=>"str[]",participant=>"Params::ValidationCompiler-str[]",pct_faster_vs_slowest=>116.390203161681,pct_slower_vs_fastest=>0.0645836088959862,rate=>3080000,samples=>20,time=>0.325},{dataset=>"[]",errors=>3.1e-10,p_tags=>"str[]",participant=>"Type::Params-str[]",pct_faster_vs_slowest=>123.971686130896,pct_slower_vs_fastest=>0,rate=>3300000,samples=>20,time=>0.3}],{"func.bencher_args"=>{action=>"bench",note=>"Run by Pod::Weaver::Plugin::Bencher::Scenario",scenario=>{datasets=>[{args=>{args=>[1]},include_by_default=>1,include_participant_tags=>["int"],name=>1,seq=>0},{args=>{args=>[1,[]]},include_by_default=>1,include_participant_tags=>["int_int[]"],name=>"1,[]",seq=>1},{args=>{args=>[1,[1,2,3,4,5,6,7,8,9,10]]},include_by_default=>1,include_participant_tags=>["int_int[]"],name=>"1,[1..10]",seq=>2},{args=>{args=>[1,[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100]]},include_by_default=>1,include_participant_tags=>["int_int[]"],name=>"1,[1..100]",seq=>3},{args=>{args=>[[]]},include_by_default=>1,include_participant_tags=>["str[]"],name=>"[]",seq=>4},{args=>{args=>[["a","a","a","a","a","a","a","a","a","a"]]},include_by_default=>1,include_participant_tags=>["str[]"],name=>"[(\"a\") x 10]",seq=>5},{args=>{args=>[["a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a","a"]]},include_by_default=>1,include_participant_tags=>["str[]"],name=>"[(\"a\")x100]",seq=>6},{args=>{args=>["foobar"]},include_by_default=>1,include_participant_tags=>["str"],name=>"str-foobar",seq=>7},{args=>{args=>[["foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar"]]},include_by_default=>1,include_participant_tags=>["strwithlen[]"],name=>"[(foobar)x10]",seq=>8},{args=>{args=>[["foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar","foobar"]]},include_by_default=>1,include_participant_tags=>["strwithlen[]"],name=>"[(foobar)x100]",seq=>9}],participants=>[{code_template=>"state \$validator = Params::Sah::gen_validator(\"int*\"); \$validator->(<args>)",include_by_default=>1,module=>"Params::Sah",name=>"Params::Sah-int",seq=>0,tags=>["int"],type=>"perl_code"},{code_template=>"use Type::Params qw(compile); use Types::Standard qw(Int); state \$validator = compile(Int); \$validator->(\@{<args>})",include_by_default=>1,module=>"Type::Params",name=>"Type::Params-int",seq=>1,tags=>["int"],type=>"perl_code"},{code_template=>"use Params::ValidationCompiler qw(validation_for); use Types::Standard qw(Int); state \$validator = validation_for(params => [{type=>Int}]); \$validator->(\@{<args>})",include_by_default=>1,module=>"Params::ValidationCompiler",name=>"Params::ValidationCompiler-int",seq=>2,tags=>["int"],type=>"perl_code"},{code_template=>"state \$validator = Params::Sah::gen_validator(\"int*\", [\"array*\",of=>\"int*\"]); \$validator->(<args>)",include_by_default=>1,module=>"Params::Sah",name=>"Params::Sah-int_int[]",seq=>3,tags=>["int_int[]"],type=>"perl_code"},{code_template=>"state \$validator = Params::Sah::gen_validator({on_invalid=>\"bool\"}, \"int*\", [\"array*\",of=>\"int*\"]); \$validator->(<args>)",include_by_default=>1,module=>"Params::Sah",name=>"Params::Sah(on_invalid-bool)-int_int[]",seq=>4,tags=>["int_int[]"],type=>"perl_code"},{code_template=>"use Type::Params qw(compile); use Types::Standard qw(Int ArrayRef); state \$validator = compile(Int, ArrayRef[Int]); \$validator->(\@{<args>})",include_by_default=>1,module=>"Type::Params",name=>"Type::Params-int_int[]",seq=>5,tags=>["int_int[]"],type=>"perl_code"},{code_template=>"use Params::ValidationCompiler qw(validation_for); use Types::Standard qw(Int ArrayRef); state \$validator = validation_for(params => [{type=>Int},{type=>ArrayRef[Int]}]); \$validator->(\@{<args>})",include_by_default=>1,module=>"Params::ValidationCompiler",name=>"Params::ValidationCompiler-int_int[]",seq=>6,tags=>["int_int[]"],type=>"perl_code"},{code_template=>"state \$validator = Params::Sah::gen_validator([\"array*\",of=>\"str*\"]); \$validator->(<args>)",include_by_default=>1,module=>"Params::Sah",name=>"Params::Sah-str[]",seq=>7,tags=>["str[]"],type=>"perl_code"},{code_template=>"state \$validator = Params::Sah::gen_validator({on_invalid=>\"bool\"}, [\"array*\",of=>\"str*\"]); \$validator->(<args>)",include_by_default=>1,module=>"Params::Sah",name=>"Params::Sah(on_invalid-bool)-str[]",seq=>8,tags=>["str[]"],type=>"perl_code"},{code_template=>"use Type::Params qw(compile); use Types::Standard qw(Str ArrayRef); state \$validator = compile(ArrayRef[Str]); \$validator->(\@{<args>})",include_by_default=>1,module=>"Type::Params",name=>"Type::Params-str[]",seq=>9,tags=>["str[]"],type=>"perl_code"},{code_template=>"use Params::ValidationCompiler qw(validation_for); use Types::Standard qw(Str ArrayRef); state \$validator = validation_for(params => [{type=>ArrayRef[Str]}]); \$validator->(\@{<args>})",include_by_default=>1,module=>"Params::ValidationCompiler",name=>"Params::ValidationCompiler-str[]",seq=>10,tags=>["str[]"],type=>"perl_code"},{code_template=>"state \$validator = Params::Sah::gen_validator([\"str*\",min_len=>4, max_len=>8]); \$validator->(<args>)",include_by_default=>1,module=>"Params::Sah",name=>"Params::Sah-strwithlen",seq=>11,tags=>["str"],type=>"perl_code"},{code_template=>"use Type::Params qw(compile); use Types::Standard qw(Str); state \$validator = compile(Str->where('length(\$_) >= 4 && length(\$_) <= 8')); \$validator->(\@{<args>})",include_by_default=>1,module=>"Type::Params",name=>"Type::Params-strwithlen",seq=>12,tags=>["str"],type=>"perl_code"},{code_template=>"state \$validator = Params::Sah::gen_validator(['array*', of=>[\"str*\",min_len=>4, max_len=>8]]); \$validator->(<args>)",include_by_default=>1,module=>"Params::Sah",name=>"Params::Sah-strwithlen[]",seq=>13,tags=>["strwithlen[]"],type=>"perl_code"},{code_template=>"use Type::Params qw(compile); use Types::Standard qw(Str ArrayRef); state \$validator = compile(ArrayRef[Str->where('length(\$_) >= 4 && length(\$_) <= 8')]); \$validator->(\@{<args>})",include_by_default=>1,module=>"Type::Params",name=>"Type::Params-strwithlen[]",seq=>14,tags=>["strwithlen[]"],type=>"perl_code"}],summary=>"Measure validation speed"}},"func.bencher_version"=>undef,"func.code_startup"=>undef,"func.cpu_info"=>[{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","tpr_shadow","vnmi","flexpriority","ept","vpid","fsgsbase","tsc_adjust","bmi1","hle","avx2","smep","bmi2","erms","invpcid","rtm","xsaveopt","dtherm","ida","arat","pln","pts"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>0,speed=>2681.815,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","tpr_shadow","vnmi","flexpriority","ept","vpid","fsgsbase","tsc_adjust","bmi1","hle","avx2","smep","bmi2","erms","invpcid","rtm","xsaveopt","dtherm","ida","arat","pln","pts"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>1,speed=>2657.962,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","tpr_shadow","vnmi","flexpriority","ept","vpid","fsgsbase","tsc_adjust","bmi1","hle","avx2","smep","bmi2","erms","invpcid","rtm","xsaveopt","dtherm","ida","arat","pln","pts"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>2,speed=>2565.306,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","tpr_shadow","vnmi","flexpriority","ept","vpid","fsgsbase","tsc_adjust","bmi1","hle","avx2","smep","bmi2","erms","invpcid","rtm","xsaveopt","dtherm","ida","arat","pln","pts"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>3,speed=>2504.112,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","tpr_shadow","vnmi","flexpriority","ept","vpid","fsgsbase","tsc_adjust","bmi1","hle","avx2","smep","bmi2","erms","invpcid","rtm","xsaveopt","dtherm","ida","arat","pln","pts"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>4,speed=>"2330.740",stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","tpr_shadow","vnmi","flexpriority","ept","vpid","fsgsbase","tsc_adjust","bmi1","hle","avx2","smep","bmi2","erms","invpcid","rtm","xsaveopt","dtherm","ida","arat","pln","pts"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>5,speed=>"2514.980",stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","tpr_shadow","vnmi","flexpriority","ept","vpid","fsgsbase","tsc_adjust","bmi1","hle","avx2","smep","bmi2","erms","invpcid","rtm","xsaveopt","dtherm","ida","arat","pln","pts"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>6,speed=>2528.318,stepping=>3},{L2_cache=>{max_cache_size=>"8192 KB"},address_width=>64,architecture=>"AMD-64",bus_speed=>undef,data_width=>64,family=>6,flags=>["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","dts","acpi","mmx","fxsr","sse","sse2","ss","ht","tm","pbe","syscall","nx","pdpe1gb","rdtscp","lm","constant_tsc","arch_perfmon","pebs","bts","rep_good","nopl","xtopology","nonstop_tsc","cpuid","aperfmperf","pni","pclmulqdq","dtes64","monitor","ds_cpl","vmx","smx","est","tm2","ssse3","sdbg","fma","cx16","xtpr","pdcm","pcid","sse4_1","sse4_2","x2apic","movbe","popcnt","aes","xsave","avx","f16c","rdrand","lahf_lm","abm","cpuid_fault","invpcid_single","pti","tpr_shadow","vnmi","flexpriority","ept","vpid","fsgsbase","tsc_adjust","bmi1","hle","avx2","smep","bmi2","erms","invpcid","rtm","xsaveopt","dtherm","ida","arat","pln","pts"],manufacturer=>"GenuineIntel",model=>60,name=>"Intel(R) Core(TM) i7-4770 CPU \@ 3.40GHz",number_of_cores=>4,number_of_logical_processors=>8,processor_id=>7,speed=>2640.693,stepping=>3}],"func.elapsed_time"=>1.04818105697632,"func.module_startup"=>undef,"func.module_versions"=>{"Benchmark::Dumb"=>0.111,"Devel::Platform::Info"=>"1.00","Params::Sah"=>"0.070","Params::ValidationCompiler"=>"0.30","Sys::Info"=>0.7811,"Type::Params"=>1.010001,__PACKAGE__=>1.048,perl=>"v5.30.2"},"func.note"=>"Run by Pod::Weaver::Plugin::Bencher::Scenario","func.permute"=>["perl",["perl"],"participant",[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"dataset",[0,1,2,3,4,5,6,7,8,9]],"func.platform_info"=>{archname=>"x86_64",codename=>"tara",is32bit=>0,is64bit=>1,kernel=>"linux-4.15.0-91-generic",kname=>"Linux",kvers=>"4.15.0-91-generic",osflag=>"linux",oslabel=>"LinuxMint",osname=>"GNU/Linux",osvers=>19,source=>{"cat /etc/.issue"=>"","cat /etc/issue"=>"Linux Mint 19 Tara \\n \\l","lsb_release -a"=>"Distributor ID:\tLinuxMint\nDescription:\tLinux Mint 19 Tara\nRelease:\t19\nCodename:\ttara","uname -a"=>"Linux builder 4.15.0-91-generic #92-Ubuntu SMP Fri Feb 28 11:09:48 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux","uname -m"=>"x86_64","uname -o"=>"GNU/Linux","uname -r"=>"4.15.0-91-generic","uname -s"=>"Linux"}},"func.precision"=>0,"func.time_end"=>1588935434.17536,"func.time_factor"=>1000000,"func.time_start"=>1588935433.12718,"table.field_aligns"=>["left","left","left","number","number","number","number","number","number"],"table.field_formats"=>[undef,undef,undef,undef,undef,"percent","percent",undef,undef],"table.field_units"=>[undef,undef,undef,"/s","\x{3BC}s"],"table.fields"=>["participant","dataset","p_tags","rate","time","pct_faster_vs_slowest","pct_slower_vs_fastest","errors","samples"]}]];

1;
# ABSTRACT: Measure validation speed

=head1 DESCRIPTION

This module is automatically generated by Pod::Weaver::Plugin::Bencher::Scenario during distribution build.

A Bencher::ScenarioR::* module contains the raw result of sample benchmark and might be useful for some stuffs later.

