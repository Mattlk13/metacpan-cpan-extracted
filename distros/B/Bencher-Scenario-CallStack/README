NAME
    Bencher::Scenario::CallStack - Benchmark different methods to produce
    call stack

VERSION
    This document describes version 0.001 of Bencher::Scenario::CallStack
    (from Perl distribution Bencher-Scenario-CallStack), released on
    2019-04-14.

SYNOPSIS
    To run benchmark with default option:

     % bencher -m CallStack

    To run module startup overhead benchmark:

     % bencher --module-startup -m CallStack

    For more options (dump scenario, list/include/exclude/add participants,
    list/include/exclude/add datasets, etc), see bencher or run "bencher
    --help".

DESCRIPTION
    Packaging a benchmark script as a Bencher scenario makes it convenient
    to include/exclude/add participants/datasets (either via CLI or Perl
    code), send the result to a central repository, among others . See
    Bencher and bencher (CLI) for more details.

BENCHMARKED MODULES
    Version numbers shown below are the versions used when running the
    sample benchmark.

    Devel::Caller::Util 0.042

    Carp 1.42

BENCHMARK PARTICIPANTS
    *   Devel::Caller::Util::callers (perl_code)

        Function call template:

         Devel::Caller::Util::callers()

    *   Devel::Caller::Util::callers with-args (perl_code)

        Function call template:

         Devel::Caller::Util::callers(0, 1)

    *   Carp::ret_backtrace (perl_code)

        Function call template:

         Carp::ret_backtrace()

SAMPLE BENCHMARK RESULTS
    Run on: perl: *v5.26.1*, CPU: *Intel(R) Core(TM) M-5Y71 CPU @ 1.20GHz (2
    cores)*, OS: *GNU/Linux LinuxMint version 18.3*, OS kernel: *Linux
    version 4.10.0-38-generic*.

    Benchmark with default options ("bencher -m CallStack"):

     #table1#
     +----------------------------------------+-----------+-----------+------------+---------+---------+
     | participant                            | rate (/s) | time (Î¼s) | vs_slowest |  errors | samples |
     +----------------------------------------+-----------+-----------+------------+---------+---------+
     | Carp::ret_backtrace                    |      2150 |       465 |        1   | 4.6e-07 |      22 |
     | Devel::Caller::Util::callers with-args |     18000 |        55 |        8.5 |   1e-07 |      22 |
     | Devel::Caller::Util::callers           |     25700 |        39 |       11.9 | 1.3e-08 |      20 |
     +----------------------------------------+-----------+-----------+------------+---------+---------+

    Benchmark module startup overhead ("bencher -m CallStack
    --module-startup"):

     #table2#
     +---------------------+-----------+------------------------+------------+---------+---------+
     | participant         | time (ms) | mod_overhead_time (ms) | vs_slowest |  errors | samples |
     +---------------------+-----------+------------------------+------------+---------+---------+
     | Carp                |       9   |                    4.1 |        1   | 1.2e-05 |      20 |
     | Devel::Caller::Util |       7.2 |                    2.3 |        1.2 | 1.5e-05 |      20 |
     | perl -e1 (baseline) |       4.9 |                    0   |        1.8 | 1.6e-05 |      22 |
     +---------------------+-----------+------------------------+------------+---------+---------+

    To display as an interactive HTML table on a browser, you can add option
    "--format html+datatables".

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/Bencher-Scenario-CallStack>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-Bencher-Scenario-CallStack>.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=Bencher-Scenario-Call
    Stack>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

AUTHOR
    perlancar <perlancar@cpan.org>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2019 by perlancar@cpan.org.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

