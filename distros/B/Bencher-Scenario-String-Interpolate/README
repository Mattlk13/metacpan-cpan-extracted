NAME
    Bencher::Scenario::String::Interpolate - Benchmark string interpolation

VERSION
    This document describes version 0.002 of
    Bencher::Scenario::String::Interpolate (from Perl distribution
    Bencher-Scenario-String-Interpolate), released on 2023-01-18.

SYNOPSIS
    To run benchmark with default option:

     % bencher -m String::Interpolate

    To run module startup overhead benchmark:

     % bencher --module-startup -m String::Interpolate

    For more options (dump scenario, list/include/exclude/add participants,
    list/include/exclude/add datasets, etc), see bencher or run "bencher
    --help".

DESCRIPTION
    Packaging a benchmark script as a Bencher scenario makes it convenient
    to include/exclude/add participants/datasets (either via CLI or Perl
    code), send the result to a central repository, among others . See
    Bencher and bencher (CLI) for more details.

BENCHMARKED MODULES
    Version numbers shown below are the versions used when running the
    sample benchmark.

    String::Interpolate 0.33

BENCHMARK PARTICIPANTS
    *   String::Interpolate::interpolate (perl_code)

        Function call template:

         String::Interpolate::interpolate(<string>)

    *   eval (perl_code)

        Code template:

         eval q("<string:raw>")

BENCHMARK DATASETS
    *   $main::foo $main::bar

SAMPLE BENCHMARK RESULTS
    Run on: perl: *v5.34.0*, CPU: *Intel(R) Core(TM) i5-7200U CPU @ 2.50GHz
    (2 cores)*, OS: *GNU/Linux Ubuntu version 20.04*, OS kernel: *Linux
    version 5.4.0-91-generic*.

    Benchmark with default options ("bencher -m String::Interpolate"):

     #table1#
     +----------------------------------+-----------+-----------+-----------------------+-----------------------+---------+---------+
     | participant                      | rate (/s) | time (Î¼s) | pct_faster_vs_slowest | pct_slower_vs_fastest |  errors | samples |
     +----------------------------------+-----------+-----------+-----------------------+-----------------------+---------+---------+
     | eval                             |    130000 |      7.4  |                 0.00% |                67.37% | 2.7e-08 |      20 |
     | String::Interpolate::interpolate |    226000 |      4.43 |                67.37% |                 0.00% | 1.7e-09 |      20 |
     +----------------------------------+-----------+-----------+-----------------------+-----------------------+---------+---------+

    Formatted as Benchmark.pm result:

                Rate    e  SI:i 
      e     130000/s   --  -40% 
      SI:i  226000/s  67%    -- 
 
     Legends:
       SI:i: participant=String::Interpolate::interpolate
       e: participant=eval

    Benchmark module startup overhead ("bencher -m String::Interpolate
    --module-startup"):

     #table2#
     +---------------------+-----------+-------------------+-----------------------+-----------------------+---------+---------+
     | participant         | time (ms) | mod_overhead_time | pct_faster_vs_slowest | pct_slower_vs_fastest |  errors | samples |
     +---------------------+-----------+-------------------+-----------------------+-----------------------+---------+---------+
     | String::Interpolate |        16 |                10 |                 0.00% |               159.05% | 8.9e-05 |      20 |
     | perl -e1 (baseline) |         6 |                 0 |               159.05% |                 0.00% | 2.1e-05 |      20 |
     +---------------------+-----------+-------------------+-----------------------+-----------------------+---------+---------+

    Formatted as Benchmark.pm result:

                              Rate   S:I  perl -e1 (baseline) 
      S:I                   62.5/s    --                 -62% 
      perl -e1 (baseline)  166.7/s  166%                   -- 
 
     Legends:
       S:I: mod_overhead_time=10 participant=String::Interpolate
       perl -e1 (baseline): mod_overhead_time=0 participant=perl -e1 (baseline)

    To display as an interactive HTML table on a browser, you can add option
    "--format html+datatables".

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/Bencher-Scenario-String-Interpolate>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-Bencher-Scenario-String-Interpolate>.

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR,
    Pod::Weaver::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla- and/or Pod::Weaver plugins. Any additional steps
    required beyond that are considered a bug and can be reported to me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2023, 2019 by perlancar
    <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=Bencher-Scenario-Stri
    ng-Interpolate>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

