## This file generated by InlineX::C2XS (version 0.26) using Inline::C (version 0.79_001)
package List::Uniqnum;
use warnings;
use strict;

require Exporter;
*import = \&Exporter::import;
require DynaLoader;

our $VERSION = '0.06';
$VERSION = eval $VERSION;
DynaLoader::bootstrap List::Uniqnum $VERSION;

@List::Uniqnum::EXPORT = ();
@List::Uniqnum::EXPORT_OK = qw(
    uniqnum 
    );

%List::Uniqnum::EXPORT_TAGS = (all => [qw(
    uniqnum 
    )]);

sub dl_load_flags {0} # Prevent DynaLoader from complaining and croaking

1;

__END__

=head1 NAME

List::Uniqnum - a rendition of List::Util::uniqnum minus the bugs.


=head1 SYNOPSIS

  Heavily plagiarize the uniqnum() function from List::Util, but make
  some changes to (hopefully) remove the bugs and make it portable.

   use List::Uniqnum qw(uniqnum);
   my @numbers = (1, 1.0, sqrt 2, 1.5, 2, 3);

   # Populate @unique with all unique values in @numbers
   # ie set @unique to (1, sqrt 2, 1.5, 2, 3)
   my @unique = uniqnum(@numbers); # list context

   # Set $count to the number of unique valuesin @numbers
   # ie set $count to 5.
   my $count  = uniqnum(@numbers); # scalar context

=head1 TODO

   Fix for perls built using Microsoft Compilers.


=head1 LICENSE

   This program is free software; you may redistribute it and/or
   modify it under the same terms as Perl itself.
   Copyright 2020 Sisyphus

=head1 AUTHOR

   Sisyphus <sisyphus at(@) cpan dot (.) org>

=cut
