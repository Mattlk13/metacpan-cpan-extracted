=encoding utf8

=head1 NAME

Locale::CLDR::Locales::Ky - Package for language Kyrgyz

=cut

package Locale::CLDR::Locales::Ky;
# This file auto generated from Data\common\main\ky.xml
#	on Fri 17 Jan 12:03:31 pm GMT

use strict;
use warnings;
use version;

our $VERSION = version->declare('v0.46.0');

use v5.12.0;
use mro 'c3';
use utf8;
use feature 'unicode_strings';
use Types::Standard qw( Str Int HashRef ArrayRef CodeRef RegexpRef );
use Moo;

extends('Locale::CLDR::Locales::Root');
has 'valid_algorithmic_formats' => (
    is => 'ro',
    isa => ArrayRef,
    init_arg => undef,
    default => sub {[ 'spellout-numbering-year','spellout-numbering','spellout-cardinal','spellout-cardinal-verbose','spellout-ordinal','digits-ordinal' ]},
);

has 'algorithmic_number_format_data' => (
    is => 'ro',
    isa => HashRef,
    init_arg => undef,
    default => sub {
        use bigfloat;
        return {
		'and' => {
			'private' => {
				'0' => {
					base_value => q(0),
					divisor => q(1),
					rule => q(' жана =%spellout-cardinal-verbose=),
				},
				'100' => {
					base_value => q(100),
					divisor => q(100),
					rule => q(' =%spellout-cardinal-verbose=),
				},
				'max' => {
					base_value => q(100),
					divisor => q(100),
					rule => q(' =%spellout-cardinal-verbose=),
				},
			},
		},
		'commas' => {
			'private' => {
				'0' => {
					base_value => q(0),
					divisor => q(1),
					rule => q(' жана =%spellout-cardinal-verbose=),
				},
				'100' => {
					base_value => q(100),
					divisor => q(100),
					rule => q(, =%spellout-cardinal-verbose=),
				},
				'1000' => {
					base_value => q(1000),
					divisor => q(1000),
					rule => q(, ←%spellout-cardinal-verbose← миң[→%%commas→]),
				},
				'1000000' => {
					base_value => q(1000000),
					divisor => q(1000000),
					rule => q(, =%spellout-cardinal-verbose=),
				},
				'max' => {
					base_value => q(1000000),
					divisor => q(1000000),
					rule => q(, =%spellout-cardinal-verbose=),
				},
			},
		},
		'digits-ordinal' => {
			'public' => {
				'-x' => {
					divisor => q(1),
					rule => q(−→→),
				},
				'0' => {
					base_value => q(0),
					divisor => q(1),
					rule => q(=#,##0==%%digits-ordinal-indicator=),
				},
				'max' => {
					base_value => q(0),
					divisor => q(1),
					rule => q(=#,##0==%%digits-ordinal-indicator=),
				},
			},
		},
		'digits-ordinal-indicator' => {
			'private' => {
				'0' => {
					base_value => q(0),
					divisor => q(1),
					rule => q(''инчи),
				},
				'max' => {
					base_value => q(0),
					divisor => q(1),
					rule => q(''инчи),
				},
			},
		},
		'inci' => {
			'private' => {
				'0' => {
					base_value => q(0),
					divisor => q(1),
					rule => q(инчи),
				},
				'1' => {
					base_value => q(1),
					divisor => q(1),
					rule => q(' =%spellout-ordinal=),
				},
				'max' => {
					base_value => q(1),
					divisor => q(1),
					rule => q(' =%spellout-ordinal=),
				},
			},
		},
		'ingci' => {
			'private' => {
				'0' => {
					base_value => q(0),
					divisor => q(1),
					rule => q(иңчи),
				},
				'1' => {
					base_value => q(1),
					divisor => q(1),
					rule => q(' =%spellout-ordinal=),
				},
				'max' => {
					base_value => q(1),
					divisor => q(1),
					rule => q(' =%spellout-ordinal=),
				},
			},
		},
		'ncu' => {
			'private' => {
				'0' => {
					base_value => q(0),
					divisor => q(1),
					rule => q(нчы),
				},
				'1' => {
					base_value => q(1),
					divisor => q(1),
					rule => q(' =%spellout-ordinal=),
				},
				'max' => {
					base_value => q(1),
					divisor => q(1),
					rule => q(' =%spellout-ordinal=),
				},
			},
		},
		'ncy' => {
			'private' => {
				'0' => {
					base_value => q(0),
					divisor => q(1),
					rule => q(нчү),
				},
				'1' => {
					base_value => q(1),
					divisor => q(1),
					rule => q(' =%spellout-ordinal=),
				},
				'max' => {
					base_value => q(1),
					divisor => q(1),
					rule => q(' =%spellout-ordinal=),
				},
			},
		},
		'spellout-cardinal' => {
			'public' => {
				'-x' => {
					divisor => q(1),
					rule => q(минус →→),
				},
				'0' => {
					base_value => q(0),
					divisor => q(1),
					rule => q(нөл),
				},
				'x.x' => {
					divisor => q(1),
					rule => q(←← бүтүн →%%z-spellout-fraction→),
				},
				'1' => {
					base_value => q(1),
					divisor => q(1),
					rule => q(бир),
				},
				'2' => {
					base_value => q(2),
					divisor => q(1),
					rule => q(эки),
				},
				'3' => {
					base_value => q(3),
					divisor => q(1),
					rule => q(үч),
				},
				'4' => {
					base_value => q(4),
					divisor => q(1),
					rule => q(төрт),
				},
				'5' => {
					base_value => q(5),
					divisor => q(1),
					rule => q(беш),
				},
				'6' => {
					base_value => q(6),
					divisor => q(1),
					rule => q(алты),
				},
				'7' => {
					base_value => q(7),
					divisor => q(1),
					rule => q(жети),
				},
				'8' => {
					base_value => q(8),
					divisor => q(1),
					rule => q(сегиз),
				},
				'9' => {
					base_value => q(9),
					divisor => q(1),
					rule => q(тогуз),
				},
				'10' => {
					base_value => q(10),
					divisor => q(10),
					rule => q(он[ →→]),
				},
				'20' => {
					base_value => q(20),
					divisor => q(10),
					rule => q(жыйырма[ →→]),
				},
				'30' => {
					base_value => q(30),
					divisor => q(10),
					rule => q(отуз[ →→]),
				},
				'40' => {
					base_value => q(40),
					divisor => q(10),
					rule => q(кырк[ →→]),
				},
				'50' => {
					base_value => q(50),
					divisor => q(10),
					rule => q(элүү[ →→]),
				},
				'60' => {
					base_value => q(60),
					divisor => q(10),
					rule => q(алтымыш[ →→]),
				},
				'70' => {
					base_value => q(70),
					divisor => q(10),
					rule => q(жетимиш[ →→]),
				},
				'80' => {
					base_value => q(80),
					divisor => q(10),
					rule => q(сексен[ →→]),
				},
				'90' => {
					base_value => q(90),
					divisor => q(10),
					rule => q(токсон[ →→]),
				},
				'100' => {
					base_value => q(100),
					divisor => q(100),
					rule => q(жүз),
				},
				'101' => {
					base_value => q(101),
					divisor => q(100),
					rule => q(←← жүз[ →→]),
				},
				'200' => {
					base_value => q(200),
					divisor => q(100),
					rule => q(←← жүз[ →→]),
				},
				'1000' => {
					base_value => q(1000),
					divisor => q(1000),
					rule => q(миң),
				},
				'1001' => {
					base_value => q(1001),
					divisor => q(1000),
					rule => q(←← миң[ →→]),
				},
				'2000' => {
					base_value => q(2000),
					divisor => q(1000),
					rule => q(←← миң[ →→]),
				},
				'1000000' => {
					base_value => q(1000000),
					divisor => q(1000000),
					rule => q(миллион),
				},
				'1000001' => {
					base_value => q(1000001),
					divisor => q(1000000),
					rule => q(←← миллион[ →→]),
				},
				'2000000' => {
					base_value => q(2000000),
					divisor => q(1000000),
					rule => q(←← миллион[ →→]),
				},
				'1000000000' => {
					base_value => q(1000000000),
					divisor => q(1000000000),
					rule => q(миллиард),
				},
				'1000000001' => {
					base_value => q(1000000001),
					divisor => q(1000000000),
					rule => q(←← миллиард[ →→]),
				},
				'2000000000' => {
					base_value => q(2000000000),
					divisor => q(1000000000),
					rule => q(←← миллиард[ →→]),
				},
				'1000000000000' => {
					base_value => q(1000000000000),
					divisor => q(1000000000000),
					rule => q(триллион),
				},
				'1000000000001' => {
					base_value => q(1000000000001),
					divisor => q(1000000000000),
					rule => q(←← триллион[ →→]),
				},
				'2000000000000' => {
					base_value => q(2000000000000),
					divisor => q(1000000000000),
					rule => q(←← триллион[ →→]),
				},
				'1000000000000000' => {
					base_value => q(1000000000000000),
					divisor => q(1000000000000000),
					rule => q(квадриллион),
				},
				'1000000000000001' => {
					base_value => q(1000000000000001),
					divisor => q(1000000000000000),
					rule => q(←← квадриллион[ →→]),
				},
				'2000000000000000' => {
					base_value => q(2000000000000000),
					divisor => q(1000000000000000),
					rule => q(←← квадриллион[ →→]),
				},
				'1000000000000000000' => {
					base_value => q(1000000000000000000),
					divisor => q(1000000000000000000),
					rule => q(=#,##0=),
				},
				'max' => {
					base_value => q(1000000000000000000),
					divisor => q(1000000000000000000),
					rule => q(=#,##0=),
				},
			},
		},
		'spellout-cardinal-verbose' => {
			'public' => {
				'-x' => {
					divisor => q(1),
					rule => q(минус →→),
				},
				'0' => {
					base_value => q(0),
					divisor => q(1),
					rule => q(=%spellout-cardinal=),
				},
				'x.x' => {
					divisor => q(1),
					rule => q(←← бүтүн →%%z-spellout-fraction→),
				},
				'100' => {
					base_value => q(100),
					divisor => q(100),
					rule => q(жүз),
				},
				'101' => {
					base_value => q(101),
					divisor => q(100),
					rule => q(←← жүз[→%%and→]),
				},
				'200' => {
					base_value => q(200),
					divisor => q(100),
					rule => q(←← жүз[→%%and→]),
				},
				'1000' => {
					base_value => q(1000),
					divisor => q(1000),
					rule => q(миң),
				},
				'1001' => {
					base_value => q(1001),
					divisor => q(1000),
					rule => q(←← миң[→%%and→]),
				},
				'2000' => {
					base_value => q(2000),
					divisor => q(1000),
					rule => q(←← миң[→%%and→]),
				},
				'100000' => {
					base_value => q(100000),
					divisor => q(100000),
					rule => q(←← миң[→%%commas→]),
				},
				'1000000' => {
					base_value => q(1000000),
					divisor => q(1000000),
					rule => q(миллион),
				},
				'1000001' => {
					base_value => q(1000001),
					divisor => q(1000000),
					rule => q(←← миллион[→%%commas→]),
				},
				'2000000' => {
					base_value => q(2000000),
					divisor => q(1000000),
					rule => q(←← миллион[→%%commas→]),
				},
				'1000000000' => {
					base_value => q(1000000000),
					divisor => q(1000000000),
					rule => q(миллиард),
				},
				'1000000001' => {
					base_value => q(1000000001),
					divisor => q(1000000000),
					rule => q(←← миллиард[→%%commas→]),
				},
				'2000000000' => {
					base_value => q(2000000000),
					divisor => q(1000000000),
					rule => q(←← миллиард[→%%commas→]),
				},
				'1000000000000' => {
					base_value => q(1000000000000),
					divisor => q(1000000000000),
					rule => q(триллион),
				},
				'1000000000001' => {
					base_value => q(1000000000001),
					divisor => q(1000000000000),
					rule => q(←← триллион[→%%commas→]),
				},
				'2000000000000' => {
					base_value => q(2000000000000),
					divisor => q(1000000000000),
					rule => q(←← триллион[→%%commas→]),
				},
				'1000000000000000' => {
					base_value => q(1000000000000000),
					divisor => q(1000000000000000),
					rule => q(квадриллион),
				},
				'1000000000000001' => {
					base_value => q(1000000000000001),
					divisor => q(1000000000000000),
					rule => q(←← квадриллион[→%%commas→]),
				},
				'2000000000000000' => {
					base_value => q(2000000000000000),
					divisor => q(1000000000000000),
					rule => q(←← квадриллион[→%%commas→]),
				},
				'1000000000000000000' => {
					base_value => q(1000000000000000000),
					divisor => q(1000000000000000000),
					rule => q(=#,##0=),
				},
				'max' => {
					base_value => q(1000000000000000000),
					divisor => q(1000000000000000000),
					rule => q(=#,##0=),
				},
			},
		},
		'spellout-numbering' => {
			'public' => {
				'0' => {
					base_value => q(0),
					divisor => q(1),
					rule => q(=%spellout-cardinal=),
				},
				'max' => {
					base_value => q(0),
					divisor => q(1),
					rule => q(=%spellout-cardinal=),
				},
			},
		},
		'spellout-numbering-year' => {
			'public' => {
				'0' => {
					base_value => q(0),
					divisor => q(1),
					rule => q(=%spellout-numbering=),
				},
				'x.x' => {
					divisor => q(1),
					rule => q(=0.0=),
				},
				'max' => {
					divisor => q(1),
					rule => q(=0.0=),
				},
			},
		},
		'spellout-ordinal' => {
			'public' => {
				'-x' => {
					divisor => q(1),
					rule => q(минус →→),
				},
				'0' => {
					base_value => q(0),
					divisor => q(1),
					rule => q(нөлүнчү),
				},
				'x.x' => {
					divisor => q(1),
					rule => q(=#,##0.#=),
				},
				'1' => {
					base_value => q(1),
					divisor => q(1),
					rule => q(биринчи),
				},
				'2' => {
					base_value => q(2),
					divisor => q(1),
					rule => q(экинчи),
				},
				'3' => {
					base_value => q(3),
					divisor => q(1),
					rule => q(үчүнчү),
				},
				'4' => {
					base_value => q(4),
					divisor => q(1),
					rule => q(төртүнчү),
				},
				'5' => {
					base_value => q(5),
					divisor => q(1),
					rule => q(бешинчи),
				},
				'6' => {
					base_value => q(6),
					divisor => q(1),
					rule => q(алтынчы),
				},
				'7' => {
					base_value => q(7),
					divisor => q(1),
					rule => q(жетинчи),
				},
				'8' => {
					base_value => q(8),
					divisor => q(1),
					rule => q(сегизинчи),
				},
				'9' => {
					base_value => q(9),
					divisor => q(1),
					rule => q(тогузунчу),
				},
				'10' => {
					base_value => q(10),
					divisor => q(10),
					rule => q(он→%%yncy→),
				},
				'20' => {
					base_value => q(20),
					divisor => q(10),
					rule => q(жыйырма→%%ncu→),
				},
				'30' => {
					base_value => q(30),
					divisor => q(10),
					rule => q(отуз→%%yncy→),
				},
				'40' => {
					base_value => q(40),
					divisor => q(10),
					rule => q(кырк→%%uncu→),
				},
				'50' => {
					base_value => q(50),
					divisor => q(10),
					rule => q(элүү→%%ncy→),
				},
				'60' => {
					base_value => q(60),
					divisor => q(10),
					rule => q(алтымыш→%%uncu→),
				},
				'70' => {
					base_value => q(70),
					divisor => q(10),
					rule => q(жетимиш→%%inci→),
				},
				'80' => {
					base_value => q(80),
					divisor => q(10),
					rule => q(сексен→%%inci→),
				},
				'90' => {
					base_value => q(90),
					divisor => q(10),
					rule => q(токсон→%%yncy→),
				},
				'100' => {
					base_value => q(100),
					divisor => q(100),
					rule => q(жүзүнчү),
				},
				'101' => {
					base_value => q(101),
					divisor => q(100),
					rule => q(←%spellout-numbering← жүз→%%yncy2→),
				},
				'200' => {
					base_value => q(200),
					divisor => q(100),
					rule => q(←%spellout-numbering← жүз→%%yncy2→),
				},
				'1000' => {
					base_value => q(1000),
					divisor => q(1000),
					rule => q(миңиңчи),
				},
				'1001' => {
					base_value => q(1001),
					divisor => q(1000),
					rule => q(←%spellout-numbering← миң→%%ingci→),
				},
				'2000' => {
					base_value => q(2000),
					divisor => q(1000),
					rule => q(←%spellout-numbering← миң→%%ingci→),
				},
				'1000000' => {
					base_value => q(1000000),
					divisor => q(1000000),
					rule => q(миллионунчу),
				},
				'1000001' => {
					base_value => q(1000001),
					divisor => q(1000000),
					rule => q(←%spellout-numbering← миллион→%%yncy→),
				},
				'2000000' => {
					base_value => q(2000000),
					divisor => q(1000000),
					rule => q(←%spellout-numbering← миллион→%%yncy→),
				},
				'1000000000' => {
					base_value => q(1000000000),
					divisor => q(1000000000),
					rule => q(миллиардынчы),
				},
				'1000000001' => {
					base_value => q(1000000001),
					divisor => q(1000000000),
					rule => q(←%spellout-numbering← миллиард→%%uncu→),
				},
				'2000000000' => {
					base_value => q(2000000000),
					divisor => q(1000000000),
					rule => q(←%spellout-numbering← миллиард→%%uncu→),
				},
				'1000000000000' => {
					base_value => q(1000000000000),
					divisor => q(1000000000000),
					rule => q(триллионунчу),
				},
				'1000000000001' => {
					base_value => q(1000000000001),
					divisor => q(1000000000000),
					rule => q(←%spellout-numbering← триллион→%%yncy→),
				},
				'2000000000000' => {
					base_value => q(2000000000000),
					divisor => q(1000000000000),
					rule => q(←%spellout-numbering← триллион→%%yncy→),
				},
				'1000000000000000' => {
					base_value => q(1000000000000000),
					divisor => q(1000000000000000),
					rule => q(квадриллионунчу),
				},
				'1000000000000001' => {
					base_value => q(1000000000000001),
					divisor => q(1000000000000000),
					rule => q(←%spellout-numbering← квадриллион→%%yncy→),
				},
				'2000000000000000' => {
					base_value => q(2000000000000000),
					divisor => q(1000000000000000),
					rule => q(←%spellout-numbering← квадриллион→%%yncy→),
				},
				'1000000000000000000' => {
					base_value => q(1000000000000000000),
					divisor => q(1000000000000000000),
					rule => q(=#,##0='inci),
				},
				'max' => {
					base_value => q(1000000000000000000),
					divisor => q(1000000000000000000),
					rule => q(=#,##0='inci),
				},
			},
		},
		'uncu' => {
			'private' => {
				'0' => {
					base_value => q(0),
					divisor => q(1),
					rule => q(ынчы),
				},
				'1' => {
					base_value => q(1),
					divisor => q(1),
					rule => q(' =%spellout-ordinal=),
				},
				'max' => {
					base_value => q(1),
					divisor => q(1),
					rule => q(' =%spellout-ordinal=),
				},
			},
		},
		'yncy' => {
			'private' => {
				'0' => {
					base_value => q(0),
					divisor => q(1),
					rule => q(унчу),
				},
				'1' => {
					base_value => q(1),
					divisor => q(1),
					rule => q(' =%spellout-ordinal=),
				},
				'max' => {
					base_value => q(1),
					divisor => q(1),
					rule => q(' =%spellout-ordinal=),
				},
			},
		},
		'yncy2' => {
			'private' => {
				'0' => {
					base_value => q(0),
					divisor => q(1),
					rule => q(үнчү),
				},
				'1' => {
					base_value => q(1),
					divisor => q(1),
					rule => q(' =%spellout-ordinal=),
				},
				'max' => {
					base_value => q(1),
					divisor => q(1),
					rule => q(' =%spellout-ordinal=),
				},
			},
		},
		'z-spellout-fraction' => {
			'private' => {
				'10' => {
					base_value => q(10),
					divisor => q(10),
					rule => q(ондон ←%spellout-numbering←),
				},
				'100' => {
					base_value => q(100),
					divisor => q(100),
					rule => q(жүздөн ←%spellout-numbering←),
				},
				'1000' => {
					base_value => q(1000),
					divisor => q(1000),
					rule => q(миңден ←%spellout-numbering←),
				},
				'10000' => {
					base_value => q(10000),
					divisor => q(10000),
					rule => q(он миңден ←%spellout-numbering←),
				},
				'100000' => {
					base_value => q(100000),
					divisor => q(100000),
					rule => q(жүз миңден ←%spellout-numbering←),
				},
				'1000000' => {
					base_value => q(1000000),
					divisor => q(1000000),
					rule => q(миллиондон ←%spellout-numbering←),
				},
				'10000000' => {
					base_value => q(10000000),
					divisor => q(10000000),
					rule => q(он миллиондон ←%spellout-numbering←),
				},
				'100000000' => {
					base_value => q(100000000),
					divisor => q(100000000),
					rule => q(жүз миллиондон ←%spellout-numbering←),
				},
				'1000000000' => {
					base_value => q(1000000000),
					divisor => q(1000000000),
					rule => q(миллиарддан ←%spellout-numbering←),
				},
				'10000000000' => {
					base_value => q(10000000000),
					divisor => q(10000000000),
					rule => q(он миллиарддан ←%spellout-numbering←),
				},
				'100000000000' => {
					base_value => q(100000000000),
					divisor => q(100000000000),
					rule => q(жүз миллиарддан ←%spellout-numbering←),
				},
				'1000000000000' => {
					base_value => q(1000000000000),
					divisor => q(1000000000000),
					rule => q(0* ←#,##0←←),
				},
				'max' => {
					base_value => q(1000000000000),
					divisor => q(1000000000000),
					rule => q(0* ←#,##0←←),
				},
			},
		},
    } },
);

has 'display_name_language' => (
	is			=> 'ro',
	isa			=> CodeRef,
	init_arg	=> undef,
	default		=> sub {
		 sub {
			 my %languages = (
				'aa' => 'афарча',
 				'ab' => 'абхазча',
 				'ace' => 'ачехче',
 				'ada' => 'адаңмече',
 				'ady' => 'адыгейче',
 				'af' => 'африкаанча',
 				'agq' => 'агемче',
 				'ain' => 'айнуча',
 				'ak' => 'аканча',
 				'ale' => 'алеутча',
 				'alt' => 'түштүк алтайча',
 				'am' => 'амхарча',
 				'an' => 'арагончо',
 				'ann' => 'оболочо (Нигерия)',
 				'anp' => 'ангикача',
 				'ar' => 'арабча',
 				'ar_001' => 'азыркы адабий араб тилинде',
 				'arn' => 'мапучече',
 				'arp' => 'арапахочо',
 				'ars' => 'арабча (нежди диалекти)',
 				'as' => 'ассамча',
 				'asa' => 'асуча',
 				'ast' => 'астурийче',
 				'atj' => 'атикамекче',
 				'av' => 'аварикче',
 				'awa' => 'авадхиче',
 				'ay' => 'аймарача',
 				'az' => 'азербайжанча',
 				'az@alt=short' => 'азерче',
 				'ba' => 'башкырча',
 				'ban' => 'баличе',
 				'bas' => 'басаача',
 				'be' => 'беларусча',
 				'bem' => 'бембача',
 				'bez' => 'бенача',
 				'bg' => 'болгарча',
 				'bgc' => 'харьянвиче',
 				'bgn' => 'чыгыш балучиче',
 				'bho' => 'бхожпуриче',
 				'bi' => 'бисламача',
 				'bin' => 'биниче',
 				'bla' => 'сиксикача',
 				'blo' => 'анииче',
 				'bm' => 'бамбарача',
 				'bn' => 'бангладешче',
 				'bo' => 'тибетче',
 				'br' => 'бретончо',
 				'brx' => 'бодочо',
 				'bs' => 'боснийче',
 				'bug' => 'бугийче',
 				'byn' => 'блинче',
 				'ca' => 'каталончо',
 				'cay' => 'каюгиче',
 				'ccp' => 'чакма',
 				'ce' => 'чеченче',
 				'ceb' => 'себуанча',
 				'cgg' => 'чигача',
 				'ch' => 'чаморрочо',
 				'chk' => 'чуукиче',
 				'chm' => 'мариче',
 				'cho' => 'чокточо',
 				'chp' => 'чипевайанча',
 				'chr' => 'черокиче',
 				'chy' => 'шайеннче',
 				'ckb' => 'борбордук курдча',
 				'clc' => 'чилкотинче (британдык колумбиядагы аймак)',
 				'co' => 'корсиканча',
 				'crg' => 'мичифче (индей тили)',
 				'crj' => 'түштүк-чыгыш криче (индей тили)',
 				'crk' => 'өрөөндүк криче (индей тили)',
 				'crl' => 'чыгыш криче (индей тилдери)',
 				'crm' => 'муус криче (индей тили)',
 				'crr' => 'каролиналык алгонкинче',
 				'crs' => 'сеселва креол французча',
 				'cs' => 'чехче',
 				'csw' => 'суампи криче (индей тили)',
 				'cu' => 'чиркөө славянча',
 				'cv' => 'чувашча',
 				'cy' => 'уелшче',
 				'da' => 'датча',
 				'dak' => 'дакотача',
 				'dar' => 'даргинче',
 				'dav' => 'таитача',
 				'de' => 'немисче',
 				'de_CH' => 'адабий немисче (Швейцария)',
 				'dgr' => 'догрибче',
 				'dje' => 'зармача',
 				'doi' => 'догриче',
 				'dsb' => 'төмөнкү сорбианча',
 				'dua' => 'дуалача',
 				'dv' => 'дивехиче',
 				'dyo' => 'жола-фониче',
 				'dz' => 'жонгуча',
 				'dzg' => 'дазагача',
 				'ebu' => 'эмбуча',
 				'ee' => 'эбече',
 				'efi' => 'эфикче',
 				'eka' => 'экажукча',
 				'el' => 'грекче',
 				'en' => 'англисче',
 				'en_US' => 'англисче (Америка Кошмо Штаттары)',
 				'en_US@alt=short' => 'англисче (АКШ)',
 				'eo' => 'эсперанто',
 				'es' => 'испанча',
 				'es_ES' => 'испанча (Европа)',
 				'et' => 'эстончо',
 				'eu' => 'баскча',
 				'ewo' => 'эвондочо',
 				'fa' => 'фарсча',
 				'fa_AF' => 'дари',
 				'ff' => 'фулача',
 				'fi' => 'финче',
 				'fil' => 'филипинче',
 				'fj' => 'фижиче',
 				'fo' => 'фарерче',
 				'fon' => 'фончо',
 				'fr' => 'французча',
 				'frc' => 'французча (кажун диалектиси)',
 				'frr' => 'түндүк фризче (евразиялык тилдер)',
 				'fur' => 'фриулча',
 				'fy' => 'батыш фризче',
 				'ga' => 'ирландча',
 				'gaa' => 'гача',
 				'gag' => 'гагаузча',
 				'gan' => 'Гань Кытайча',
 				'gd' => 'шотладиялык гелча',
 				'gez' => 'гиизче',
 				'gil' => 'гилбертче',
 				'gl' => 'галисияча',
 				'gn' => 'гуараниче',
 				'gor' => 'горонталочо',
 				'gsw' => 'немисче (Швейцария)',
 				'gu' => 'гужаратча',
 				'guz' => 'гусиче',
 				'gv' => 'мэнксыча',
 				'gwi' => 'гвичинче',
 				'ha' => 'хаусача',
 				'hai' => 'хайдача',
 				'hak' => 'Хакка кытайча',
 				'haw' => 'гавайча',
 				'hax' => 'хайдача (индей тили)',
 				'he' => 'ивритче',
 				'hi' => 'хиндиче',
 				'hi_Latn@alt=variant' => 'хинглиш (англис тили + хинди)',
 				'hil' => 'хилигайнончо',
 				'hmn' => 'хмонгчо',
 				'hr' => 'хорватча',
 				'hsb' => 'жогорку сорбианча',
 				'hsn' => 'Сянь Кытайча',
 				'ht' => 'гаитиче',
 				'hu' => 'венгерче',
 				'hup' => 'хупача',
 				'hur' => 'халкомелемче (индей тили)',
 				'hy' => 'армянча',
 				'hz' => 'герерочо',
 				'ia' => 'интерлингва',
 				'iba' => 'ибанча',
 				'ibb' => 'ибибиочо',
 				'id' => 'индонезияча',
 				'ie' => 'интерлинг',
 				'ig' => 'игбочо',
 				'ii' => 'сычуань йиче',
 				'ikt' => 'инуктитутча (Канада)',
 				'ilo' => 'илокочо',
 				'inh' => 'ингушча',
 				'io' => 'идочо',
 				'is' => 'исландча',
 				'it' => 'италиянча',
 				'iu' => 'инуктитутча',
 				'ja' => 'жапончо',
 				'jbo' => 'ложбанча',
 				'jgo' => 'нгомбача',
 				'jmc' => 'мачамече',
 				'jv' => 'жаванизче',
 				'ka' => 'грузинче',
 				'kab' => 'кабылча',
 				'kac' => 'кахинче',
 				'kaj' => 'джуча',
 				'kam' => 'камбача',
 				'kbd' => 'кабардинче',
 				'kcg' => 'тяпча',
 				'kde' => 'макондече',
 				'kea' => 'кабувердиче',
 				'kfo' => 'корочо',
 				'kgp' => 'кайнгангча (индей тили)',
 				'kha' => 'хасиче',
 				'khq' => 'койра чиниче',
 				'ki' => 'кикуйиче',
 				'kj' => 'куаньямача',
 				'kk' => 'казакча',
 				'kkj' => 'какочо',
 				'kl' => 'калаалисутча',
 				'kln' => 'каленжиче',
 				'km' => 'кмерче',
 				'kmb' => 'кимбундуча',
 				'kn' => 'каннадача',
 				'ko' => 'корейче',
 				'koi' => 'коми-пермякча',
 				'kok' => 'конканиче',
 				'kpe' => 'кпеллече',
 				'kr' => 'кануриче',
 				'krc' => 'карачай-балкарча',
 				'krl' => 'карелче',
 				'kru' => 'курухча',
 				'ks' => 'кашмирче',
 				'ksb' => 'шамабалача',
 				'ksf' => 'бафияча',
 				'ksh' => 'колоньяча',
 				'ku' => 'курдча',
 				'kum' => 'кумыкча',
 				'kv' => 'комиче',
 				'kw' => 'корнишче',
 				'kwk' => 'кваквалача (индей тили)',
 				'kxv' => 'куви',
 				'ky' => 'кыргызча',
 				'la' => 'латынча',
 				'lad' => 'ладиночо',
 				'lag' => 'лангиче',
 				'lb' => 'люксембургча',
 				'lez' => 'лезгинче',
 				'lg' => 'гандача',
 				'li' => 'лимбургиче',
 				'lij' => 'лигурча',
 				'lil' => 'лиллуэтче (индей тили)',
 				'lkt' => 'лакотача',
 				'lmo' => 'ломбардча',
 				'ln' => 'лингалача',
 				'lo' => 'лаочо',
 				'lou' => 'луизиана креолчо',
 				'loz' => 'лозиче',
 				'lrc' => 'түндүк луриче',
 				'lsm' => 'саамиача (Уганда, Кения)',
 				'lt' => 'литовчо',
 				'lu' => 'луба-катангача',
 				'lua' => 'луба-лулуача',
 				'lun' => 'лундача',
 				'luo' => 'луочо',
 				'lus' => 'мизочо',
 				'luy' => 'лухияча',
 				'lv' => 'латышча',
 				'mad' => 'мадурисче',
 				'mag' => 'магахиче',
 				'mai' => 'маитиличе',
 				'mak' => 'макасарча',
 				'mas' => 'масайча',
 				'mdf' => 'мокшача',
 				'men' => 'мендече',
 				'mer' => 'меруча',
 				'mfe' => 'морисианча',
 				'mg' => 'малагасча',
 				'mgh' => 'макуача',
 				'mgo' => 'метача',
 				'mh' => 'маршаллча',
 				'mi' => 'маориче',
 				'mic' => 'микмакча',
 				'min' => 'минанкабауча',
 				'mk' => 'македончо',
 				'ml' => 'малайаламча',
 				'mn' => 'монголчо',
 				'mni' => 'манипуриче',
 				'moe' => 'инну-аймунча (индейлер тили)',
 				'moh' => 'мохаукча',
 				'mos' => 'моссиче',
 				'mr' => 'маратиче',
 				'ms' => 'малайча',
 				'mt' => 'малтизче',
 				'mua' => 'мундангча',
 				'mul' => 'бир нече тилде',
 				'mus' => 'крикче',
 				'mwl' => 'мирандизче',
 				'my' => 'бурмача',
 				'myv' => 'эрзянча',
 				'mzn' => 'мазандераниче',
 				'na' => 'науруча',
 				'nap' => 'неополитанча',
 				'naq' => 'намача',
 				'nb' => 'норвежче (букмал)',
 				'nd' => 'түндүк ндыбелче',
 				'nds' => 'төмөнкү немисче',
 				'nds_NL' => 'төмөнкү саксончо',
 				'ne' => 'непалча',
 				'new' => 'невариче',
 				'ng' => 'ндонгача',
 				'nia' => 'ниасча',
 				'niu' => 'ньюанча',
 				'nl' => 'голландча',
 				'nl_BE' => 'фламандча',
 				'nmg' => 'квасиочо',
 				'nn' => 'норвежче (нинорск)',
 				'nnh' => 'нгимбунча',
 				'no' => 'норвежче',
 				'nog' => 'ногайча',
 				'nqo' => 'нкочо',
 				'nr' => 'түштүк ндебелече',
 				'nso' => 'түндүк соточо',
 				'nus' => 'нуерче',
 				'nv' => 'наваджочо',
 				'ny' => 'ньянджача',
 				'nyn' => 'ныйанколчо',
 				'oc' => 'окситанча',
 				'ojb' => 'түндүк-батыш ожибвече (индей тили)',
 				'ojc' => 'борбордук ожибвече',
 				'ojs' => 'ожи-криче (индей тили)',
 				'ojw' => 'батыш ожибвече (индей тили)',
 				'oka' => 'оканаганча (Канада)',
 				'om' => 'оромочо',
 				'or' => 'орияча',
 				'os' => 'осетинче',
 				'pa' => 'пунжабиче',
 				'pag' => 'пангасиче',
 				'pam' => 'пампангача',
 				'pap' => 'папиаменточо',
 				'pau' => 'палауанча',
 				'pcm' => 'аргындашкан тил (Нигерия)',
 				'pis' => 'пижинче (Соломон Аралдары)',
 				'pl' => 'полякча',
 				'pqm' => 'малесит-пассамакуоддиче (индей тили)',
 				'prg' => 'пруссча',
 				'ps' => 'пуштуча',
 				'pt' => 'португалча',
 				'pt_PT' => 'португалча (Европа)',
 				'qu' => 'кечуача',
 				'quc' => 'кичече',
 				'raj' => 'ражастаниче',
 				'rap' => 'рапаньюча',
 				'rar' => 'раротонгача',
 				'rhg' => 'рохинжача',
 				'rm' => 'романшча',
 				'rn' => 'рундиче',
 				'ro' => 'румынча',
 				'ro_MD' => 'молдованча',
 				'rof' => 'ромбочо',
 				'ru' => 'орусча',
 				'rup' => 'аромунча',
 				'rw' => 'руандача',
 				'rwk' => 'руача',
 				'sa' => 'санскритче',
 				'sad' => 'сандавече',
 				'sah' => 'сахача',
 				'saq' => 'самбуруча',
 				'sat' => 'санталиче',
 				'sba' => 'нгамбайча',
 				'sbp' => 'сангуча',
 				'sc' => 'сардинче',
 				'scn' => 'сицилийче',
 				'sco' => 'шотландча',
 				'sd' => 'синдхиче',
 				'sdh' => 'түштүк курдча',
 				'se' => 'түндүк саамиче',
 				'seh' => 'сенача',
 				'ses' => 'койраборо сенниче',
 				'sg' => 'сангочо',
 				'sh' => 'серб-хорват',
 				'shi' => 'ташелитче',
 				'shn' => 'шанча',
 				'si' => 'сингалача',
 				'sk' => 'словакча',
 				'sl' => 'словенче',
 				'slh' => 'түштүк лушуцидче (индей тили)',
 				'sm' => 'самоанча',
 				'sma' => 'түштүк саамиче',
 				'smj' => 'луле саамиче',
 				'smn' => 'инари саамиче',
 				'sms' => 'сколт саамиче',
 				'sn' => 'шонача',
 				'snk' => 'сонинкече',
 				'so' => 'сомаличе',
 				'sq' => 'албанча',
 				'sr' => 'сербче',
 				'srn' => 'сранан тонгочо',
 				'ss' => 'сватиче',
 				'ssy' => 'сахочо',
 				'st' => 'сесоточо',
 				'str' => 'стрейтс салишче (индей тили)',
 				'su' => 'сунданча',
 				'suk' => 'сукумача',
 				'sv' => 'шведче',
 				'sw' => 'суахиличе',
 				'sw_CD' => 'конго суахаличе',
 				'swb' => 'коморчо',
 				'syr' => 'сирияча',
 				'szl' => 'силесче',
 				'ta' => 'тамилче',
 				'tce' => 'түштүк тутчонече (индей тили)',
 				'te' => 'телугуча',
 				'tem' => 'тимнече',
 				'teo' => 'тесочо',
 				'tet' => 'тетумча',
 				'tg' => 'тажикче',
 				'tgx' => 'тагишче (индей тили)',
 				'th' => 'тайча',
 				'tht' => 'талтанча (индей тили)',
 				'ti' => 'тигриниача',
 				'tig' => 'тигрече',
 				'tk' => 'түркмөнчө',
 				'tlh' => 'клингончо',
 				'tli' => 'тлинкитче (индей тили)',
 				'tn' => 'тсванача',
 				'to' => 'тонгача',
 				'tok' => 'токипонача (эксперименталдык тил)',
 				'tpi' => 'ток-писинче',
 				'tr' => 'түркчө',
 				'trv' => 'тарокочо',
 				'ts' => 'тсонгача',
 				'tt' => 'татарча',
 				'ttm' => 'түндүк тутчончо (индей тили)',
 				'tum' => 'тумбукача',
 				'tvl' => 'тувалуча',
 				'tw' => 'тви',
 				'twq' => 'тасабакча',
 				'ty' => 'таитиче',
 				'tyv' => 'тувинче',
 				'tzm' => 'борбордук Атлас тамазигтче',
 				'udm' => 'удмуртча',
 				'ug' => 'уйгурча',
 				'uk' => 'украинче',
 				'umb' => 'умбундуча',
 				'und' => 'белгисиз тилде',
 				'ur' => 'урдуча',
 				'uz' => 'өзбекче',
 				'vai' => 'вайиче',
 				've' => 'вендача',
 				'vec' => 'венециянча',
 				'vi' => 'вьетнамча',
 				'vmw' => 'махувача',
 				'vo' => 'волапюкча',
 				'vun' => 'вунжочо',
 				'wa' => 'валлончо',
 				'wae' => 'валцерче',
 				'wal' => 'вольяттача',
 				'war' => 'варайча',
 				'wbp' => 'ворлпириче',
 				'wo' => 'уолофчо',
 				'wuu' => '"У" диалектинде (Кытай)',
 				'xal' => 'калмыкча',
 				'xh' => 'косача',
 				'xnr' => 'кангри',
 				'xog' => 'согача',
 				'yav' => 'янгбенче',
 				'ybb' => 'йембача',
 				'yi' => 'идишче',
 				'yo' => 'йорубача',
 				'yrl' => 'ньенгатуча (түштүк америка тилдери)',
 				'yue' => 'кантончо',
 				'yue@alt=menu' => 'кытайча (кантончо)',
 				'za' => 'чжуанча',
 				'zgh' => 'марокко тамазигт адабий тилинде',
 				'zh' => 'кытайча',
 				'zh@alt=menu' => 'кытайча (мандарин)',
 				'zh_Hans' => 'кытайча (жөнөкөйлөштүрүлгөн)',
 				'zh_Hant' => 'кытайча (салттуу)',
 				'zu' => 'зулуча',
 				'zun' => 'зуниче',
 				'zxx' => 'тилдик мазмун жок',
 				'zza' => 'зазача',

			);
			if (@_) {
				return $languages{$_[0]};
			}
			return \%languages;
		}
	},
);

has 'display_name_script' => (
	is			=> 'ro',
	isa			=> CodeRef,
	init_arg	=> undef,
	default		=> sub {
		sub {
			my %scripts = (
			'Adlm' => 'Адлам (жазуу)',
 			'Arab' => 'Араб',
 			'Aran' => 'Насталик (Араб жазуусу)',
 			'Armn' => 'Армян',
 			'Beng' => 'Бенгал',
 			'Bopo' => 'Бопомофо',
 			'Brai' => 'Брейл',
 			'Cakm' => 'Чакма (жазуу)',
 			'Cans' => 'канадалык муун жазуусу',
 			'Cher' => 'чероки (жазуу)',
 			'Cyrl' => 'Кирилл',
 			'Deva' => 'Деванагари',
 			'Ethi' => 'Эфиоп',
 			'Geor' => 'Грузин',
 			'Grek' => 'Грек',
 			'Gujr' => 'Гужарати',
 			'Guru' => 'Гурмухи',
 			'Hanb' => 'Ханб',
 			'Hang' => 'Хангул',
 			'Hani' => 'Хань',
 			'Hans' => 'Жөнөкөйлөштүрүлгөн',
 			'Hans@alt=stand-alone' => 'Жөнөк. Хань',
 			'Hant' => 'Салттуу',
 			'Hant@alt=stand-alone' => 'Салттуу Хань',
 			'Hebr' => 'Иврит',
 			'Hira' => 'Хирагана',
 			'Hrkt' => 'Жапон силлабографиясы',
 			'Jamo' => 'Джамо',
 			'Jpan' => 'Жапан',
 			'Kana' => 'Катакана',
 			'Khmr' => 'Кмер',
 			'Knda' => 'Каннада',
 			'Kore' => 'Корей',
 			'Laoo' => 'Лао',
 			'Latn' => 'Латын',
 			'Mlym' => 'Малайалам',
 			'Mong' => 'Монгол',
 			'Mtei' => 'мейтей-маек (жазуу)',
 			'Mymr' => 'Мйанмар',
 			'Nkoo' => 'нко (жазуу)',
 			'Olck' => 'Ол-чики (жазуу)',
 			'Orya' => 'Орийа',
 			'Rohg' => 'Ханифи (жазуу)',
 			'Sinh' => 'Сингала',
 			'Sund' => 'сундан жазуусу',
 			'Syrc' => 'сириялык жазуу',
 			'Taml' => 'Тамил',
 			'Telu' => 'Телу',
 			'Tfng' => 'Тифинаг (жазуу)',
 			'Thaa' => 'Таана',
 			'Thai' => 'Тай',
 			'Tibt' => 'Тибет',
 			'Vaii' => 'Ваи (жазуу)',
 			'Yiii' => 'Йи (жазуу)',
 			'Zmth' => 'Математикалык маани',
 			'Zsye' => 'Быйтыкча',
 			'Zsym' => 'Белгилер',
 			'Zxxx' => 'Жазылбаган',
 			'Zyyy' => 'Жалпы',
 			'Zzzz' => 'Белгисиз жазуу',

			);
			if ( @_ ) {
				return $scripts{$_[0]};
			}
			return \%scripts;
		}
	}
);

has 'display_name_region' => (
	is			=> 'ro',
	isa			=> HashRef[Str],
	init_arg	=> undef,
	default		=> sub {
		{
			'001' => 'Дүйнө',
 			'002' => 'Африка',
 			'003' => 'Түндүк Америка',
 			'005' => 'Түштүк Америка',
 			'009' => 'Океания',
 			'011' => 'Батыш Африка',
 			'013' => 'Борбордук Америка',
 			'014' => 'Чыгыш Африка',
 			'015' => 'Түндүк Африка',
 			'017' => 'Борбордук Африка',
 			'018' => 'Түштүк Африка',
 			'019' => 'Америка',
 			'021' => 'Түндүк Америка (чөлкөм)',
 			'029' => 'Кариб аралдары',
 			'030' => 'Чыгыш Азия',
 			'034' => 'Түштүк Азия',
 			'035' => 'Түштүк-Чыгыш Азия',
 			'039' => 'Түштүк Европа',
 			'053' => 'Австралазия',
 			'054' => 'Меланезия',
 			'057' => 'Микронезия чөлкөмү',
 			'061' => 'Полинезия',
 			'142' => 'Азия',
 			'143' => 'Борбор Азия',
 			'145' => 'Батыш Азия',
 			'150' => 'Европа',
 			'151' => 'Чыгыш Европа',
 			'154' => 'Түндүк Европа',
 			'155' => 'Батыш Европа',
 			'202' => 'Африка өлкөлөрү',
 			'419' => 'Латын Америкасы',
 			'AC' => 'Вознесение аралы',
 			'AD' => 'Андорра',
 			'AE' => 'Бириккен Араб Эмираттары',
 			'AF' => 'Афганистан',
 			'AG' => 'Антигуа жана Барбуда',
 			'AI' => 'Ангилья',
 			'AL' => 'Албания',
 			'AM' => 'Армения',
 			'AO' => 'Ангола',
 			'AQ' => 'Антарктида',
 			'AR' => 'Аргентина',
 			'AS' => 'Америкалык Самоа',
 			'AT' => 'Австрия',
 			'AU' => 'Австралия',
 			'AW' => 'Аруба',
 			'AX' => 'Аланд аралдары',
 			'AZ' => 'Азербайжан',
 			'BA' => 'Босния жана Герцеговина',
 			'BB' => 'Барбадос',
 			'BD' => 'Бангладеш',
 			'BE' => 'Бельгия',
 			'BF' => 'Буркина-Фасо',
 			'BG' => 'Болгария',
 			'BH' => 'Бахрейн',
 			'BI' => 'Бурунди',
 			'BJ' => 'Бенин',
 			'BL' => 'Сент Бартелеми',
 			'BM' => 'Бермуд аралдары',
 			'BN' => 'Бруней',
 			'BO' => 'Боливия',
 			'BQ' => 'Кариб Нидерланддары',
 			'BR' => 'Бразилия',
 			'BS' => 'Багама аралдары',
 			'BT' => 'Бутан',
 			'BV' => 'Буве аралы',
 			'BW' => 'Ботсвана',
 			'BY' => 'Беларусь',
 			'BZ' => 'Белиз',
 			'CA' => 'Канада',
 			'CC' => 'Кокос (Килинг) аралдары',
 			'CD' => 'Конго-Киншаса',
 			'CD@alt=variant' => 'Конго (КДР)',
 			'CF' => 'Борбордук Африка Республикасы',
 			'CG' => 'Конго-Браззавил',
 			'CG@alt=variant' => 'Конго (Республикасы)',
 			'CH' => 'Швейцария',
 			'CI' => 'Кот-д’Ивуар',
 			'CI@alt=variant' => 'Пил сөөктүү жээк',
 			'CK' => 'Кук аралдары',
 			'CL' => 'Чили',
 			'CM' => 'Камерун',
 			'CN' => 'Кытай',
 			'CO' => 'Колумбия',
 			'CP' => 'Клиппертон аралы',
 			'CR' => 'Коста-Рика',
 			'CU' => 'Куба',
 			'CV' => 'Кабо-Верде',
 			'CW' => 'Кюрасао',
 			'CX' => 'Рождество аралы',
 			'CY' => 'Кипр',
 			'CZ' => 'Чехия',
 			'CZ@alt=variant' => 'Чех Республикасы',
 			'DE' => 'Германия',
 			'DG' => 'Диего Гарсия',
 			'DJ' => 'Джибути',
 			'DK' => 'Дания',
 			'DM' => 'Доминика',
 			'DO' => 'Доминика Республикасы',
 			'DZ' => 'Алжир',
 			'EA' => 'Сеута жана Мелилла',
 			'EC' => 'Эквадор',
 			'EE' => 'Эстония',
 			'EG' => 'Египет',
 			'EH' => 'Батыш Сахара',
 			'ER' => 'Эритрея',
 			'ES' => 'Испания',
 			'ET' => 'Эфиопия',
 			'EU' => 'Европа Биримдиги',
 			'EZ' => 'Еврозона',
 			'FI' => 'Финляндия',
 			'FJ' => 'Фиджи',
 			'FK' => 'Фолкленд аралдары',
 			'FK@alt=variant' => 'Фолкленд (Мальвина) аралдары',
 			'FM' => 'Микронезия',
 			'FO' => 'Фарер аралдары',
 			'FR' => 'Франция',
 			'GA' => 'Габон',
 			'GB' => 'Улуу Британия',
 			'GB@alt=short' => 'УБ',
 			'GD' => 'Гренада',
 			'GE' => 'Грузия',
 			'GF' => 'Франция Гвианасы',
 			'GG' => 'Гернси',
 			'GH' => 'Гана',
 			'GI' => 'Гибралтар',
 			'GL' => 'Гренландия',
 			'GM' => 'Гамбия',
 			'GN' => 'Гвинея',
 			'GP' => 'Гваделупа',
 			'GQ' => 'Экватордук Гвинея',
 			'GR' => 'Греция',
 			'GS' => 'Түштүк Жоржия жана Түштүк Сэндвич аралдары',
 			'GT' => 'Гватемала',
 			'GU' => 'Гуам',
 			'GW' => 'Гвинея-Бисау',
 			'GY' => 'Гайана',
 			'HK' => 'Гонконг Кытай ААА',
 			'HK@alt=short' => 'Гонконг',
 			'HM' => 'Херд жана Макдональд аралдары',
 			'HN' => 'Гондурас',
 			'HR' => 'Хорватия',
 			'HT' => 'Гаити',
 			'HU' => 'Венгрия',
 			'IC' => 'Канар аралдары',
 			'ID' => 'Индонезия',
 			'IE' => 'Ирландия',
 			'IL' => 'Израиль',
 			'IM' => 'Мэн аралы',
 			'IN' => 'Индия',
 			'IO' => 'Инди океанындагы Британ территориясы',
 			'IQ' => 'Ирак',
 			'IR' => 'Иран',
 			'IS' => 'Исландия',
 			'IT' => 'Италия',
 			'JE' => 'Жерси',
 			'JM' => 'Ямайка',
 			'JO' => 'Иордания',
 			'JP' => 'Жапония',
 			'KE' => 'Кения',
 			'KG' => 'Кыргызстан',
 			'KH' => 'Камбоджа',
 			'KI' => 'Кирибати',
 			'KM' => 'Коморос',
 			'KN' => 'Сент-Китс жана Невис',
 			'KP' => 'Түндүк Корея',
 			'KR' => 'Түштүк Корея',
 			'KW' => 'Кувейт',
 			'KY' => 'Кайман аралдары',
 			'KZ' => 'Казакстан',
 			'LA' => 'Лаос',
 			'LB' => 'Ливан',
 			'LC' => 'Сент-Люсия',
 			'LI' => 'Лихтенштейн',
 			'LK' => 'Шри-Ланка',
 			'LR' => 'Либерия',
 			'LS' => 'Лесото',
 			'LT' => 'Литва',
 			'LU' => 'Люксембург',
 			'LV' => 'Латвия',
 			'LY' => 'Ливия',
 			'MA' => 'Марокко',
 			'MC' => 'Монако',
 			'MD' => 'Молдова',
 			'ME' => 'Черногория',
 			'MF' => 'Сент-Мартин',
 			'MG' => 'Мадагаскар',
 			'MH' => 'Маршалл аралдары',
 			'MK' => 'Түндүк Македония',
 			'ML' => 'Мали',
 			'MM' => 'Мьянма (Бирма)',
 			'MN' => 'Монголия',
 			'MO' => 'Макао Кытай ААА',
 			'MO@alt=short' => 'Макао',
 			'MP' => 'Түндүк Мариана аралдары',
 			'MQ' => 'Мартиника',
 			'MR' => 'Мавритания',
 			'MS' => 'Монтсеррат',
 			'MT' => 'Мальта',
 			'MU' => 'Маврикий',
 			'MV' => 'Мальдив',
 			'MW' => 'Малави',
 			'MX' => 'Мексика',
 			'MY' => 'Малайзия',
 			'MZ' => 'Мозамбик',
 			'NA' => 'Намибия',
 			'NC' => 'Жаңы Каледония',
 			'NE' => 'Нигер',
 			'NF' => 'Норфолк аралы',
 			'NG' => 'Нигерия',
 			'NI' => 'Никарагуа',
 			'NL' => 'Нидерланд',
 			'NO' => 'Норвегия',
 			'NP' => 'Непал',
 			'NR' => 'Науру',
 			'NU' => 'Ниуэ',
 			'NZ' => 'Жаңы Зеландия',
 			'OM' => 'Оман',
 			'PA' => 'Панама',
 			'PE' => 'Перу',
 			'PF' => 'Полинезия (франциялык)',
 			'PG' => 'Папуа-Жаңы Гвинея',
 			'PH' => 'Филиппин',
 			'PK' => 'Пакистан',
 			'PL' => 'Польша',
 			'PM' => 'Сен-Пьер жана Микелон',
 			'PN' => 'Питкэрн аралдары',
 			'PR' => 'Пуэрто-Рико',
 			'PS' => 'Палестина аймактары',
 			'PS@alt=short' => 'Палестина',
 			'PT' => 'Португалия',
 			'PW' => 'Палау',
 			'PY' => 'Парагвай',
 			'QA' => 'Катар',
 			'QO' => 'Алыскы Океания',
 			'RE' => 'Реюньон',
 			'RO' => 'Румыния',
 			'RS' => 'Сербия',
 			'RU' => 'Россия',
 			'RW' => 'Руанда',
 			'SA' => 'Сауд Арабиясы',
 			'SB' => 'Соломон аралдары',
 			'SC' => 'Сейшел аралдары',
 			'SD' => 'Судан',
 			'SE' => 'Швеция',
 			'SG' => 'Сингапур',
 			'SH' => 'Ыйык Елена',
 			'SI' => 'Словения',
 			'SJ' => 'Шпицберген жана Ян-Майен',
 			'SK' => 'Словакия',
 			'SL' => 'Сьерра-Леоне',
 			'SM' => 'Сан Марино',
 			'SN' => 'Сенегал',
 			'SO' => 'Сомали',
 			'SR' => 'Суринам',
 			'SS' => 'Түштүк Судан',
 			'ST' => 'Сан-Томе жана Принсипи',
 			'SV' => 'Эль-Сальвадор',
 			'SX' => 'Синт-Мартен',
 			'SY' => 'Сирия',
 			'SZ' => 'Свазиленд',
 			'TA' => 'Тристан-да-Кунья',
 			'TC' => 'Түркс жана Кайкос аралдары',
 			'TD' => 'Чад',
 			'TF' => 'Франциянын Түштүктөгү аймактары',
 			'TG' => 'Того',
 			'TH' => 'Тайланд',
 			'TJ' => 'Тажикстан',
 			'TK' => 'Токелау',
 			'TL' => 'Тимор-Лесте',
 			'TL@alt=variant' => 'Чыгыш Тимор',
 			'TM' => 'Түркмөнстан',
 			'TN' => 'Тунис',
 			'TO' => 'Тонга',
 			'TR' => 'Түркия',
 			'TR@alt=variant' => 'Түркие',
 			'TT' => 'Тринидад жана Тобаго',
 			'TV' => 'Тувалу',
 			'TW' => 'Тайвань',
 			'TZ' => 'Танзания',
 			'UA' => 'Украина',
 			'UG' => 'Уганда',
 			'UM' => 'АКШнын сырткы аралдары',
 			'UN' => 'БУ',
 			'US' => 'Кошмо Штаттар',
 			'US@alt=short' => 'АКШ',
 			'UY' => 'Уругвай',
 			'UZ' => 'Өзбекстан',
 			'VA' => 'Ватикан',
 			'VC' => 'Сент-Винсент жана Гренадиндер',
 			'VE' => 'Венесуэла',
 			'VG' => 'Виргин аралдары (Британия)',
 			'VI' => 'Виргин аралдары (АКШ)',
 			'VN' => 'Вьетнам',
 			'VU' => 'Вануату',
 			'WF' => 'Уоллис жана Футуна',
 			'WS' => 'Самоа',
 			'XA' => 'Жасалма- Акцент',
 			'XB' => 'Жасалма - эки тараптуу',
 			'XK' => 'Косово',
 			'YE' => 'Йемен',
 			'YT' => 'Майотта',
 			'ZA' => 'Түштүк-Африка Республикасы',
 			'ZM' => 'Замбия',
 			'ZW' => 'Зимбабве',
 			'ZZ' => 'Белгисиз чөлкөм',

		}
	},
);

has 'display_name_key' => (
	is			=> 'ro',
	isa			=> HashRef[Str],
	init_arg	=> undef,
	default		=> sub {
		{
			'calendar' => 'Жылнаама',
 			'cf' => 'Валюта форматы',
 			'collation' => 'Иргөө тартиби',
 			'currency' => 'Валюта',
 			'hc' => 'Саат мерчеми (12/24)',
 			'lb' => 'Саптарды ажыратуу стили',
 			'ms' => 'Өлчөө тутуму',
 			'numbers' => 'Сандар',

		}
	},
);

has 'display_name_type' => (
	is			=> 'ro',
	isa			=> HashRef[HashRef[Str]],
	init_arg	=> undef,
	default		=> sub {
		{
			'calendar' => {
 				'buddhist' => q{Будда жылнаамасы},
 				'chinese' => q{Кытай жылнаамасы},
 				'coptic' => q{Копт жылнаамасы},
 				'dangi' => q{Данги жылнаамасы},
 				'ethiopic' => q{Эфиоп жылнаамасы},
 				'ethiopic-amete-alem' => q{Эфиопиялык Амет Алем жылнаамасы},
 				'gregorian' => q{Григориан жылнаамасы},
 				'hebrew' => q{Иврит жылнаамасы},
 				'islamic' => q{Ислам жылнаамасы},
 				'islamic-civil' => q{Ислам жылнаамасы (жадыбал)},
 				'islamic-umalqura' => q{Ислам жылнаамасы (Умм аль-Кура)},
 				'iso8601' => q{ИСО-8601 жылнаамасы},
 				'japanese' => q{Жапон жылнаамасы},
 				'persian' => q{Перс жылнаамасы},
 				'roc' => q{Мингуо жылнаамасы},
 			},
 			'cf' => {
 				'account' => q{Эсептешүү валютасынын форматы},
 				'standard' => q{Стандарттык валюта форматы},
 			},
 			'collation' => {
 				'ducet' => q{Демейки Unicode иргөө тартиби},
 				'search' => q{Жалпы издөө},
 				'standard' => q{Стандарттык иргөө тартиби},
 			},
 			'd0' => {
 				'fwidth' => q{Кең формат},
 				'hwidth' => q{Кыска формат},
 				'npinyin' => q{Сандык},
 			},
 			'hc' => {
 				'h11' => q{12 сааттык тутум (0–11)},
 				'h12' => q{12 сааттык тутум (1–12)},
 				'h23' => q{24 сааттык тутум (0–23)},
 				'h24' => q{24 сааттык тутум (1–24)},
 			},
 			'lb' => {
 				'loose' => q{Саптардын арасы кенен},
 				'normal' => q{Саптардын арасы орточо},
 				'strict' => q{Саптардын арасы тыкыс},
 			},
 			'ms' => {
 				'metric' => q{Метрикалык тутум},
 				'uksystem' => q{Британ империясынын өлчөө тутуму},
 				'ussystem' => q{АКШ өлчөө тутуму},
 			},
 			'numbers' => {
 				'arab' => q{Араб-индус сандары},
 				'arabext' => q{Кеңейтилген араб-индус сандары},
 				'armn' => q{Армян сандары},
 				'armnlow' => q{Армян сандары (кичинекей тамга менен))},
 				'beng' => q{Бенгали сандары},
 				'cakm' => q{Чакма сандары},
 				'deva' => q{Деванагари сандары},
 				'ethi' => q{Эфиоп сандары},
 				'fullwide' => q{Толук эндүү сандар},
 				'geor' => q{Грузин сандары},
 				'grek' => q{Грек сандары},
 				'greklow' => q{Грек сандары (кичинекей тамга менен))},
 				'gujr' => q{Гужарати сандары},
 				'guru' => q{Гужарати сандары},
 				'hanidec' => q{Кытай ондук сандары},
 				'hans' => q{Жөнөкөйлөштүрүлгөн кытай сандары},
 				'hansfin' => q{Жөнөкөйлөштүрүлгөн кытай каржы сандары},
 				'hant' => q{Салттуу кытай сандары},
 				'hantfin' => q{Салттуу кытай каржы сандары},
 				'hebr' => q{Иврит сандары},
 				'java' => q{Ява сандары},
 				'jpan' => q{Жапон сандары},
 				'jpanfin' => q{Жапон каржы сандары},
 				'khmr' => q{Кмер сандары},
 				'knda' => q{Каннада сандары},
 				'laoo' => q{Лао сандары},
 				'latn' => q{Батыш сандары},
 				'mlym' => q{Малайалам сандары},
 				'mtei' => q{Митей-маек сандары},
 				'mymr' => q{Мйанмар сандары},
 				'olck' => q{Ол-чики сандары},
 				'orya' => q{Ория сандары},
 				'roman' => q{Роман сандары},
 				'romanlow' => q{Роман сандары (кичинекей тамга менен)},
 				'taml' => q{Салттуу тамил сандары},
 				'tamldec' => q{Тамил сандары},
 				'telu' => q{Телугу сандары},
 				'thai' => q{Тай сандары},
 				'tibt' => q{Тибет сандары},
 				'vaii' => q{Ваи сандары},
 			},

		}
	},
);

has 'display_name_measurement_system' => (
	is			=> 'ro',
	isa			=> HashRef[Str],
	init_arg	=> undef,
	default		=> sub {
		{
			'metric' => q{Метрикалык өлчөө тутуму},
 			'UK' => q{Британия},
 			'US' => q{АКШ},

		}
	},
);

has 'display_name_code_patterns' => (
	is			=> 'ro',
	isa			=> HashRef[Str],
	init_arg	=> undef,
	default		=> sub {
		{
			'language' => 'Тили: {0}',
 			'script' => 'Жазуусу: {0}',
 			'region' => 'Аймагы: {0}',

		}
	},
);

has 'characters' => (
	is			=> 'ro',
	isa			=> HashRef,
	init_arg	=> undef,
	default		=> $^V ge v5.18.0
	? eval <<'EOT'
	sub {
		no warnings 'experimental::regex_sets';
		return {
			auxiliary => qr{[в ф ц щ ь]},
			index => ['А', 'Б', 'В', 'Г', 'Д', 'Е', 'Ё', 'Ж', 'З', 'И', 'Й', 'К', 'Л', 'М', 'Н', 'Ң', 'О', 'Ө', 'П', 'Р', 'С', 'Т', 'У', 'Ү', 'Ф', 'Х', 'Ц', 'Ч', 'Ш', 'Щ', 'Ъ', 'Ы', 'Ь', 'Э', 'Ю', 'Я'],
			main => qr{[а б г д е ё ж з и й к л м н ң о ө п р с т у ү х ч ш ъ ы э ю я]},
			numbers => qr{[  \- ‑ , % ‰ + 0 1 2 3 4 5 6 7 8 9]},
			punctuation => qr{[\- ‐‑ – — , ; \: ! ? . … '‘‚ "“„ « » ( ) \[ \] \{ \} § @ * / \& #]},
		};
	},
EOT
: sub {
		return { index => ['А', 'Б', 'В', 'Г', 'Д', 'Е', 'Ё', 'Ж', 'З', 'И', 'Й', 'К', 'Л', 'М', 'Н', 'Ң', 'О', 'Ө', 'П', 'Р', 'С', 'Т', 'У', 'Ү', 'Ф', 'Х', 'Ц', 'Ч', 'Ш', 'Щ', 'Ъ', 'Ы', 'Ь', 'Э', 'Ю', 'Я'], };
},
);


has 'quote_start' => (
	is			=> 'ro',
	isa			=> Str,
	init_arg	=> undef,
	default		=> qq{«},
);

has 'quote_end' => (
	is			=> 'ro',
	isa			=> Str,
	init_arg	=> undef,
	default		=> qq{»},
);

has 'alternate_quote_start' => (
	is			=> 'ro',
	isa			=> Str,
	init_arg	=> undef,
	default		=> qq{„},
);

has 'alternate_quote_end' => (
	is			=> 'ro',
	isa			=> Str,
	init_arg	=> undef,
	default		=> qq{“},
);

has 'units' => (
	is			=> 'ro',
	isa			=> HashRef[HashRef[HashRef[Str]]],
	init_arg	=> undef,
	default		=> sub { {
				'long' => {
					# Long Unit Identifier
					'' => {
						'name' => q(негизги багыт),
					},
					# Core Unit Identifier
					'' => {
						'name' => q(негизги багыт),
					},
					# Long Unit Identifier
					'10p-1' => {
						'1' => q(деци{0}),
					},
					# Core Unit Identifier
					'1' => {
						'1' => q(деци{0}),
					},
					# Long Unit Identifier
					'10p-12' => {
						'1' => q(пико{0}),
					},
					# Core Unit Identifier
					'12' => {
						'1' => q(пико{0}),
					},
					# Long Unit Identifier
					'10p-15' => {
						'1' => q(фемто{0}),
					},
					# Core Unit Identifier
					'15' => {
						'1' => q(фемто{0}),
					},
					# Long Unit Identifier
					'10p-18' => {
						'1' => q(атто{0}),
					},
					# Core Unit Identifier
					'18' => {
						'1' => q(атто{0}),
					},
					# Long Unit Identifier
					'10p-2' => {
						'1' => q(центи{0}),
					},
					# Core Unit Identifier
					'2' => {
						'1' => q(центи{0}),
					},
					# Long Unit Identifier
					'10p-21' => {
						'1' => q(зепто{0}),
					},
					# Core Unit Identifier
					'21' => {
						'1' => q(зепто{0}),
					},
					# Long Unit Identifier
					'10p-24' => {
						'1' => q(йокто{0}),
					},
					# Core Unit Identifier
					'24' => {
						'1' => q(йокто{0}),
					},
					# Long Unit Identifier
					'10p-3' => {
						'1' => q(милли{0}),
					},
					# Core Unit Identifier
					'3' => {
						'1' => q(милли{0}),
					},
					# Long Unit Identifier
					'10p-6' => {
						'1' => q(микро{0}),
					},
					# Core Unit Identifier
					'6' => {
						'1' => q(микро{0}),
					},
					# Long Unit Identifier
					'10p-9' => {
						'1' => q(нано{0}),
					},
					# Core Unit Identifier
					'9' => {
						'1' => q(нано{0}),
					},
					# Long Unit Identifier
					'10p1' => {
						'1' => q(дека{0}),
					},
					# Core Unit Identifier
					'10p1' => {
						'1' => q(дека{0}),
					},
					# Long Unit Identifier
					'10p12' => {
						'1' => q(тера{0}),
					},
					# Core Unit Identifier
					'10p12' => {
						'1' => q(тера{0}),
					},
					# Long Unit Identifier
					'10p15' => {
						'1' => q(пета{0}),
					},
					# Core Unit Identifier
					'10p15' => {
						'1' => q(пета{0}),
					},
					# Long Unit Identifier
					'10p18' => {
						'1' => q(экза{0}),
					},
					# Core Unit Identifier
					'10p18' => {
						'1' => q(экза{0}),
					},
					# Long Unit Identifier
					'10p2' => {
						'1' => q(гекто{0}),
					},
					# Core Unit Identifier
					'10p2' => {
						'1' => q(гекто{0}),
					},
					# Long Unit Identifier
					'10p21' => {
						'1' => q(зетта{0}),
					},
					# Core Unit Identifier
					'10p21' => {
						'1' => q(зетта{0}),
					},
					# Long Unit Identifier
					'10p24' => {
						'1' => q(йотта{0}),
					},
					# Core Unit Identifier
					'10p24' => {
						'1' => q(йотта{0}),
					},
					# Long Unit Identifier
					'10p3' => {
						'1' => q(кило{0}),
					},
					# Core Unit Identifier
					'10p3' => {
						'1' => q(кило{0}),
					},
					# Long Unit Identifier
					'10p6' => {
						'1' => q(мега{0}),
					},
					# Core Unit Identifier
					'10p6' => {
						'1' => q(мега{0}),
					},
					# Long Unit Identifier
					'10p9' => {
						'1' => q(гига{0}),
					},
					# Core Unit Identifier
					'10p9' => {
						'1' => q(гига{0}),
					},
					# Long Unit Identifier
					'acceleration-g-force' => {
						'one' => q({0} оордук күчү),
						'other' => q({0} оордук күчү),
					},
					# Core Unit Identifier
					'g-force' => {
						'one' => q({0} оордук күчү),
						'other' => q({0} оордук күчү),
					},
					# Long Unit Identifier
					'acceleration-meter-per-square-second' => {
						'name' => q(квадраттык секундасына метр),
						'one' => q(квадраттык секундасына {0} метр),
						'other' => q(квадраттык секундасына {0} метр),
					},
					# Core Unit Identifier
					'meter-per-square-second' => {
						'name' => q(квадраттык секундасына метр),
						'one' => q(квадраттык секундасына {0} метр),
						'other' => q(квадраттык секундасына {0} метр),
					},
					# Long Unit Identifier
					'angle-arc-minute' => {
						'name' => q(аркмүнөт),
						'one' => q({0} аркмүнөт),
						'other' => q({0} аркмүнөт),
					},
					# Core Unit Identifier
					'arc-minute' => {
						'name' => q(аркмүнөт),
						'one' => q({0} аркмүнөт),
						'other' => q({0} аркмүнөт),
					},
					# Long Unit Identifier
					'angle-arc-second' => {
						'name' => q(арксекунд),
						'one' => q({0} арксекунд),
						'other' => q({0} арксекунд),
					},
					# Core Unit Identifier
					'arc-second' => {
						'name' => q(арксекунд),
						'one' => q({0} арксекунд),
						'other' => q({0} арксекунд),
					},
					# Long Unit Identifier
					'angle-degree' => {
						'one' => q({0} градус),
						'other' => q({0} градус),
					},
					# Core Unit Identifier
					'degree' => {
						'one' => q({0} градус),
						'other' => q({0} градус),
					},
					# Long Unit Identifier
					'angle-radian' => {
						'name' => q(радиан),
						'one' => q({0} радиан),
						'other' => q({0} радиан),
					},
					# Core Unit Identifier
					'radian' => {
						'name' => q(радиан),
						'one' => q({0} радиан),
						'other' => q({0} радиан),
					},
					# Long Unit Identifier
					'area-hectare' => {
						'one' => q({0} гектар),
						'other' => q({0} гектар),
					},
					# Core Unit Identifier
					'hectare' => {
						'one' => q({0} гектар),
						'other' => q({0} гектар),
					},
					# Long Unit Identifier
					'area-square-centimeter' => {
						'name' => q(чарчы сантиметр),
						'one' => q({0} чарчы сантиметр),
						'other' => q({0} чарчы сантиметр),
						'per' => q(чарчы сантиметрине {0}),
					},
					# Core Unit Identifier
					'square-centimeter' => {
						'name' => q(чарчы сантиметр),
						'one' => q({0} чарчы сантиметр),
						'other' => q({0} чарчы сантиметр),
						'per' => q(чарчы сантиметрине {0}),
					},
					# Long Unit Identifier
					'area-square-foot' => {
						'one' => q({0} чарчы фут),
						'other' => q({0} чарчы фут),
					},
					# Core Unit Identifier
					'square-foot' => {
						'one' => q({0} чарчы фут),
						'other' => q({0} чарчы фут),
					},
					# Long Unit Identifier
					'area-square-inch' => {
						'name' => q(чарчы дюйм),
						'one' => q({0} чарчы дюйм),
						'other' => q({0} чарчы дюйм),
						'per' => q(чарчы дюймуна {0}),
					},
					# Core Unit Identifier
					'square-inch' => {
						'name' => q(чарчы дюйм),
						'one' => q({0} чарчы дюйм),
						'other' => q({0} чарчы дюйм),
						'per' => q(чарчы дюймуна {0}),
					},
					# Long Unit Identifier
					'area-square-kilometer' => {
						'name' => q(чарчы километр),
						'one' => q({0} чарчы километр),
						'other' => q({0} чарчы километр),
						'per' => q(чарчы километрине {0}),
					},
					# Core Unit Identifier
					'square-kilometer' => {
						'name' => q(чарчы километр),
						'one' => q({0} чарчы километр),
						'other' => q({0} чарчы километр),
						'per' => q(чарчы километрине {0}),
					},
					# Long Unit Identifier
					'area-square-meter' => {
						'name' => q(чарчы метр),
						'one' => q({0} чарчы метр),
						'other' => q({0} чарчы метр),
						'per' => q(чарчы метрине {0}),
					},
					# Core Unit Identifier
					'square-meter' => {
						'name' => q(чарчы метр),
						'one' => q({0} чарчы метр),
						'other' => q({0} чарчы метр),
						'per' => q(чарчы метрине {0}),
					},
					# Long Unit Identifier
					'area-square-mile' => {
						'one' => q({0} чарчы миля),
						'other' => q({0} чарчы миля),
						'per' => q(чарчы милясына {0}),
					},
					# Core Unit Identifier
					'square-mile' => {
						'one' => q({0} чарчы миля),
						'other' => q({0} чарчы миля),
						'per' => q(чарчы милясына {0}),
					},
					# Long Unit Identifier
					'area-square-yard' => {
						'name' => q(чарчы ярд),
						'one' => q({0} чарчы ярд),
						'other' => q({0} чарчы ярд),
					},
					# Core Unit Identifier
					'square-yard' => {
						'name' => q(чарчы ярд),
						'one' => q({0} чарчы ярд),
						'other' => q({0} чарчы ярд),
					},
					# Long Unit Identifier
					'concentr-karat' => {
						'one' => q({0} карат),
						'other' => q({0} карат),
					},
					# Core Unit Identifier
					'karat' => {
						'one' => q({0} карат),
						'other' => q({0} карат),
					},
					# Long Unit Identifier
					'concentr-milligram-ofglucose-per-deciliter' => {
						'name' => q(децилитрга миллиграмм),
						'one' => q(децилитрга {0} миллиграмм),
						'other' => q(децилитрга {0} миллиграмм),
					},
					# Core Unit Identifier
					'milligram-ofglucose-per-deciliter' => {
						'name' => q(децилитрга миллиграмм),
						'one' => q(децилитрга {0} миллиграмм),
						'other' => q(децилитрга {0} миллиграмм),
					},
					# Long Unit Identifier
					'concentr-millimole-per-liter' => {
						'name' => q(литрине миллимоль),
						'one' => q(литрине {0} миллимоль),
						'other' => q(литрине {0} миллимоль),
					},
					# Core Unit Identifier
					'millimole-per-liter' => {
						'name' => q(литрине миллимоль),
						'one' => q(литрине {0} миллимоль),
						'other' => q(литрине {0} миллимоль),
					},
					# Long Unit Identifier
					'concentr-mole' => {
						'name' => q(мольдор),
					},
					# Core Unit Identifier
					'mole' => {
						'name' => q(мольдор),
					},
					# Long Unit Identifier
					'concentr-percent' => {
						'one' => q({0} пайыз),
						'other' => q({0} пайыз),
					},
					# Core Unit Identifier
					'percent' => {
						'one' => q({0} пайыз),
						'other' => q({0} пайыз),
					},
					# Long Unit Identifier
					'concentr-permille' => {
						'one' => q({0} промилле),
						'other' => q({0} промилле),
					},
					# Core Unit Identifier
					'permille' => {
						'one' => q({0} промилле),
						'other' => q({0} промилле),
					},
					# Long Unit Identifier
					'concentr-permillion' => {
						'name' => q(миллионго бөлүктөр),
						'one' => q(миллионго {0} бөлүк),
						'other' => q(миллионго {0} бөлүк),
					},
					# Core Unit Identifier
					'permillion' => {
						'name' => q(миллионго бөлүктөр),
						'one' => q(миллионго {0} бөлүк),
						'other' => q(миллионго {0} бөлүк),
					},
					# Long Unit Identifier
					'concentr-portion-per-1e9' => {
						'name' => q(мкг/л),
						'one' => q({0} мкг/л),
						'other' => q({0} мкг/л),
					},
					# Core Unit Identifier
					'portion-per-1e9' => {
						'name' => q(мкг/л),
						'one' => q({0} мкг/л),
						'other' => q({0} мкг/л),
					},
					# Long Unit Identifier
					'consumption-liter-per-100-kilometer' => {
						'name' => q(100 километрге литр),
						'one' => q(100 километрге {0} литр),
						'other' => q(100 километрге {0} литр),
					},
					# Core Unit Identifier
					'liter-per-100-kilometer' => {
						'name' => q(100 километрге литр),
						'one' => q(100 километрге {0} литр),
						'other' => q(100 километрге {0} литр),
					},
					# Long Unit Identifier
					'consumption-liter-per-kilometer' => {
						'name' => q(километрине литр),
						'one' => q(километрине {0} литр),
						'other' => q(километрине {0} литр),
					},
					# Core Unit Identifier
					'liter-per-kilometer' => {
						'name' => q(километрине литр),
						'one' => q(километрине {0} литр),
						'other' => q(километрине {0} литр),
					},
					# Long Unit Identifier
					'consumption-mile-per-gallon' => {
						'name' => q(миляга/галлон),
						'one' => q({0} миляга/галлон),
						'other' => q({0} миляга/галлон),
					},
					# Core Unit Identifier
					'mile-per-gallon' => {
						'name' => q(миляга/галлон),
						'one' => q({0} миляга/галлон),
						'other' => q({0} миляга/галлон),
					},
					# Long Unit Identifier
					'consumption-mile-per-gallon-imperial' => {
						'name' => q(англ. галлонуна миля),
						'one' => q(англ. галлонуна {0} миля),
						'other' => q(англ. галлонуна {0} миля),
					},
					# Core Unit Identifier
					'mile-per-gallon-imperial' => {
						'name' => q(англ. галлонуна миля),
						'one' => q(англ. галлонуна {0} миля),
						'other' => q(англ. галлонуна {0} миля),
					},
					# Long Unit Identifier
					'coordinate' => {
						'east' => q({0} чыгыш),
						'north' => q({0} түндүк),
						'south' => q({0} түштүк),
						'west' => q({0} батыш),
					},
					# Core Unit Identifier
					'coordinate' => {
						'east' => q({0} чыгыш),
						'north' => q({0} түндүк),
						'south' => q({0} түштүк),
						'west' => q({0} батыш),
					},
					# Long Unit Identifier
					'digital-gigabit' => {
						'name' => q(гигабит),
						'one' => q({0} гигабит),
						'other' => q({0} гигабит),
					},
					# Core Unit Identifier
					'gigabit' => {
						'name' => q(гигабит),
						'one' => q({0} гигабит),
						'other' => q({0} гигабит),
					},
					# Long Unit Identifier
					'digital-gigabyte' => {
						'name' => q(гигабайт),
						'one' => q({0} гигабайт),
						'other' => q({0} гигабайт),
					},
					# Core Unit Identifier
					'gigabyte' => {
						'name' => q(гигабайт),
						'one' => q({0} гигабайт),
						'other' => q({0} гигабайт),
					},
					# Long Unit Identifier
					'digital-kilobit' => {
						'name' => q(килобит),
						'one' => q({0} килобит),
						'other' => q({0} килобит),
					},
					# Core Unit Identifier
					'kilobit' => {
						'name' => q(килобит),
						'one' => q({0} килобит),
						'other' => q({0} килобит),
					},
					# Long Unit Identifier
					'digital-kilobyte' => {
						'name' => q(килобайт),
						'one' => q({0} килобайт),
						'other' => q({0} килобайт),
					},
					# Core Unit Identifier
					'kilobyte' => {
						'name' => q(килобайт),
						'one' => q({0} килобайт),
						'other' => q({0} килобайт),
					},
					# Long Unit Identifier
					'digital-megabit' => {
						'name' => q(мегабит),
						'one' => q({0} мегабит),
						'other' => q({0} мегабит),
					},
					# Core Unit Identifier
					'megabit' => {
						'name' => q(мегабит),
						'one' => q({0} мегабит),
						'other' => q({0} мегабит),
					},
					# Long Unit Identifier
					'digital-megabyte' => {
						'name' => q(мегабайт),
						'one' => q({0} мегабайт),
						'other' => q({0} мегабайт),
					},
					# Core Unit Identifier
					'megabyte' => {
						'name' => q(мегабайт),
						'one' => q({0} мегабайт),
						'other' => q({0} мегабайт),
					},
					# Long Unit Identifier
					'digital-petabyte' => {
						'name' => q(петабайт),
						'one' => q({0} петабайт),
						'other' => q({0} ПТБ),
					},
					# Core Unit Identifier
					'petabyte' => {
						'name' => q(петабайт),
						'one' => q({0} петабайт),
						'other' => q({0} ПТБ),
					},
					# Long Unit Identifier
					'digital-terabit' => {
						'name' => q(терабит),
						'one' => q({0} терабит),
						'other' => q({0} терабит),
					},
					# Core Unit Identifier
					'terabit' => {
						'name' => q(терабит),
						'one' => q({0} терабит),
						'other' => q({0} терабит),
					},
					# Long Unit Identifier
					'digital-terabyte' => {
						'name' => q(терабайт),
						'one' => q({0} терабайт),
						'other' => q({0} терабайт),
					},
					# Core Unit Identifier
					'terabyte' => {
						'name' => q(терабайт),
						'one' => q({0} терабайт),
						'other' => q({0} терабайт),
					},
					# Long Unit Identifier
					'duration-century' => {
						'name' => q(кылым),
						'one' => q({0} кылым),
						'other' => q({0} кылым),
					},
					# Core Unit Identifier
					'century' => {
						'name' => q(кылым),
						'one' => q({0} кылым),
						'other' => q({0} кылым),
					},
					# Long Unit Identifier
					'duration-day' => {
						'per' => q(күнүнө {0}),
					},
					# Core Unit Identifier
					'day' => {
						'per' => q(күнүнө {0}),
					},
					# Long Unit Identifier
					'duration-hour' => {
						'one' => q({0} саат),
						'other' => q({0} саат),
						'per' => q(саатына {0}),
					},
					# Core Unit Identifier
					'hour' => {
						'one' => q({0} саат),
						'other' => q({0} саат),
						'per' => q(саатына {0}),
					},
					# Long Unit Identifier
					'duration-microsecond' => {
						'name' => q(микросекунд),
						'one' => q({0} микросекунд),
						'other' => q({0} микросекунд),
					},
					# Core Unit Identifier
					'microsecond' => {
						'name' => q(микросекунд),
						'one' => q({0} микросекунд),
						'other' => q({0} микросекунд),
					},
					# Long Unit Identifier
					'duration-millisecond' => {
						'one' => q({0} миллисекунд),
						'other' => q({0} миллисекунд),
					},
					# Core Unit Identifier
					'millisecond' => {
						'one' => q({0} миллисекунд),
						'other' => q({0} миллисекунд),
					},
					# Long Unit Identifier
					'duration-minute' => {
						'one' => q({0} мүнөт),
						'other' => q({0} мүнөт),
						'per' => q(мүнөтүнө {0}),
					},
					# Core Unit Identifier
					'minute' => {
						'one' => q({0} мүнөт),
						'other' => q({0} мүнөт),
						'per' => q(мүнөтүнө {0}),
					},
					# Long Unit Identifier
					'duration-month' => {
						'per' => q(айына {0}),
					},
					# Core Unit Identifier
					'month' => {
						'per' => q(айына {0}),
					},
					# Long Unit Identifier
					'duration-nanosecond' => {
						'name' => q(наносекунд),
						'one' => q({0} наносекунд),
						'other' => q({0} наносекунд),
					},
					# Core Unit Identifier
					'nanosecond' => {
						'name' => q(наносекунд),
						'one' => q({0} наносекунд),
						'other' => q({0} наносекунд),
					},
					# Long Unit Identifier
					'duration-night' => {
						'name' => q(түн),
						'one' => q({0}/түн),
						'other' => q({0}/түн),
						'per' => q({0}/түнүнө),
					},
					# Core Unit Identifier
					'night' => {
						'name' => q(түн),
						'one' => q({0}/түн),
						'other' => q({0}/түн),
						'per' => q({0}/түнүнө),
					},
					# Long Unit Identifier
					'duration-quarter' => {
						'name' => q(чейрек),
						'one' => q({0}/чейрек),
						'other' => q({0}/чейрек),
					},
					# Core Unit Identifier
					'quarter' => {
						'name' => q(чейрек),
						'one' => q({0}/чейрек),
						'other' => q({0}/чейрек),
					},
					# Long Unit Identifier
					'duration-second' => {
						'one' => q({0} секунд),
						'other' => q({0} секунд),
						'per' => q(секундуна {0}),
					},
					# Core Unit Identifier
					'second' => {
						'one' => q({0} секунд),
						'other' => q({0} секунд),
						'per' => q(секундуна {0}),
					},
					# Long Unit Identifier
					'duration-week' => {
						'one' => q({0} апта),
						'other' => q({0} апта),
						'per' => q(аптасына {0}),
					},
					# Core Unit Identifier
					'week' => {
						'one' => q({0} апта),
						'other' => q({0} апта),
						'per' => q(аптасына {0}),
					},
					# Long Unit Identifier
					'duration-year' => {
						'one' => q({0} жыл),
						'other' => q({0} жыл),
						'per' => q(жылына {0}),
					},
					# Core Unit Identifier
					'year' => {
						'one' => q({0} жыл),
						'other' => q({0} жыл),
						'per' => q(жылына {0}),
					},
					# Long Unit Identifier
					'electric-ampere' => {
						'name' => q(ампер),
						'one' => q({0} ампер),
						'other' => q({0} ампер),
					},
					# Core Unit Identifier
					'ampere' => {
						'name' => q(ампер),
						'one' => q({0} ампер),
						'other' => q({0} ампер),
					},
					# Long Unit Identifier
					'electric-milliampere' => {
						'name' => q(миллиампер),
						'one' => q({0} миллиампер),
						'other' => q({0} миллиампер),
					},
					# Core Unit Identifier
					'milliampere' => {
						'name' => q(миллиампер),
						'one' => q({0} миллиампер),
						'other' => q({0} миллиампер),
					},
					# Long Unit Identifier
					'electric-ohm' => {
						'one' => q({0} ом),
						'other' => q({0} ом),
					},
					# Core Unit Identifier
					'ohm' => {
						'one' => q({0} ом),
						'other' => q({0} ом),
					},
					# Long Unit Identifier
					'electric-volt' => {
						'one' => q({0} вольт),
						'other' => q({0} вольт),
					},
					# Core Unit Identifier
					'volt' => {
						'one' => q({0} вольт),
						'other' => q({0} вольт),
					},
					# Long Unit Identifier
					'energy-british-thermal-unit' => {
						'name' => q(Британдык жылуулук бирдиктери),
						'one' => q({0} Британдык жылуулук бирдиги),
						'other' => q({0} Британдык жылуулук бирдиги),
					},
					# Core Unit Identifier
					'british-thermal-unit' => {
						'name' => q(Британдык жылуулук бирдиктери),
						'one' => q({0} Британдык жылуулук бирдиги),
						'other' => q({0} Британдык жылуулук бирдиги),
					},
					# Long Unit Identifier
					'energy-calorie' => {
						'name' => q(калория),
						'one' => q({0} калория),
						'other' => q({0} калория),
					},
					# Core Unit Identifier
					'calorie' => {
						'name' => q(калория),
						'one' => q({0} калория),
						'other' => q({0} калория),
					},
					# Long Unit Identifier
					'energy-foodcalorie' => {
						'name' => q(Калориялар),
						'one' => q({0} Калория),
						'other' => q({0} Калория),
					},
					# Core Unit Identifier
					'foodcalorie' => {
						'name' => q(Калориялар),
						'one' => q({0} Калория),
						'other' => q({0} Калория),
					},
					# Long Unit Identifier
					'energy-joule' => {
						'one' => q({0} жоул),
						'other' => q({0} жоул),
					},
					# Core Unit Identifier
					'joule' => {
						'one' => q({0} жоул),
						'other' => q({0} жоул),
					},
					# Long Unit Identifier
					'energy-kilocalorie' => {
						'name' => q(килокалория),
						'one' => q({0} килокалория),
						'other' => q({0} килокалория),
					},
					# Core Unit Identifier
					'kilocalorie' => {
						'name' => q(килокалория),
						'one' => q({0} килокалория),
						'other' => q({0} килокалория),
					},
					# Long Unit Identifier
					'energy-kilojoule' => {
						'one' => q({0} киложоул),
						'other' => q({0} киложоул),
					},
					# Core Unit Identifier
					'kilojoule' => {
						'one' => q({0} киложоул),
						'other' => q({0} киложоул),
					},
					# Long Unit Identifier
					'energy-kilowatt-hour' => {
						'name' => q(килловат-саат),
						'one' => q({0} килловат-саат),
						'other' => q({0} килловат-саат),
					},
					# Core Unit Identifier
					'kilowatt-hour' => {
						'name' => q(килловат-саат),
						'one' => q({0} килловат-саат),
						'other' => q({0} килловат-саат),
					},
					# Long Unit Identifier
					'energy-therm-us' => {
						'name' => q(терм АКШ),
					},
					# Core Unit Identifier
					'therm-us' => {
						'name' => q(терм АКШ),
					},
					# Long Unit Identifier
					'force-kilowatt-hour-per-100-kilometer' => {
						'name' => q(100 километрге киловатт саат),
					},
					# Core Unit Identifier
					'kilowatt-hour-per-100-kilometer' => {
						'name' => q(100 километрге киловатт саат),
					},
					# Long Unit Identifier
					'force-pound-force' => {
						'name' => q(күч фунттары),
						'one' => q({0}күч фунту),
						'other' => q({0}күч фунттары),
					},
					# Core Unit Identifier
					'pound-force' => {
						'name' => q(күч фунттары),
						'one' => q({0}күч фунту),
						'other' => q({0}күч фунттары),
					},
					# Long Unit Identifier
					'frequency-gigahertz' => {
						'name' => q(гигагерц),
						'one' => q({0} гигагерц),
						'other' => q({0} гигагерц),
					},
					# Core Unit Identifier
					'gigahertz' => {
						'name' => q(гигагерц),
						'one' => q({0} гигагерц),
						'other' => q({0} гигагерц),
					},
					# Long Unit Identifier
					'frequency-hertz' => {
						'name' => q(герц),
						'one' => q({0} герц),
						'other' => q({0} герц),
					},
					# Core Unit Identifier
					'hertz' => {
						'name' => q(герц),
						'one' => q({0} герц),
						'other' => q({0} герц),
					},
					# Long Unit Identifier
					'frequency-kilohertz' => {
						'name' => q(килогерц),
						'one' => q({0} килогерц),
						'other' => q({0} килогерц),
					},
					# Core Unit Identifier
					'kilohertz' => {
						'name' => q(килогерц),
						'one' => q({0} килогерц),
						'other' => q({0} килогерц),
					},
					# Long Unit Identifier
					'frequency-megahertz' => {
						'name' => q(мегагерц),
						'one' => q({0} мегагерц),
						'other' => q({0} мегагерц),
					},
					# Core Unit Identifier
					'megahertz' => {
						'name' => q(мегагерц),
						'one' => q({0} мегагерц),
						'other' => q({0} мегагерц),
					},
					# Long Unit Identifier
					'graphics-dot' => {
						'name' => q(чекит),
					},
					# Core Unit Identifier
					'dot' => {
						'name' => q(чекит),
					},
					# Long Unit Identifier
					'graphics-dot-per-centimeter' => {
						'name' => q(сантиметрге чекиттер),
						'one' => q(сантиметрге {0} чекит),
						'other' => q(сантиметрге {0} чекиттер),
					},
					# Core Unit Identifier
					'dot-per-centimeter' => {
						'name' => q(сантиметрге чекиттер),
						'one' => q(сантиметрге {0} чекит),
						'other' => q(сантиметрге {0} чекиттер),
					},
					# Long Unit Identifier
					'graphics-dot-per-inch' => {
						'name' => q(дюйм үчүн чекиттер),
						'one' => q(дюйм үчүн чекит),
						'other' => q({0} дюйм үчүн чекит),
					},
					# Core Unit Identifier
					'dot-per-inch' => {
						'name' => q(дюйм үчүн чекиттер),
						'one' => q(дюйм үчүн чекит),
						'other' => q({0} дюйм үчүн чекит),
					},
					# Long Unit Identifier
					'length-astronomical-unit' => {
						'name' => q(астрономиялык бирдик),
						'one' => q({0} астрономиялык бирдик),
						'other' => q({0} астрономиялык бирдик),
					},
					# Core Unit Identifier
					'astronomical-unit' => {
						'name' => q(астрономиялык бирдик),
						'one' => q({0} астрономиялык бирдик),
						'other' => q({0} астрономиялык бирдик),
					},
					# Long Unit Identifier
					'length-centimeter' => {
						'name' => q(сантиметр),
						'one' => q({0} сантиметр),
						'other' => q({0} сантиметр),
						'per' => q(сантиметрине {0}),
					},
					# Core Unit Identifier
					'centimeter' => {
						'name' => q(сантиметр),
						'one' => q({0} сантиметр),
						'other' => q({0} сантиметр),
						'per' => q(сантиметрине {0}),
					},
					# Long Unit Identifier
					'length-decimeter' => {
						'name' => q(дециметр),
						'one' => q({0} дециметр),
						'other' => q({0} дециметр),
					},
					# Core Unit Identifier
					'decimeter' => {
						'name' => q(дециметр),
						'one' => q({0} дециметр),
						'other' => q({0} дециметр),
					},
					# Long Unit Identifier
					'length-earth-radius' => {
						'name' => q(жер радиусу),
						'one' => q(жер радиусу),
						'other' => q({0} жер радиусу),
					},
					# Core Unit Identifier
					'earth-radius' => {
						'name' => q(жер радиусу),
						'one' => q(жер радиусу),
						'other' => q({0} жер радиусу),
					},
					# Long Unit Identifier
					'length-foot' => {
						'per' => q(футуна {0}),
					},
					# Core Unit Identifier
					'foot' => {
						'per' => q(футуна {0}),
					},
					# Long Unit Identifier
					'length-inch' => {
						'per' => q(дюймуна {0}),
					},
					# Core Unit Identifier
					'inch' => {
						'per' => q(дюймуна {0}),
					},
					# Long Unit Identifier
					'length-kilometer' => {
						'name' => q(километр),
						'one' => q({0} километр),
						'other' => q({0} километр),
						'per' => q(километрине {0}),
					},
					# Core Unit Identifier
					'kilometer' => {
						'name' => q(километр),
						'one' => q({0} километр),
						'other' => q({0} километр),
						'per' => q(километрине {0}),
					},
					# Long Unit Identifier
					'length-light-year' => {
						'one' => q({0} жарык жыл),
						'other' => q({0} жарык жыл),
					},
					# Core Unit Identifier
					'light-year' => {
						'one' => q({0} жарык жыл),
						'other' => q({0} жарык жыл),
					},
					# Long Unit Identifier
					'length-meter' => {
						'one' => q({0} метр),
						'other' => q({0} метр),
						'per' => q(метрине {0}),
					},
					# Core Unit Identifier
					'meter' => {
						'one' => q({0} метр),
						'other' => q({0} метр),
						'per' => q(метрине {0}),
					},
					# Long Unit Identifier
					'length-micrometer' => {
						'name' => q(микрометр),
						'one' => q({0} микрометр),
						'other' => q({0} микрометр),
					},
					# Core Unit Identifier
					'micrometer' => {
						'name' => q(микрометр),
						'one' => q({0} микрометр),
						'other' => q({0} микрометр),
					},
					# Long Unit Identifier
					'length-millimeter' => {
						'one' => q({0} миллиметр),
						'other' => q({0} миллиметр),
					},
					# Core Unit Identifier
					'millimeter' => {
						'one' => q({0} миллиметр),
						'other' => q({0} миллиметр),
					},
					# Long Unit Identifier
					'length-nanometer' => {
						'name' => q(нанометр),
						'one' => q({0} нанометр),
						'other' => q({0} нанометр),
					},
					# Core Unit Identifier
					'nanometer' => {
						'name' => q(нанометр),
						'one' => q({0} нанометр),
						'other' => q({0} нанометр),
					},
					# Long Unit Identifier
					'length-nautical-mile' => {
						'name' => q(деңиз милясы),
						'one' => q({0} деңиз милясы),
						'other' => q({0} деңиз милясы),
					},
					# Core Unit Identifier
					'nautical-mile' => {
						'name' => q(деңиз милясы),
						'one' => q({0} деңиз милясы),
						'other' => q({0} деңиз милясы),
					},
					# Long Unit Identifier
					'length-parsec' => {
						'one' => q({0} парсек),
						'other' => q({0} парсек),
					},
					# Core Unit Identifier
					'parsec' => {
						'one' => q({0} парсек),
						'other' => q({0} парсек),
					},
					# Long Unit Identifier
					'length-picometer' => {
						'name' => q(пикометр),
						'one' => q({0} пикометр),
						'other' => q({0} пикометр),
					},
					# Core Unit Identifier
					'picometer' => {
						'name' => q(пикометр),
						'one' => q({0} пикометр),
						'other' => q({0} пикометр),
					},
					# Long Unit Identifier
					'length-point' => {
						'one' => q({0} чекит),
						'other' => q({0} чекит),
					},
					# Core Unit Identifier
					'point' => {
						'one' => q({0} чекит),
						'other' => q({0} чекит),
					},
					# Long Unit Identifier
					'length-solar-radius' => {
						'one' => q({0} күн радиусу),
						'other' => q({0} күн радиустары),
					},
					# Core Unit Identifier
					'solar-radius' => {
						'one' => q({0} күн радиусу),
						'other' => q({0} күн радиустары),
					},
					# Long Unit Identifier
					'light-candela' => {
						'name' => q(кандела),
						'one' => q({0} кандела),
						'other' => q({0} кандела),
					},
					# Core Unit Identifier
					'candela' => {
						'name' => q(кандела),
						'one' => q({0} кандела),
						'other' => q({0} кандела),
					},
					# Long Unit Identifier
					'light-lumen' => {
						'name' => q(люмен),
						'one' => q({0} люмен),
						'other' => q({0} люмен),
					},
					# Core Unit Identifier
					'lumen' => {
						'name' => q(люмен),
						'one' => q({0} люмен),
						'other' => q({0} люмен),
					},
					# Long Unit Identifier
					'light-lux' => {
						'one' => q({0} люкс),
						'other' => q({0} люкс),
					},
					# Core Unit Identifier
					'lux' => {
						'one' => q({0} люкс),
						'other' => q({0} люкс),
					},
					# Long Unit Identifier
					'light-solar-luminosity' => {
						'one' => q({0} күндүн жарык күчү),
						'other' => q({0} күндүн жарык күчү),
					},
					# Core Unit Identifier
					'solar-luminosity' => {
						'one' => q({0} күндүн жарык күчү),
						'other' => q({0} күндүн жарык күчү),
					},
					# Long Unit Identifier
					'mass-carat' => {
						'one' => q({0} карат),
						'other' => q({0} карат),
					},
					# Core Unit Identifier
					'carat' => {
						'one' => q({0} карат),
						'other' => q({0} карат),
					},
					# Long Unit Identifier
					'mass-earth-mass' => {
						'name' => q(Жер массасы),
						'one' => q({0} Жер массасы),
						'other' => q({0} Жер массалары),
					},
					# Core Unit Identifier
					'earth-mass' => {
						'name' => q(Жер массасы),
						'one' => q({0} Жер массасы),
						'other' => q({0} Жер массалары),
					},
					# Long Unit Identifier
					'mass-gram' => {
						'one' => q({0} грамм),
						'other' => q({0} грамм),
						'per' => q(граммына {0}),
					},
					# Core Unit Identifier
					'gram' => {
						'one' => q({0} грамм),
						'other' => q({0} грамм),
						'per' => q(граммына {0}),
					},
					# Long Unit Identifier
					'mass-kilogram' => {
						'name' => q(килограмм),
						'one' => q({0} килограмм),
						'other' => q({0} килограмм),
						'per' => q(килограммына {0}),
					},
					# Core Unit Identifier
					'kilogram' => {
						'name' => q(килограмм),
						'one' => q({0} килограмм),
						'other' => q({0} килограмм),
						'per' => q(килограммына {0}),
					},
					# Long Unit Identifier
					'mass-microgram' => {
						'name' => q(микрограмм),
						'one' => q({0} микрограмм),
						'other' => q({0} микрограмм),
					},
					# Core Unit Identifier
					'microgram' => {
						'name' => q(микрограмм),
						'one' => q({0} микрограмм),
						'other' => q({0} микрограмм),
					},
					# Long Unit Identifier
					'mass-milligram' => {
						'name' => q(миллиграмм),
						'one' => q({0} миллиграмм),
						'other' => q({0} миллиграмм),
					},
					# Core Unit Identifier
					'milligram' => {
						'name' => q(миллиграмм),
						'one' => q({0} миллиграмм),
						'other' => q({0} миллиграмм),
					},
					# Long Unit Identifier
					'mass-ounce' => {
						'name' => q(унция),
						'one' => q({0} унция),
						'other' => q({0} унция),
						'per' => q(унциясына {0}),
					},
					# Core Unit Identifier
					'ounce' => {
						'name' => q(унция),
						'one' => q({0} унция),
						'other' => q({0} унция),
						'per' => q(унциясына {0}),
					},
					# Long Unit Identifier
					'mass-ounce-troy' => {
						'name' => q(троя унциясы),
						'one' => q({0} троя унциясы),
						'other' => q({0} троя унциясы),
					},
					# Core Unit Identifier
					'ounce-troy' => {
						'name' => q(троя унциясы),
						'one' => q({0} троя унциясы),
						'other' => q({0} троя унциясы),
					},
					# Long Unit Identifier
					'mass-pound' => {
						'per' => q(фунтуна {0}),
					},
					# Core Unit Identifier
					'pound' => {
						'per' => q(фунтуна {0}),
					},
					# Long Unit Identifier
					'mass-solar-mass' => {
						'one' => q({0} күн массасы),
						'other' => q({0} күн массасы),
					},
					# Core Unit Identifier
					'solar-mass' => {
						'one' => q({0} күн массасы),
						'other' => q({0} күн массасы),
					},
					# Long Unit Identifier
					'mass-ton' => {
						'one' => q(Америкалык тонна),
						'other' => q({0} тонна),
					},
					# Core Unit Identifier
					'ton' => {
						'one' => q(Америкалык тонна),
						'other' => q({0} тонна),
					},
					# Long Unit Identifier
					'mass-tonne' => {
						'name' => q(метр тонна),
						'one' => q({0} метр тонна),
						'other' => q({0} метр тонна),
					},
					# Core Unit Identifier
					'tonne' => {
						'name' => q(метр тонна),
						'one' => q({0} метр тонна),
						'other' => q({0} метр тонна),
					},
					# Long Unit Identifier
					'power-gigawatt' => {
						'name' => q(гигаватт),
						'one' => q({0} гигаватт),
						'other' => q({0} гигаватт),
					},
					# Core Unit Identifier
					'gigawatt' => {
						'name' => q(гигаватт),
						'one' => q({0} гигаватт),
						'other' => q({0} гигаватт),
					},
					# Long Unit Identifier
					'power-horsepower' => {
						'name' => q(аттын күчү),
						'one' => q({0} аттын күчү),
						'other' => q({0} аттын күчү),
					},
					# Core Unit Identifier
					'horsepower' => {
						'name' => q(аттын күчү),
						'one' => q({0} аттын күчү),
						'other' => q({0} аттын күчү),
					},
					# Long Unit Identifier
					'power-kilowatt' => {
						'name' => q(киловатт),
						'one' => q({0} киловатт),
						'other' => q({0} киловатт),
					},
					# Core Unit Identifier
					'kilowatt' => {
						'name' => q(киловатт),
						'one' => q({0} киловатт),
						'other' => q({0} киловатт),
					},
					# Long Unit Identifier
					'power-megawatt' => {
						'name' => q(мегаватт),
						'one' => q({0} мегаватт),
						'other' => q({0} мегаватт),
					},
					# Core Unit Identifier
					'megawatt' => {
						'name' => q(мегаватт),
						'one' => q({0} мегаватт),
						'other' => q({0} мегаватт),
					},
					# Long Unit Identifier
					'power-milliwatt' => {
						'name' => q(милливатт),
						'one' => q({0} милливатт),
						'other' => q({0} милливатт),
					},
					# Core Unit Identifier
					'milliwatt' => {
						'name' => q(милливатт),
						'one' => q({0} милливатт),
						'other' => q({0} милливатт),
					},
					# Long Unit Identifier
					'power-watt' => {
						'one' => q({0} ватт),
						'other' => q({0} ватт),
					},
					# Core Unit Identifier
					'watt' => {
						'one' => q({0} ватт),
						'other' => q({0} ватт),
					},
					# Long Unit Identifier
					'power2' => {
						'1' => q(чарчы {0}),
						'one' => q(чарчы {0}),
						'other' => q(чарчы {0}),
					},
					# Core Unit Identifier
					'power2' => {
						'1' => q(чарчы {0}),
						'one' => q(чарчы {0}),
						'other' => q(чарчы {0}),
					},
					# Long Unit Identifier
					'power3' => {
						'1' => q(кубик {0}),
						'one' => q(кубик {0}),
						'other' => q(кубик {0}),
					},
					# Core Unit Identifier
					'power3' => {
						'1' => q(кубик {0}),
						'one' => q(кубик {0}),
						'other' => q(кубик {0}),
					},
					# Long Unit Identifier
					'pressure-atmosphere' => {
						'name' => q(атмосфера),
						'one' => q({0} атмосфера),
						'other' => q({0} атм),
					},
					# Core Unit Identifier
					'atmosphere' => {
						'name' => q(атмосфера),
						'one' => q({0} атмосфера),
						'other' => q({0} атм),
					},
					# Long Unit Identifier
					'pressure-hectopascal' => {
						'name' => q(гектопаскаль),
						'one' => q({0} гектопаскаль),
						'other' => q({0} гектопаскаль),
					},
					# Core Unit Identifier
					'hectopascal' => {
						'name' => q(гектопаскаль),
						'one' => q({0} гектопаскаль),
						'other' => q({0} гектопаскаль),
					},
					# Long Unit Identifier
					'pressure-inch-ofhg' => {
						'one' => q({0} дюйм сымап мамычасы),
						'other' => q({0} дюйм сымап мамычасы),
					},
					# Core Unit Identifier
					'inch-ofhg' => {
						'one' => q({0} дюйм сымап мамычасы),
						'other' => q({0} дюйм сымап мамычасы),
					},
					# Long Unit Identifier
					'pressure-megapascal' => {
						'name' => q(мегапаскаль),
						'one' => q({0} мегапаскаль),
						'other' => q({0} мегапаскаль),
					},
					# Core Unit Identifier
					'megapascal' => {
						'name' => q(мегапаскаль),
						'one' => q({0} мегапаскаль),
						'other' => q({0} мегапаскаль),
					},
					# Long Unit Identifier
					'pressure-millibar' => {
						'one' => q({0} миллибар),
						'other' => q({0} миллибар),
					},
					# Core Unit Identifier
					'millibar' => {
						'one' => q({0} миллибар),
						'other' => q({0} миллибар),
					},
					# Long Unit Identifier
					'pressure-millimeter-ofhg' => {
						'name' => q(миллиметр сымап мамычасы),
						'one' => q({0} миллиметр сымап мамычасы),
						'other' => q({0} миллиметр сымап мамычасы),
					},
					# Core Unit Identifier
					'millimeter-ofhg' => {
						'name' => q(миллиметр сымап мамычасы),
						'one' => q({0} миллиметр сымап мамычасы),
						'other' => q({0} миллиметр сымап мамычасы),
					},
					# Long Unit Identifier
					'pressure-pound-force-per-square-inch' => {
						'name' => q(чарчы дюймга фунт),
						'one' => q(чарчы дюймга {0} фунт),
						'other' => q(чарчы дюймга {0} фунт),
					},
					# Core Unit Identifier
					'pound-force-per-square-inch' => {
						'name' => q(чарчы дюймга фунт),
						'one' => q(чарчы дюймга {0} фунт),
						'other' => q(чарчы дюймга {0} фунт),
					},
					# Long Unit Identifier
					'speed-kilometer-per-hour' => {
						'name' => q(саатына километр),
						'one' => q(саатына {0} километр),
						'other' => q(саатына {0} километр),
					},
					# Core Unit Identifier
					'kilometer-per-hour' => {
						'name' => q(саатына километр),
						'one' => q(саатына {0} километр),
						'other' => q(саатына {0} километр),
					},
					# Long Unit Identifier
					'speed-knot' => {
						'name' => q(түйүн),
						'one' => q({0} түйүн),
						'other' => q({0} түйүн),
					},
					# Core Unit Identifier
					'knot' => {
						'name' => q(түйүн),
						'one' => q({0} түйүн),
						'other' => q({0} түйүн),
					},
					# Long Unit Identifier
					'speed-light-speed' => {
						'name' => q(жарык),
						'one' => q({0} жарык),
						'other' => q({0} жарык),
					},
					# Core Unit Identifier
					'light-speed' => {
						'name' => q(жарык),
						'one' => q({0} жарык),
						'other' => q({0} жарык),
					},
					# Long Unit Identifier
					'speed-meter-per-second' => {
						'name' => q(секундасына метр),
						'one' => q(секундасына {0} метр),
						'other' => q(секундасына {0} метр),
					},
					# Core Unit Identifier
					'meter-per-second' => {
						'name' => q(секундасына метр),
						'one' => q(секундасына {0} метр),
						'other' => q(секундасына {0} метр),
					},
					# Long Unit Identifier
					'speed-mile-per-hour' => {
						'name' => q(саатына миля),
						'one' => q(саатына {0} миля),
						'other' => q(саатына {0} миля),
					},
					# Core Unit Identifier
					'mile-per-hour' => {
						'name' => q(саатына миля),
						'one' => q(саатына {0} миля),
						'other' => q(саатына {0} миля),
					},
					# Long Unit Identifier
					'temperature-celsius' => {
						'name' => q(Цельсий градусу),
						'one' => q({0} Цельсий градусу),
						'other' => q({0} Цельсий градусу),
					},
					# Core Unit Identifier
					'celsius' => {
						'name' => q(Цельсий градусу),
						'one' => q({0} Цельсий градусу),
						'other' => q({0} Цельсий градусу),
					},
					# Long Unit Identifier
					'temperature-fahrenheit' => {
						'name' => q(Фаренгейт градусу),
						'one' => q({0} Фаренгейт градусу),
						'other' => q({0} Фаренгейт градусу),
					},
					# Core Unit Identifier
					'fahrenheit' => {
						'name' => q(Фаренгейт градусу),
						'one' => q({0} Фаренгейт градусу),
						'other' => q({0} Фаренгейт градусу),
					},
					# Long Unit Identifier
					'temperature-generic' => {
						'one' => q({0} градус),
						'other' => q({0} градус),
					},
					# Core Unit Identifier
					'generic' => {
						'one' => q({0} градус),
						'other' => q({0} градус),
					},
					# Long Unit Identifier
					'temperature-kelvin' => {
						'name' => q(Келвин градусу),
						'one' => q({0} Келвин градусу),
						'other' => q({0} Келвин градусу),
					},
					# Core Unit Identifier
					'kelvin' => {
						'name' => q(Келвин градусу),
						'one' => q({0} Келвин градусу),
						'other' => q({0} Келвин градусу),
					},
					# Long Unit Identifier
					'torque-newton-meter' => {
						'name' => q(ньютон-метрлери),
						'one' => q(ньютон-метри),
						'other' => q({0} ньютон-метрлери),
					},
					# Core Unit Identifier
					'newton-meter' => {
						'name' => q(ньютон-метрлери),
						'one' => q(ньютон-метри),
						'other' => q({0} ньютон-метрлери),
					},
					# Long Unit Identifier
					'volume-acre-foot' => {
						'one' => q({0} акр-фут),
						'other' => q({0} акр-фут),
					},
					# Core Unit Identifier
					'acre-foot' => {
						'one' => q({0} акр-фут),
						'other' => q({0} акр-фут),
					},
					# Long Unit Identifier
					'volume-bushel' => {
						'one' => q({0} бушел),
						'other' => q({0} бушел),
					},
					# Core Unit Identifier
					'bushel' => {
						'one' => q({0} бушел),
						'other' => q({0} бушел),
					},
					# Long Unit Identifier
					'volume-centiliter' => {
						'name' => q(сантилитр),
						'one' => q({0} сантилитр),
						'other' => q({0} сантилитр),
					},
					# Core Unit Identifier
					'centiliter' => {
						'name' => q(сантилитр),
						'one' => q({0} сантилитр),
						'other' => q({0} сантилитр),
					},
					# Long Unit Identifier
					'volume-cubic-centimeter' => {
						'name' => q(куб сантиметр),
						'one' => q({0} куб сантиметр),
						'other' => q({0} куб сантиметр),
						'per' => q(куб сантиметрине {0}),
					},
					# Core Unit Identifier
					'cubic-centimeter' => {
						'name' => q(куб сантиметр),
						'one' => q({0} куб сантиметр),
						'other' => q({0} куб сантиметр),
						'per' => q(куб сантиметрине {0}),
					},
					# Long Unit Identifier
					'volume-cubic-foot' => {
						'name' => q(куб фут),
						'one' => q({0} куб фут),
						'other' => q({0} куб фут),
					},
					# Core Unit Identifier
					'cubic-foot' => {
						'name' => q(куб фут),
						'one' => q({0} куб фут),
						'other' => q({0} куб фут),
					},
					# Long Unit Identifier
					'volume-cubic-inch' => {
						'name' => q(куб дюйм),
						'one' => q({0} куб дюйм),
						'other' => q({0} куб дюйм),
					},
					# Core Unit Identifier
					'cubic-inch' => {
						'name' => q(куб дюйм),
						'one' => q({0} куб дюйм),
						'other' => q({0} куб дюйм),
					},
					# Long Unit Identifier
					'volume-cubic-kilometer' => {
						'one' => q({0} куб километр),
						'other' => q({0} куб километр),
					},
					# Core Unit Identifier
					'cubic-kilometer' => {
						'one' => q({0} куб километр),
						'other' => q({0} куб километр),
					},
					# Long Unit Identifier
					'volume-cubic-meter' => {
						'name' => q(куб метр),
						'one' => q({0} куб метр),
						'other' => q({0} куб метр),
						'per' => q(куб метрине {0}),
					},
					# Core Unit Identifier
					'cubic-meter' => {
						'name' => q(куб метр),
						'one' => q({0} куб метр),
						'other' => q({0} куб метр),
						'per' => q(куб метрине {0}),
					},
					# Long Unit Identifier
					'volume-cubic-mile' => {
						'name' => q(куб миля),
						'one' => q({0} куб миля),
						'other' => q({0} куб миля),
					},
					# Core Unit Identifier
					'cubic-mile' => {
						'name' => q(куб миля),
						'one' => q({0} куб миля),
						'other' => q({0} куб миля),
					},
					# Long Unit Identifier
					'volume-cubic-yard' => {
						'name' => q(куб ярд),
						'one' => q({0} куб ярд),
						'other' => q({0} куб ярд),
					},
					# Core Unit Identifier
					'cubic-yard' => {
						'name' => q(куб ярд),
						'one' => q({0} куб ярд),
						'other' => q({0} куб ярд),
					},
					# Long Unit Identifier
					'volume-cup' => {
						'one' => q({0} чөйчөк),
						'other' => q({0} чөйчөк),
					},
					# Core Unit Identifier
					'cup' => {
						'one' => q({0} чөйчөк),
						'other' => q({0} чөйчөк),
					},
					# Long Unit Identifier
					'volume-deciliter' => {
						'name' => q(децилитр),
						'one' => q({0} децилитр),
						'other' => q({0} децилитр),
					},
					# Core Unit Identifier
					'deciliter' => {
						'name' => q(децилитр),
						'one' => q({0} децилитр),
						'other' => q({0} децилитр),
					},
					# Long Unit Identifier
					'volume-dram' => {
						'name' => q(драм),
						'one' => q({0} драм),
						'other' => q({0} драм),
					},
					# Core Unit Identifier
					'dram' => {
						'name' => q(драм),
						'one' => q({0} драм),
						'other' => q({0} драм),
					},
					# Long Unit Identifier
					'volume-fluid-ounce' => {
						'name' => q(суюк унция),
						'one' => q({0} суюк унция),
						'other' => q({0} суюк унция),
					},
					# Core Unit Identifier
					'fluid-ounce' => {
						'name' => q(суюк унция),
						'one' => q({0} суюк унция),
						'other' => q({0} суюк унция),
					},
					# Long Unit Identifier
					'volume-fluid-ounce-imperial' => {
						'name' => q(Имп. суюктук унциялары),
						'one' => q({0} Имп. суюктук унциялары),
						'other' => q({0} имп. суюктук унциясы),
					},
					# Core Unit Identifier
					'fluid-ounce-imperial' => {
						'name' => q(Имп. суюктук унциялары),
						'one' => q({0} Имп. суюктук унциялары),
						'other' => q({0} имп. суюктук унциясы),
					},
					# Long Unit Identifier
					'volume-gallon' => {
						'name' => q(галлон),
						'one' => q({0} галлон),
						'other' => q({0} галлон),
						'per' => q(галлонуна {0}),
					},
					# Core Unit Identifier
					'gallon' => {
						'name' => q(галлон),
						'one' => q({0} галлон),
						'other' => q({0} галлон),
						'per' => q(галлонуна {0}),
					},
					# Long Unit Identifier
					'volume-gallon-imperial' => {
						'name' => q(англ. галлону),
						'one' => q({0} англ. галлону),
						'other' => q({0} англ. галлону),
						'per' => q(англ. галлонуна {0}),
					},
					# Core Unit Identifier
					'gallon-imperial' => {
						'name' => q(англ. галлону),
						'one' => q({0} англ. галлону),
						'other' => q({0} англ. галлону),
						'per' => q(англ. галлонуна {0}),
					},
					# Long Unit Identifier
					'volume-hectoliter' => {
						'name' => q(гектолитр),
						'one' => q({0} гектолитр),
						'other' => q({0} гектолитр),
					},
					# Core Unit Identifier
					'hectoliter' => {
						'name' => q(гектолитр),
						'one' => q({0} гектолитр),
						'other' => q({0} гектолитр),
					},
					# Long Unit Identifier
					'volume-liter' => {
						'one' => q({0} литр),
						'other' => q({0} литр),
						'per' => q(литрине {0}),
					},
					# Core Unit Identifier
					'liter' => {
						'one' => q({0} литр),
						'other' => q({0} литр),
						'per' => q(литрине {0}),
					},
					# Long Unit Identifier
					'volume-megaliter' => {
						'name' => q(мегалитр),
						'one' => q({0} мегалитр),
						'other' => q({0} мегалитр),
					},
					# Core Unit Identifier
					'megaliter' => {
						'name' => q(мегалитр),
						'one' => q({0} мегалитр),
						'other' => q({0} мегалитр),
					},
					# Long Unit Identifier
					'volume-milliliter' => {
						'name' => q(миллилитр),
						'one' => q({0} миллилитр),
						'other' => q({0} миллилитр),
					},
					# Core Unit Identifier
					'milliliter' => {
						'name' => q(миллилитр),
						'one' => q({0} миллилитр),
						'other' => q({0} миллилитр),
					},
					# Long Unit Identifier
					'volume-pint' => {
						'name' => q(пинта),
						'one' => q({0} пинта),
						'other' => q({0} пинта),
					},
					# Core Unit Identifier
					'pint' => {
						'name' => q(пинта),
						'one' => q({0} пинта),
						'other' => q({0} пинта),
					},
					# Long Unit Identifier
					'volume-pint-metric' => {
						'name' => q(метрикалык пинта),
						'one' => q({0} метрикалык пинта),
						'other' => q({0} метрикалык пинта),
					},
					# Core Unit Identifier
					'pint-metric' => {
						'name' => q(метрикалык пинта),
						'one' => q({0} метрикалык пинта),
						'other' => q({0} метрикалык пинта),
					},
					# Long Unit Identifier
					'volume-quart' => {
						'name' => q(кварта),
						'one' => q({0} кварта),
						'other' => q({0} кварта),
					},
					# Core Unit Identifier
					'quart' => {
						'name' => q(кварта),
						'one' => q({0} кварта),
						'other' => q({0} кварта),
					},
					# Long Unit Identifier
					'volume-tablespoon' => {
						'name' => q(чоң кашык),
						'one' => q({0} чоң кашык),
						'other' => q({0} чоң кашык),
					},
					# Core Unit Identifier
					'tablespoon' => {
						'name' => q(чоң кашык),
						'one' => q({0} чоң кашык),
						'other' => q({0} чоң кашык),
					},
					# Long Unit Identifier
					'volume-teaspoon' => {
						'name' => q(чай кашык),
						'one' => q({0} чай кашык),
						'other' => q({0} чай кашык),
					},
					# Core Unit Identifier
					'teaspoon' => {
						'name' => q(чай кашык),
						'one' => q({0} чай кашык),
						'other' => q({0} чай кашык),
					},
				},
				'narrow' => {
					# Long Unit Identifier
					'angle-arc-minute' => {
						'one' => q({0}′),
						'other' => q({0}′),
					},
					# Core Unit Identifier
					'arc-minute' => {
						'one' => q({0}′),
						'other' => q({0}′),
					},
					# Long Unit Identifier
					'angle-arc-second' => {
						'one' => q({0}″),
						'other' => q({0}″),
					},
					# Core Unit Identifier
					'arc-second' => {
						'one' => q({0}″),
						'other' => q({0}″),
					},
					# Long Unit Identifier
					'angle-degree' => {
						'one' => q({0}°),
						'other' => q({0}°),
					},
					# Core Unit Identifier
					'degree' => {
						'one' => q({0}°),
						'other' => q({0}°),
					},
					# Long Unit Identifier
					'area-square-mile' => {
						'one' => q({0} ми²),
						'other' => q({0} ми²),
					},
					# Core Unit Identifier
					'square-mile' => {
						'one' => q({0} ми²),
						'other' => q({0} ми²),
					},
					# Long Unit Identifier
					'concentr-millimole-per-liter' => {
						'one' => q({0}ммоль/л),
						'other' => q({0}ммоль/л),
					},
					# Core Unit Identifier
					'millimole-per-liter' => {
						'one' => q({0}ммоль/л),
						'other' => q({0}ммоль/л),
					},
					# Long Unit Identifier
					'concentr-percent' => {
						'name' => q(%),
					},
					# Core Unit Identifier
					'percent' => {
						'name' => q(%),
					},
					# Long Unit Identifier
					'concentr-portion-per-1e9' => {
						'name' => q(мкг/л),
						'one' => q({0} мкг/л),
						'other' => q({0} мкг/л),
					},
					# Core Unit Identifier
					'portion-per-1e9' => {
						'name' => q(мкг/л),
						'one' => q({0} мкг/л),
						'other' => q({0} мкг/л),
					},
					# Long Unit Identifier
					'consumption-liter-per-100-kilometer' => {
						'name' => q(100 км/л),
					},
					# Core Unit Identifier
					'liter-per-100-kilometer' => {
						'name' => q(100 км/л),
					},
					# Long Unit Identifier
					'consumption-mile-per-gallon-imperial' => {
						'one' => q({0} мил/анг.гал),
						'other' => q({0}мил/англ.гал),
					},
					# Core Unit Identifier
					'mile-per-gallon-imperial' => {
						'one' => q({0} мил/анг.гал),
						'other' => q({0}мил/англ.гал),
					},
					# Long Unit Identifier
					'coordinate' => {
						'north' => q({0}Тн),
						'south' => q({0}Тш),
						'west' => q({0}Б),
					},
					# Core Unit Identifier
					'coordinate' => {
						'north' => q({0}Тн),
						'south' => q({0}Тш),
						'west' => q({0}Б),
					},
					# Long Unit Identifier
					'duration-day' => {
						'one' => q({0} кн),
						'other' => q({0} кн),
					},
					# Core Unit Identifier
					'day' => {
						'one' => q({0} кн),
						'other' => q({0} кн),
					},
					# Long Unit Identifier
					'duration-decade' => {
						'one' => q({0} дек.),
						'other' => q({0} дек.),
					},
					# Core Unit Identifier
					'decade' => {
						'one' => q({0} дек.),
						'other' => q({0} дек.),
					},
					# Long Unit Identifier
					'duration-millisecond' => {
						'name' => q(миллисек),
					},
					# Core Unit Identifier
					'millisecond' => {
						'name' => q(миллисек),
					},
					# Long Unit Identifier
					'duration-minute' => {
						'name' => q(мүн),
					},
					# Core Unit Identifier
					'minute' => {
						'name' => q(мүн),
					},
					# Long Unit Identifier
					'duration-night' => {
						'name' => q(түн),
						'one' => q({0}/түн),
						'other' => q({0}/түн),
						'per' => q({0}/түн),
					},
					# Core Unit Identifier
					'night' => {
						'name' => q(түн),
						'one' => q({0}/түн),
						'other' => q({0}/түн),
						'per' => q({0}/түн),
					},
					# Long Unit Identifier
					'duration-quarter' => {
						'one' => q({0}/ч),
						'other' => q({0}/ч),
					},
					# Core Unit Identifier
					'quarter' => {
						'one' => q({0}/ч),
						'other' => q({0}/ч),
					},
					# Long Unit Identifier
					'duration-second' => {
						'name' => q(сек),
					},
					# Core Unit Identifier
					'second' => {
						'name' => q(сек),
					},
					# Long Unit Identifier
					'duration-week' => {
						'name' => q(апт),
						'one' => q({0} ап),
						'other' => q({0} ап),
					},
					# Core Unit Identifier
					'week' => {
						'name' => q(апт),
						'one' => q({0} ап),
						'other' => q({0} ап),
					},
					# Long Unit Identifier
					'duration-year' => {
						'one' => q({0} ж.),
						'other' => q({0} ж.),
					},
					# Core Unit Identifier
					'year' => {
						'one' => q({0} ж.),
						'other' => q({0} ж.),
					},
					# Long Unit Identifier
					'energy-therm-us' => {
						'one' => q({0}термАКШ),
						'other' => q({0}термАКШ),
					},
					# Core Unit Identifier
					'therm-us' => {
						'one' => q({0}термАКШ),
						'other' => q({0}термАКШ),
					},
					# Long Unit Identifier
					'force-kilowatt-hour-per-100-kilometer' => {
						'one' => q({0}кВт*с/100км),
						'other' => q({0}кВт*с/100км),
					},
					# Core Unit Identifier
					'kilowatt-hour-per-100-kilometer' => {
						'one' => q({0}кВт*с/100км),
						'other' => q({0}кВт*с/100км),
					},
					# Long Unit Identifier
					'graphics-dot' => {
						'one' => q({0}грф чкт),
						'other' => q({0}грф чкт),
					},
					# Core Unit Identifier
					'dot' => {
						'one' => q({0}грф чкт),
						'other' => q({0}грф чкт),
					},
					# Long Unit Identifier
					'graphics-dot-per-centimeter' => {
						'one' => q({0}dpcm),
						'other' => q({0}dpcm),
					},
					# Core Unit Identifier
					'dot-per-centimeter' => {
						'one' => q({0}dpcm),
						'other' => q({0}dpcm),
					},
					# Long Unit Identifier
					'length-inch' => {
						'per' => q({0} дюйм),
					},
					# Core Unit Identifier
					'inch' => {
						'per' => q({0} дюйм),
					},
					# Long Unit Identifier
					'length-meter' => {
						'one' => q({0}м),
						'other' => q({0}м),
					},
					# Core Unit Identifier
					'meter' => {
						'one' => q({0}м),
						'other' => q({0}м),
					},
					# Long Unit Identifier
					'length-millimeter' => {
						'name' => q(мм),
					},
					# Core Unit Identifier
					'millimeter' => {
						'name' => q(мм),
					},
					# Long Unit Identifier
					'length-nautical-mile' => {
						'one' => q({0}nmi),
						'other' => q({0}nmi),
					},
					# Core Unit Identifier
					'nautical-mile' => {
						'one' => q({0}nmi),
						'other' => q({0}nmi),
					},
					# Long Unit Identifier
					'mass-earth-mass' => {
						'name' => q(M⊕),
					},
					# Core Unit Identifier
					'earth-mass' => {
						'name' => q(M⊕),
					},
					# Long Unit Identifier
					'mass-gram' => {
						'per' => q({0}/гр),
					},
					# Core Unit Identifier
					'gram' => {
						'per' => q({0}/гр),
					},
					# Long Unit Identifier
					'mass-ounce' => {
						'per' => q({0}/унц.),
					},
					# Core Unit Identifier
					'ounce' => {
						'per' => q({0}/унц.),
					},
					# Long Unit Identifier
					'mass-pound' => {
						'one' => q({0}#),
						'other' => q({0}#),
						'per' => q({0}/фунт),
					},
					# Core Unit Identifier
					'pound' => {
						'one' => q({0}#),
						'other' => q({0}#),
						'per' => q({0}/фунт),
					},
					# Long Unit Identifier
					'mass-ton' => {
						'name' => q(тонна),
						'one' => q({0} тон.),
						'other' => q({0} тон.),
					},
					# Core Unit Identifier
					'ton' => {
						'name' => q(тонна),
						'one' => q({0} тон.),
						'other' => q({0} тон.),
					},
					# Long Unit Identifier
					'power-horsepower' => {
						'one' => q({0} ат),
						'other' => q({0} ат),
					},
					# Core Unit Identifier
					'horsepower' => {
						'one' => q({0} ат),
						'other' => q({0} ат),
					},
					# Long Unit Identifier
					'pressure-millibar' => {
						'one' => q({0} мб),
						'other' => q({0} мб),
					},
					# Core Unit Identifier
					'millibar' => {
						'one' => q({0} мб),
						'other' => q({0} мб),
					},
					# Long Unit Identifier
					'speed-light-speed' => {
						'name' => q(жарык),
						'one' => q({0} жарык),
						'other' => q({0} жарык),
					},
					# Core Unit Identifier
					'light-speed' => {
						'name' => q(жарык),
						'one' => q({0} жарык),
						'other' => q({0} жарык),
					},
					# Long Unit Identifier
					'speed-meter-per-second' => {
						'one' => q({0} м/с),
						'other' => q({0} м/с),
					},
					# Core Unit Identifier
					'meter-per-second' => {
						'one' => q({0} м/с),
						'other' => q({0} м/с),
					},
					# Long Unit Identifier
					'speed-mile-per-hour' => {
						'one' => q({0} чак/с),
						'other' => q({0} чак/с),
					},
					# Core Unit Identifier
					'mile-per-hour' => {
						'one' => q({0} чак/с),
						'other' => q({0} чак/с),
					},
					# Long Unit Identifier
					'temperature-celsius' => {
						'name' => q(°C),
						'one' => q({0}°),
						'other' => q({0}°),
					},
					# Core Unit Identifier
					'celsius' => {
						'name' => q(°C),
						'one' => q({0}°),
						'other' => q({0}°),
					},
					# Long Unit Identifier
					'volume-dessert-spoon' => {
						'name' => q(dsp),
						'one' => q({0}dsp),
						'other' => q({0}dsp),
					},
					# Core Unit Identifier
					'dessert-spoon' => {
						'name' => q(dsp),
						'one' => q({0}dsp),
						'other' => q({0}dsp),
					},
					# Long Unit Identifier
					'volume-dessert-spoon-imperial' => {
						'name' => q(dsp Imp),
						'one' => q({0}dsp-Imp),
						'other' => q({0}dsp-Imp),
					},
					# Core Unit Identifier
					'dessert-spoon-imperial' => {
						'name' => q(dsp Imp),
						'one' => q({0}dsp-Imp),
						'other' => q({0}dsp-Imp),
					},
					# Long Unit Identifier
					'volume-dram' => {
						'one' => q({0}fl.dr.),
						'other' => q({0}fl.dr.),
					},
					# Core Unit Identifier
					'dram' => {
						'one' => q({0}fl.dr.),
						'other' => q({0}fl.dr.),
					},
					# Long Unit Identifier
					'volume-fluid-ounce-imperial' => {
						'one' => q({0}fl oz Im),
						'other' => q({0}fl oz Im),
					},
					# Core Unit Identifier
					'fluid-ounce-imperial' => {
						'one' => q({0}fl oz Im),
						'other' => q({0}fl oz Im),
					},
					# Long Unit Identifier
					'volume-gallon-imperial' => {
						'one' => q({0}англ.гал),
						'other' => q({0}англ.гал),
					},
					# Core Unit Identifier
					'gallon-imperial' => {
						'one' => q({0}англ.гал),
						'other' => q({0}англ.гал),
					},
					# Long Unit Identifier
					'volume-pint-metric' => {
						'name' => q(пт),
					},
					# Core Unit Identifier
					'pint-metric' => {
						'name' => q(пт),
					},
					# Long Unit Identifier
					'volume-quart-imperial' => {
						'one' => q({0}qt-Imp.),
						'other' => q({0}qt-Imp.),
					},
					# Core Unit Identifier
					'quart-imperial' => {
						'one' => q({0}qt-Imp.),
						'other' => q({0}qt-Imp.),
					},
					# Long Unit Identifier
					'volume-tablespoon' => {
						'one' => q({0}чң.кш),
						'other' => q({0}чң.кш),
					},
					# Core Unit Identifier
					'tablespoon' => {
						'one' => q({0}чң.кш),
						'other' => q({0}чң.кш),
					},
					# Long Unit Identifier
					'volume-teaspoon' => {
						'one' => q({0}чй.кш),
						'other' => q({0}чй.кш),
					},
					# Core Unit Identifier
					'teaspoon' => {
						'one' => q({0}чй.кш),
						'other' => q({0}чй.кш),
					},
				},
				'short' => {
					# Long Unit Identifier
					'' => {
						'name' => q(багыт),
					},
					# Core Unit Identifier
					'' => {
						'name' => q(багыт),
					},
					# Long Unit Identifier
					'10p-1' => {
						'1' => q(д{0}),
					},
					# Core Unit Identifier
					'1' => {
						'1' => q(д{0}),
					},
					# Long Unit Identifier
					'10p-12' => {
						'1' => q(п{0}),
					},
					# Core Unit Identifier
					'12' => {
						'1' => q(п{0}),
					},
					# Long Unit Identifier
					'10p-15' => {
						'1' => q(ф{0}),
					},
					# Core Unit Identifier
					'15' => {
						'1' => q(ф{0}),
					},
					# Long Unit Identifier
					'10p-2' => {
						'1' => q(ц{0}),
					},
					# Core Unit Identifier
					'2' => {
						'1' => q(ц{0}),
					},
					# Long Unit Identifier
					'10p-21' => {
						'1' => q(з{0}),
					},
					# Core Unit Identifier
					'21' => {
						'1' => q(з{0}),
					},
					# Long Unit Identifier
					'10p-24' => {
						'1' => q(й{0}),
					},
					# Core Unit Identifier
					'24' => {
						'1' => q(й{0}),
					},
					# Long Unit Identifier
					'10p-3' => {
						'1' => q(м{0}),
					},
					# Core Unit Identifier
					'3' => {
						'1' => q(м{0}),
					},
					# Long Unit Identifier
					'10p-9' => {
						'1' => q(н{0}),
					},
					# Core Unit Identifier
					'9' => {
						'1' => q(н{0}),
					},
					# Long Unit Identifier
					'10p1' => {
						'1' => q(да{0}),
					},
					# Core Unit Identifier
					'10p1' => {
						'1' => q(да{0}),
					},
					# Long Unit Identifier
					'10p15' => {
						'1' => q(П{0}),
					},
					# Core Unit Identifier
					'10p15' => {
						'1' => q(П{0}),
					},
					# Long Unit Identifier
					'10p2' => {
						'1' => q(г{0}),
					},
					# Core Unit Identifier
					'10p2' => {
						'1' => q(г{0}),
					},
					# Long Unit Identifier
					'10p21' => {
						'1' => q(З{0}),
					},
					# Core Unit Identifier
					'10p21' => {
						'1' => q(З{0}),
					},
					# Long Unit Identifier
					'10p24' => {
						'1' => q(Й{0}),
					},
					# Core Unit Identifier
					'10p24' => {
						'1' => q(Й{0}),
					},
					# Long Unit Identifier
					'10p3' => {
						'1' => q(к{0}),
					},
					# Core Unit Identifier
					'10p3' => {
						'1' => q(к{0}),
					},
					# Long Unit Identifier
					'10p9' => {
						'1' => q(Г{0}),
					},
					# Core Unit Identifier
					'10p9' => {
						'1' => q(Г{0}),
					},
					# Long Unit Identifier
					'acceleration-g-force' => {
						'name' => q(оордук күчү),
						'one' => q({0} о.к.),
						'other' => q({0} о.к.),
					},
					# Core Unit Identifier
					'g-force' => {
						'name' => q(оордук күчү),
						'one' => q({0} о.к.),
						'other' => q({0} о.к.),
					},
					# Long Unit Identifier
					'acceleration-meter-per-square-second' => {
						'name' => q(метр/сек²),
						'one' => q({0} м/сек²),
						'other' => q({0} м/сек²),
					},
					# Core Unit Identifier
					'meter-per-square-second' => {
						'name' => q(метр/сек²),
						'one' => q({0} м/сек²),
						'other' => q({0} м/сек²),
					},
					# Long Unit Identifier
					'angle-arc-minute' => {
						'name' => q(аркмүн),
						'one' => q({0} аркмүн),
						'other' => q({0} аркмүн),
					},
					# Core Unit Identifier
					'arc-minute' => {
						'name' => q(аркмүн),
						'one' => q({0} аркмүн),
						'other' => q({0} аркмүн),
					},
					# Long Unit Identifier
					'angle-arc-second' => {
						'name' => q(арксек),
						'one' => q({0} арксек),
						'other' => q({0} арксек),
					},
					# Core Unit Identifier
					'arc-second' => {
						'name' => q(арксек),
						'one' => q({0} арксек),
						'other' => q({0} арксек),
					},
					# Long Unit Identifier
					'angle-degree' => {
						'name' => q(градус),
						'one' => q({0} град),
						'other' => q({0} град),
					},
					# Core Unit Identifier
					'degree' => {
						'name' => q(градус),
						'one' => q({0} град),
						'other' => q({0} град),
					},
					# Long Unit Identifier
					'angle-radian' => {
						'name' => q(рад.),
						'one' => q({0} рад),
						'other' => q({0} рад.),
					},
					# Core Unit Identifier
					'radian' => {
						'name' => q(рад.),
						'one' => q({0} рад),
						'other' => q({0} рад.),
					},
					# Long Unit Identifier
					'area-acre' => {
						'name' => q(акр),
						'one' => q({0} акр),
						'other' => q({0} акр),
					},
					# Core Unit Identifier
					'acre' => {
						'name' => q(акр),
						'one' => q({0} акр),
						'other' => q({0} акр),
					},
					# Long Unit Identifier
					'area-hectare' => {
						'name' => q(гектар),
						'one' => q({0} га),
						'other' => q({0} га),
					},
					# Core Unit Identifier
					'hectare' => {
						'name' => q(гектар),
						'one' => q({0} га),
						'other' => q({0} га),
					},
					# Long Unit Identifier
					'area-square-centimeter' => {
						'name' => q(см²),
						'one' => q({0} см²),
						'other' => q({0} см²),
						'per' => q({0}/см²),
					},
					# Core Unit Identifier
					'square-centimeter' => {
						'name' => q(см²),
						'one' => q({0} см²),
						'other' => q({0} см²),
						'per' => q({0}/см²),
					},
					# Long Unit Identifier
					'area-square-foot' => {
						'name' => q(чарчы фут),
						'one' => q({0} фут²),
						'other' => q({0} фут²),
					},
					# Core Unit Identifier
					'square-foot' => {
						'name' => q(чарчы фут),
						'one' => q({0} фут²),
						'other' => q({0} фут²),
					},
					# Long Unit Identifier
					'area-square-inch' => {
						'name' => q(дюйм²),
						'one' => q({0} дюйм²),
						'other' => q({0} дюйм²),
						'per' => q({0}/дюйм²),
					},
					# Core Unit Identifier
					'square-inch' => {
						'name' => q(дюйм²),
						'one' => q({0} дюйм²),
						'other' => q({0} дюйм²),
						'per' => q({0}/дюйм²),
					},
					# Long Unit Identifier
					'area-square-kilometer' => {
						'name' => q(км²),
						'one' => q({0} км²),
						'other' => q({0} км²),
						'per' => q({0}/км²),
					},
					# Core Unit Identifier
					'square-kilometer' => {
						'name' => q(км²),
						'one' => q({0} км²),
						'other' => q({0} км²),
						'per' => q({0}/км²),
					},
					# Long Unit Identifier
					'area-square-meter' => {
						'name' => q(метр²),
						'one' => q({0} м²),
						'other' => q({0} м²),
						'per' => q({0}/м²),
					},
					# Core Unit Identifier
					'square-meter' => {
						'name' => q(метр²),
						'one' => q({0} м²),
						'other' => q({0} м²),
						'per' => q({0}/м²),
					},
					# Long Unit Identifier
					'area-square-mile' => {
						'name' => q(чарчы миля),
						'one' => q({0} мл²),
						'other' => q({0} мл²),
						'per' => q({0}/ми²),
					},
					# Core Unit Identifier
					'square-mile' => {
						'name' => q(чарчы миля),
						'one' => q({0} мл²),
						'other' => q({0} мл²),
						'per' => q({0}/ми²),
					},
					# Long Unit Identifier
					'area-square-yard' => {
						'name' => q(ярд²),
						'one' => q({0} ярд²),
						'other' => q({0} ярд²),
					},
					# Core Unit Identifier
					'square-yard' => {
						'name' => q(ярд²),
						'one' => q({0} ярд²),
						'other' => q({0} ярд²),
					},
					# Long Unit Identifier
					'concentr-item' => {
						'name' => q(нерсе),
						'one' => q({0} нерсе),
						'other' => q({0} нерсе),
					},
					# Core Unit Identifier
					'item' => {
						'name' => q(нерсе),
						'one' => q({0} нерсе),
						'other' => q({0} нерсе),
					},
					# Long Unit Identifier
					'concentr-karat' => {
						'name' => q(карат),
						'one' => q({0} кт),
						'other' => q({0} кт),
					},
					# Core Unit Identifier
					'karat' => {
						'name' => q(карат),
						'one' => q({0} кт),
						'other' => q({0} кт),
					},
					# Long Unit Identifier
					'concentr-milligram-ofglucose-per-deciliter' => {
						'name' => q(мг/дл),
						'one' => q({0} мг/дл),
						'other' => q({0} мг/дл),
					},
					# Core Unit Identifier
					'milligram-ofglucose-per-deciliter' => {
						'name' => q(мг/дл),
						'one' => q({0} мг/дл),
						'other' => q({0} мг/дл),
					},
					# Long Unit Identifier
					'concentr-millimole-per-liter' => {
						'name' => q(миллимоль/литр),
						'one' => q({0} ммоль/л),
						'other' => q({0} ммоль/л),
					},
					# Core Unit Identifier
					'millimole-per-liter' => {
						'name' => q(миллимоль/литр),
						'one' => q({0} ммоль/л),
						'other' => q({0} ммоль/л),
					},
					# Long Unit Identifier
					'concentr-mole' => {
						'name' => q(моль),
						'one' => q({0} моль),
						'other' => q({0} моль),
					},
					# Core Unit Identifier
					'mole' => {
						'name' => q(моль),
						'one' => q({0} моль),
						'other' => q({0} моль),
					},
					# Long Unit Identifier
					'concentr-percent' => {
						'name' => q(пайыз),
					},
					# Core Unit Identifier
					'percent' => {
						'name' => q(пайыз),
					},
					# Long Unit Identifier
					'concentr-permille' => {
						'name' => q(промилле),
					},
					# Core Unit Identifier
					'permille' => {
						'name' => q(промилле),
					},
					# Long Unit Identifier
					'concentr-permillion' => {
						'name' => q(миллионго/бөлүк),
					},
					# Core Unit Identifier
					'permillion' => {
						'name' => q(миллионго/бөлүк),
					},
					# Long Unit Identifier
					'concentr-portion-per-1e9' => {
						'name' => q(мкг/л),
						'one' => q({0} мкг/л),
						'other' => q({0} мкг/л),
					},
					# Core Unit Identifier
					'portion-per-1e9' => {
						'name' => q(мкг/л),
						'one' => q({0} мкг/л),
						'other' => q({0} мкг/л),
					},
					# Long Unit Identifier
					'consumption-liter-per-100-kilometer' => {
						'name' => q(л/100 км),
						'one' => q({0} л/100км),
						'other' => q({0} л/100км),
					},
					# Core Unit Identifier
					'liter-per-100-kilometer' => {
						'name' => q(л/100 км),
						'one' => q({0} л/100км),
						'other' => q({0} л/100км),
					},
					# Long Unit Identifier
					'consumption-liter-per-kilometer' => {
						'name' => q(литр/км),
						'one' => q({0} л/км),
						'other' => q({0} л/км),
					},
					# Core Unit Identifier
					'liter-per-kilometer' => {
						'name' => q(литр/км),
						'one' => q({0} л/км),
						'other' => q({0} л/км),
					},
					# Long Unit Identifier
					'consumption-mile-per-gallon' => {
						'name' => q(мил/гал),
						'one' => q({0} мил/гал),
						'other' => q({0} мил/гал),
					},
					# Core Unit Identifier
					'mile-per-gallon' => {
						'name' => q(мил/гал),
						'one' => q({0} мил/гал),
						'other' => q({0} мил/гал),
					},
					# Long Unit Identifier
					'consumption-mile-per-gallon-imperial' => {
						'name' => q(миля/англ. галлонуна),
						'one' => q({0} мил/англ.гал),
						'other' => q({0} мил/англ.гал),
					},
					# Core Unit Identifier
					'mile-per-gallon-imperial' => {
						'name' => q(миля/англ. галлонуна),
						'one' => q({0} мил/англ.гал),
						'other' => q({0} мил/англ.гал),
					},
					# Long Unit Identifier
					'coordinate' => {
						'east' => q({0}Ч),
						'north' => q({0} Тн),
						'south' => q({0} Тш),
						'west' => q({0} Б),
					},
					# Core Unit Identifier
					'coordinate' => {
						'east' => q({0}Ч),
						'north' => q({0} Тн),
						'south' => q({0} Тш),
						'west' => q({0} Б),
					},
					# Long Unit Identifier
					'digital-bit' => {
						'name' => q(бит),
						'one' => q({0} бит),
						'other' => q({0} бит),
					},
					# Core Unit Identifier
					'bit' => {
						'name' => q(бит),
						'one' => q({0} бит),
						'other' => q({0} бит),
					},
					# Long Unit Identifier
					'digital-byte' => {
						'name' => q(байт),
						'one' => q({0} байт),
						'other' => q({0} байт),
					},
					# Core Unit Identifier
					'byte' => {
						'name' => q(байт),
						'one' => q({0} байт),
						'other' => q({0} байт),
					},
					# Long Unit Identifier
					'digital-gigabit' => {
						'name' => q(Гбит),
						'one' => q({0} Гб),
						'other' => q({0} Гб),
					},
					# Core Unit Identifier
					'gigabit' => {
						'name' => q(Гбит),
						'one' => q({0} Гб),
						'other' => q({0} Гб),
					},
					# Long Unit Identifier
					'digital-gigabyte' => {
						'name' => q(Гбайт),
						'one' => q({0} ГБ),
						'other' => q({0} ГБ),
					},
					# Core Unit Identifier
					'gigabyte' => {
						'name' => q(Гбайт),
						'one' => q({0} ГБ),
						'other' => q({0} ГБ),
					},
					# Long Unit Identifier
					'digital-kilobit' => {
						'name' => q(кбит),
						'one' => q({0} кб),
						'other' => q({0} кб),
					},
					# Core Unit Identifier
					'kilobit' => {
						'name' => q(кбит),
						'one' => q({0} кб),
						'other' => q({0} кб),
					},
					# Long Unit Identifier
					'digital-kilobyte' => {
						'name' => q(кБайт),
						'one' => q({0} кБ),
						'other' => q({0} кБ),
					},
					# Core Unit Identifier
					'kilobyte' => {
						'name' => q(кБайт),
						'one' => q({0} кБ),
						'other' => q({0} кБ),
					},
					# Long Unit Identifier
					'digital-megabit' => {
						'name' => q(Мбит),
						'one' => q({0} Мб),
						'other' => q({0} Мб),
					},
					# Core Unit Identifier
					'megabit' => {
						'name' => q(Мбит),
						'one' => q({0} Мб),
						'other' => q({0} Мб),
					},
					# Long Unit Identifier
					'digital-megabyte' => {
						'name' => q(МБайт),
						'one' => q({0} МБ),
						'other' => q({0} МБ),
					},
					# Core Unit Identifier
					'megabyte' => {
						'name' => q(МБайт),
						'one' => q({0} МБ),
						'other' => q({0} МБ),
					},
					# Long Unit Identifier
					'digital-petabyte' => {
						'name' => q(ПТб),
						'one' => q({0} Птб),
						'other' => q({0} Птб),
					},
					# Core Unit Identifier
					'petabyte' => {
						'name' => q(ПТб),
						'one' => q({0} Птб),
						'other' => q({0} Птб),
					},
					# Long Unit Identifier
					'digital-terabit' => {
						'name' => q(Тбит),
						'one' => q({0} Тб),
						'other' => q({0} Тб),
					},
					# Core Unit Identifier
					'terabit' => {
						'name' => q(Тбит),
						'one' => q({0} Тб),
						'other' => q({0} Тб),
					},
					# Long Unit Identifier
					'digital-terabyte' => {
						'name' => q(ТБайт),
						'one' => q({0} ТБ),
						'other' => q({0} ТБ),
					},
					# Core Unit Identifier
					'terabyte' => {
						'name' => q(ТБайт),
						'one' => q({0} ТБ),
						'other' => q({0} ТБ),
					},
					# Long Unit Identifier
					'duration-century' => {
						'name' => q(к.),
						'one' => q({0} к.),
						'other' => q({0} к.),
					},
					# Core Unit Identifier
					'century' => {
						'name' => q(к.),
						'one' => q({0} к.),
						'other' => q({0} к.),
					},
					# Long Unit Identifier
					'duration-day' => {
						'name' => q(күн),
						'one' => q({0} күн),
						'other' => q({0} күн),
						'per' => q({0}/күн),
					},
					# Core Unit Identifier
					'day' => {
						'name' => q(күн),
						'one' => q({0} күн),
						'other' => q({0} күн),
						'per' => q({0}/күн),
					},
					# Long Unit Identifier
					'duration-decade' => {
						'name' => q(декада),
						'one' => q({0} декада),
						'other' => q({0} декада),
					},
					# Core Unit Identifier
					'decade' => {
						'name' => q(декада),
						'one' => q({0} декада),
						'other' => q({0} декада),
					},
					# Long Unit Identifier
					'duration-hour' => {
						'name' => q(саат),
						'one' => q({0} ст),
						'other' => q({0} ст),
						'per' => q({0}/ст),
					},
					# Core Unit Identifier
					'hour' => {
						'name' => q(саат),
						'one' => q({0} ст),
						'other' => q({0} ст),
						'per' => q({0}/ст),
					},
					# Long Unit Identifier
					'duration-microsecond' => {
						'name' => q(μсек),
						'one' => q({0}μс),
						'other' => q({0}μс),
					},
					# Core Unit Identifier
					'microsecond' => {
						'name' => q(μсек),
						'one' => q({0}μс),
						'other' => q({0}μс),
					},
					# Long Unit Identifier
					'duration-millisecond' => {
						'name' => q(миллисекунд),
						'one' => q({0} мсек),
						'other' => q({0} мсек),
					},
					# Core Unit Identifier
					'millisecond' => {
						'name' => q(миллисекунд),
						'one' => q({0} мсек),
						'other' => q({0} мсек),
					},
					# Long Unit Identifier
					'duration-minute' => {
						'name' => q(мүнөт),
						'one' => q({0} мүн),
						'other' => q({0} мүн),
						'per' => q({0}/мүн),
					},
					# Core Unit Identifier
					'minute' => {
						'name' => q(мүнөт),
						'one' => q({0} мүн),
						'other' => q({0} мүн),
						'per' => q({0}/мүн),
					},
					# Long Unit Identifier
					'duration-month' => {
						'name' => q(ай),
						'one' => q({0} ай),
						'other' => q({0} ай),
						'per' => q(а/{0}),
					},
					# Core Unit Identifier
					'month' => {
						'name' => q(ай),
						'one' => q({0} ай),
						'other' => q({0} ай),
						'per' => q(а/{0}),
					},
					# Long Unit Identifier
					'duration-nanosecond' => {
						'name' => q(наносек),
						'one' => q({0} нс),
						'other' => q({0} нс),
					},
					# Core Unit Identifier
					'nanosecond' => {
						'name' => q(наносек),
						'one' => q({0} нс),
						'other' => q({0} нс),
					},
					# Long Unit Identifier
					'duration-night' => {
						'name' => q(түн),
						'one' => q({0}/түн),
						'other' => q({0}/түн),
						'per' => q({0}/түн),
					},
					# Core Unit Identifier
					'night' => {
						'name' => q(түн),
						'one' => q({0}/түн),
						'other' => q({0}/түн),
						'per' => q({0}/түн),
					},
					# Long Unit Identifier
					'duration-quarter' => {
						'name' => q(чрк),
						'one' => q({0}/чрк),
						'other' => q({0}/чрк),
						'per' => q({0}/ч),
					},
					# Core Unit Identifier
					'quarter' => {
						'name' => q(чрк),
						'one' => q({0}/чрк),
						'other' => q({0}/чрк),
						'per' => q({0}/ч),
					},
					# Long Unit Identifier
					'duration-second' => {
						'name' => q(секунд),
						'one' => q({0} сек),
						'other' => q({0} сек),
						'per' => q({0}/сек),
					},
					# Core Unit Identifier
					'second' => {
						'name' => q(секунд),
						'one' => q({0} сек),
						'other' => q({0} сек),
						'per' => q({0}/сек),
					},
					# Long Unit Identifier
					'duration-week' => {
						'name' => q(апта),
						'one' => q({0} апт),
						'other' => q({0} апт),
						'per' => q({0}/апт),
					},
					# Core Unit Identifier
					'week' => {
						'name' => q(апта),
						'one' => q({0} апт),
						'other' => q({0} апт),
						'per' => q({0}/апт),
					},
					# Long Unit Identifier
					'duration-year' => {
						'name' => q(жыл),
						'one' => q({0}-ж.),
						'other' => q({0} ж.),
						'per' => q({0}/ж),
					},
					# Core Unit Identifier
					'year' => {
						'name' => q(жыл),
						'one' => q({0}-ж.),
						'other' => q({0} ж.),
						'per' => q({0}/ж),
					},
					# Long Unit Identifier
					'electric-ampere' => {
						'name' => q(амп),
					},
					# Core Unit Identifier
					'ampere' => {
						'name' => q(амп),
					},
					# Long Unit Identifier
					'electric-milliampere' => {
						'name' => q(миллиамп),
						'one' => q({0} мА),
						'other' => q({0} мА),
					},
					# Core Unit Identifier
					'milliampere' => {
						'name' => q(миллиамп),
						'one' => q({0} мА),
						'other' => q({0} мА),
					},
					# Long Unit Identifier
					'electric-ohm' => {
						'name' => q(ом),
					},
					# Core Unit Identifier
					'ohm' => {
						'name' => q(ом),
					},
					# Long Unit Identifier
					'electric-volt' => {
						'name' => q(вольт),
						'one' => q({0} В),
						'other' => q({0} В),
					},
					# Core Unit Identifier
					'volt' => {
						'name' => q(вольт),
						'one' => q({0} В),
						'other' => q({0} В),
					},
					# Long Unit Identifier
					'energy-calorie' => {
						'name' => q(кал),
						'one' => q({0} кал),
						'other' => q({0} кал),
					},
					# Core Unit Identifier
					'calorie' => {
						'name' => q(кал),
						'one' => q({0} кал),
						'other' => q({0} кал),
					},
					# Long Unit Identifier
					'energy-foodcalorie' => {
						'name' => q(Кал),
						'one' => q({0} Кал),
						'other' => q({0} Кал),
					},
					# Core Unit Identifier
					'foodcalorie' => {
						'name' => q(Кал),
						'one' => q({0} Кал),
						'other' => q({0} Кал),
					},
					# Long Unit Identifier
					'energy-joule' => {
						'name' => q(жоул),
						'one' => q({0} ж),
						'other' => q({0} ж),
					},
					# Core Unit Identifier
					'joule' => {
						'name' => q(жоул),
						'one' => q({0} ж),
						'other' => q({0} ж),
					},
					# Long Unit Identifier
					'energy-kilocalorie' => {
						'name' => q(ккал),
						'one' => q({0} ккал),
						'other' => q({0} ккал),
					},
					# Core Unit Identifier
					'kilocalorie' => {
						'name' => q(ккал),
						'one' => q({0} ккал),
						'other' => q({0} ккал),
					},
					# Long Unit Identifier
					'energy-kilojoule' => {
						'name' => q(киложоул),
						'one' => q({0} кж),
						'other' => q({0} кж),
					},
					# Core Unit Identifier
					'kilojoule' => {
						'name' => q(киложоул),
						'one' => q({0} кж),
						'other' => q({0} кж),
					},
					# Long Unit Identifier
					'energy-kilowatt-hour' => {
						'name' => q(кВ-саат),
						'one' => q({0} кВ-саат),
						'other' => q({0} кВ-саат),
					},
					# Core Unit Identifier
					'kilowatt-hour' => {
						'name' => q(кВ-саат),
						'one' => q({0} кВ-саат),
						'other' => q({0} кВ-саат),
					},
					# Long Unit Identifier
					'energy-therm-us' => {
						'name' => q(Терм АКШ),
						'one' => q({0} терм АКШ),
						'other' => q({0} терм АКШ),
					},
					# Core Unit Identifier
					'therm-us' => {
						'name' => q(Терм АКШ),
						'one' => q({0} терм АКШ),
						'other' => q({0} терм АКШ),
					},
					# Long Unit Identifier
					'force-kilowatt-hour-per-100-kilometer' => {
						'name' => q(кВт*с/100км),
						'one' => q({0} кВт*с/100км),
						'other' => q({0} кВт*с/100км),
					},
					# Core Unit Identifier
					'kilowatt-hour-per-100-kilometer' => {
						'name' => q(кВт*с/100км),
						'one' => q({0} кВт*с/100км),
						'other' => q({0} кВт*с/100км),
					},
					# Long Unit Identifier
					'force-pound-force' => {
						'name' => q(күч-фунттары),
					},
					# Core Unit Identifier
					'pound-force' => {
						'name' => q(күч-фунттары),
					},
					# Long Unit Identifier
					'frequency-gigahertz' => {
						'name' => q(Ггц),
						'one' => q({0} Ггц),
						'other' => q({0} Ггц),
					},
					# Core Unit Identifier
					'gigahertz' => {
						'name' => q(Ггц),
						'one' => q({0} Ггц),
						'other' => q({0} Ггц),
					},
					# Long Unit Identifier
					'frequency-hertz' => {
						'name' => q(Гц),
						'one' => q({0} Гц),
						'other' => q({0} Гц),
					},
					# Core Unit Identifier
					'hertz' => {
						'name' => q(Гц),
						'one' => q({0} Гц),
						'other' => q({0} Гц),
					},
					# Long Unit Identifier
					'frequency-kilohertz' => {
						'name' => q(кГц),
						'one' => q({0} кГц),
						'other' => q({0} кГц),
					},
					# Core Unit Identifier
					'kilohertz' => {
						'name' => q(кГц),
						'one' => q({0} кГц),
						'other' => q({0} кГц),
					},
					# Long Unit Identifier
					'frequency-megahertz' => {
						'name' => q(МГЦ),
						'one' => q({0} МГЦ),
						'other' => q({0} МГЦ),
					},
					# Core Unit Identifier
					'megahertz' => {
						'name' => q(МГЦ),
						'one' => q({0} МГЦ),
						'other' => q({0} МГЦ),
					},
					# Long Unit Identifier
					'graphics-dot' => {
						'name' => q(графикалык чекит),
						'one' => q({0} графикалык чекит),
						'other' => q({0} графикалык чекит),
					},
					# Core Unit Identifier
					'dot' => {
						'name' => q(графикалык чекит),
						'one' => q({0} графикалык чекит),
						'other' => q({0} графикалык чекит),
					},
					# Long Unit Identifier
					'graphics-dot-per-centimeter' => {
						'name' => q(dpcm),
						'one' => q({0} dpcm),
						'other' => q({0} dpcm),
					},
					# Core Unit Identifier
					'dot-per-centimeter' => {
						'name' => q(dpcm),
						'one' => q({0} dpcm),
						'other' => q({0} dpcm),
					},
					# Long Unit Identifier
					'graphics-dot-per-inch' => {
						'name' => q(dpi),
						'one' => q({0} dpi),
						'other' => q({0} dpi),
					},
					# Core Unit Identifier
					'dot-per-inch' => {
						'name' => q(dpi),
						'one' => q({0} dpi),
						'other' => q({0} dpi),
					},
					# Long Unit Identifier
					'length-astronomical-unit' => {
						'name' => q(а. б.),
						'one' => q({0} а.б.),
						'other' => q({0} а.б.),
					},
					# Core Unit Identifier
					'astronomical-unit' => {
						'name' => q(а. б.),
						'one' => q({0} а.б.),
						'other' => q({0} а.б.),
					},
					# Long Unit Identifier
					'length-centimeter' => {
						'name' => q(см),
						'one' => q({0} см),
						'other' => q({0} см),
						'per' => q({0}/см),
					},
					# Core Unit Identifier
					'centimeter' => {
						'name' => q(см),
						'one' => q({0} см),
						'other' => q({0} см),
						'per' => q({0}/см),
					},
					# Long Unit Identifier
					'length-decimeter' => {
						'name' => q(дм),
						'one' => q({0} дм),
						'other' => q({0} дм),
					},
					# Core Unit Identifier
					'decimeter' => {
						'name' => q(дм),
						'one' => q({0} дм),
						'other' => q({0} дм),
					},
					# Long Unit Identifier
					'length-foot' => {
						'name' => q(фут),
						'one' => q({0} фут),
						'other' => q({0} фут),
						'per' => q({0}/ф),
					},
					# Core Unit Identifier
					'foot' => {
						'name' => q(фут),
						'one' => q({0} фут),
						'other' => q({0} фут),
						'per' => q({0}/ф),
					},
					# Long Unit Identifier
					'length-inch' => {
						'name' => q(дюйм),
						'one' => q({0} дюйм),
						'other' => q({0} дюйм),
						'per' => q({0}/д),
					},
					# Core Unit Identifier
					'inch' => {
						'name' => q(дюйм),
						'one' => q({0} дюйм),
						'other' => q({0} дюйм),
						'per' => q({0}/д),
					},
					# Long Unit Identifier
					'length-kilometer' => {
						'name' => q(км),
						'one' => q({0} км),
						'other' => q({0} км),
						'per' => q({0}/км),
					},
					# Core Unit Identifier
					'kilometer' => {
						'name' => q(км),
						'one' => q({0} км),
						'other' => q({0} км),
						'per' => q({0}/км),
					},
					# Long Unit Identifier
					'length-light-year' => {
						'name' => q(жарык жыл),
						'one' => q({0} жар.ж.),
						'other' => q({0} жар.ж.),
					},
					# Core Unit Identifier
					'light-year' => {
						'name' => q(жарык жыл),
						'one' => q({0} жар.ж.),
						'other' => q({0} жар.ж.),
					},
					# Long Unit Identifier
					'length-meter' => {
						'name' => q(метр),
						'one' => q({0} м),
						'other' => q({0} м),
						'per' => q({0}/м),
					},
					# Core Unit Identifier
					'meter' => {
						'name' => q(метр),
						'one' => q({0} м),
						'other' => q({0} м),
						'per' => q({0}/м),
					},
					# Long Unit Identifier
					'length-micrometer' => {
						'name' => q(μметр),
						'one' => q({0} μм),
						'other' => q({0} μм),
					},
					# Core Unit Identifier
					'micrometer' => {
						'name' => q(μметр),
						'one' => q({0} μм),
						'other' => q({0} μм),
					},
					# Long Unit Identifier
					'length-mile' => {
						'name' => q(миля),
						'one' => q({0} миля),
						'other' => q({0} миля),
					},
					# Core Unit Identifier
					'mile' => {
						'name' => q(миля),
						'one' => q({0} миля),
						'other' => q({0} миля),
					},
					# Long Unit Identifier
					'length-millimeter' => {
						'name' => q(миллиметр),
						'one' => q({0} мм),
						'other' => q({0} мм),
					},
					# Core Unit Identifier
					'millimeter' => {
						'name' => q(миллиметр),
						'one' => q({0} мм),
						'other' => q({0} мм),
					},
					# Long Unit Identifier
					'length-nanometer' => {
						'name' => q(нм),
						'one' => q({0} нм),
						'other' => q({0} нм),
					},
					# Core Unit Identifier
					'nanometer' => {
						'name' => q(нм),
						'one' => q({0} нм),
						'other' => q({0} нм),
					},
					# Long Unit Identifier
					'length-nautical-mile' => {
						'name' => q(дең. мил.),
						'one' => q({0} дең. мил.),
						'other' => q({0} дең. мил.),
					},
					# Core Unit Identifier
					'nautical-mile' => {
						'name' => q(дең. мил.),
						'one' => q({0} дең. мил.),
						'other' => q({0} дең. мил.),
					},
					# Long Unit Identifier
					'length-parsec' => {
						'name' => q(парсек),
						'one' => q({0} пс),
						'other' => q({0} пс),
					},
					# Core Unit Identifier
					'parsec' => {
						'name' => q(парсек),
						'one' => q({0} пс),
						'other' => q({0} пс),
					},
					# Long Unit Identifier
					'length-picometer' => {
						'name' => q(пм),
						'one' => q({0} пм),
						'other' => q({0} пм),
					},
					# Core Unit Identifier
					'picometer' => {
						'name' => q(пм),
						'one' => q({0} пм),
						'other' => q({0} пм),
					},
					# Long Unit Identifier
					'length-point' => {
						'name' => q(чекиттер),
						'one' => q({0} чкт),
						'other' => q({0} чкт),
					},
					# Core Unit Identifier
					'point' => {
						'name' => q(чекиттер),
						'one' => q({0} чкт),
						'other' => q({0} чкт),
					},
					# Long Unit Identifier
					'length-solar-radius' => {
						'name' => q(күн радиустары),
					},
					# Core Unit Identifier
					'solar-radius' => {
						'name' => q(күн радиустары),
					},
					# Long Unit Identifier
					'length-yard' => {
						'name' => q(ярд),
						'one' => q({0} ярд),
						'other' => q({0} ярд),
					},
					# Core Unit Identifier
					'yard' => {
						'name' => q(ярд),
						'one' => q({0} ярд),
						'other' => q({0} ярд),
					},
					# Long Unit Identifier
					'light-lux' => {
						'name' => q(люкс),
						'one' => q({0} лк),
						'other' => q({0} лк),
					},
					# Core Unit Identifier
					'lux' => {
						'name' => q(люкс),
						'one' => q({0} лк),
						'other' => q({0} лк),
					},
					# Long Unit Identifier
					'light-solar-luminosity' => {
						'name' => q(күндүн жарык күчү),
					},
					# Core Unit Identifier
					'solar-luminosity' => {
						'name' => q(күндүн жарык күчү),
					},
					# Long Unit Identifier
					'mass-carat' => {
						'name' => q(карат),
						'one' => q({0} кар.),
						'other' => q({0} кар.),
					},
					# Core Unit Identifier
					'carat' => {
						'name' => q(карат),
						'one' => q({0} кар.),
						'other' => q({0} кар.),
					},
					# Long Unit Identifier
					'mass-earth-mass' => {
						'name' => q(Жер массалары),
					},
					# Core Unit Identifier
					'earth-mass' => {
						'name' => q(Жер массалары),
					},
					# Long Unit Identifier
					'mass-grain' => {
						'name' => q(грэйн),
						'one' => q({0} грэйн),
						'other' => q({0} грэйн),
					},
					# Core Unit Identifier
					'grain' => {
						'name' => q(грэйн),
						'one' => q({0} грэйн),
						'other' => q({0} грэйн),
					},
					# Long Unit Identifier
					'mass-gram' => {
						'name' => q(грамм),
						'one' => q({0} гр),
						'other' => q({0} гр),
						'per' => q(гр/{0}),
					},
					# Core Unit Identifier
					'gram' => {
						'name' => q(грамм),
						'one' => q({0} гр),
						'other' => q({0} гр),
						'per' => q(гр/{0}),
					},
					# Long Unit Identifier
					'mass-kilogram' => {
						'name' => q(кг),
						'one' => q({0} кг),
						'other' => q({0} кг),
						'per' => q({0}/кг),
					},
					# Core Unit Identifier
					'kilogram' => {
						'name' => q(кг),
						'one' => q({0} кг),
						'other' => q({0} кг),
						'per' => q({0}/кг),
					},
					# Long Unit Identifier
					'mass-microgram' => {
						'name' => q(мкг),
						'one' => q({0} мкг),
						'other' => q({0} мкг),
					},
					# Core Unit Identifier
					'microgram' => {
						'name' => q(мкг),
						'one' => q({0} мкг),
						'other' => q({0} мкг),
					},
					# Long Unit Identifier
					'mass-milligram' => {
						'name' => q(мг),
						'one' => q({0} мг),
						'other' => q({0} мг),
					},
					# Core Unit Identifier
					'milligram' => {
						'name' => q(мг),
						'one' => q({0} мг),
						'other' => q({0} мг),
					},
					# Long Unit Identifier
					'mass-ounce' => {
						'name' => q(унц.),
						'one' => q({0} унц.),
						'other' => q({0} унц.),
						'per' => q(унц/{0}),
					},
					# Core Unit Identifier
					'ounce' => {
						'name' => q(унц.),
						'one' => q({0} унц.),
						'other' => q({0} унц.),
						'per' => q(унц/{0}),
					},
					# Long Unit Identifier
					'mass-ounce-troy' => {
						'name' => q(тр. унц.),
						'one' => q({0} тр. унц.),
						'other' => q({0} тр. унц.),
					},
					# Core Unit Identifier
					'ounce-troy' => {
						'name' => q(тр. унц.),
						'one' => q({0} тр. унц.),
						'other' => q({0} тр. унц.),
					},
					# Long Unit Identifier
					'mass-pound' => {
						'name' => q(фунт),
						'one' => q({0} фунт),
						'other' => q({0} фунт),
						'per' => q(фунт/{0}),
					},
					# Core Unit Identifier
					'pound' => {
						'name' => q(фунт),
						'one' => q({0} фунт),
						'other' => q({0} фунт),
						'per' => q(фунт/{0}),
					},
					# Long Unit Identifier
					'mass-solar-mass' => {
						'name' => q(күн массасы),
					},
					# Core Unit Identifier
					'solar-mass' => {
						'name' => q(күн массасы),
					},
					# Long Unit Identifier
					'mass-ton' => {
						'name' => q(Америкалык тонна),
						'one' => q({0} АКШ тон.),
						'other' => q({0} АКШ тон.),
					},
					# Core Unit Identifier
					'ton' => {
						'name' => q(Америкалык тонна),
						'one' => q({0} АКШ тон.),
						'other' => q({0} АКШ тон.),
					},
					# Long Unit Identifier
					'mass-tonne' => {
						'name' => q(т),
						'one' => q({0} т),
						'other' => q({0} т),
					},
					# Core Unit Identifier
					'tonne' => {
						'name' => q(т),
						'one' => q({0} т),
						'other' => q({0} т),
					},
					# Long Unit Identifier
					'power-gigawatt' => {
						'name' => q(ГВт),
						'one' => q({0} ГВт),
						'other' => q({0} ГВт),
					},
					# Core Unit Identifier
					'gigawatt' => {
						'name' => q(ГВт),
						'one' => q({0} ГВт),
						'other' => q({0} ГВт),
					},
					# Long Unit Identifier
					'power-horsepower' => {
						'name' => q(а.к.),
						'one' => q({0} а.к.),
						'other' => q({0} а.к.),
					},
					# Core Unit Identifier
					'horsepower' => {
						'name' => q(а.к.),
						'one' => q({0} а.к.),
						'other' => q({0} а.к.),
					},
					# Long Unit Identifier
					'power-kilowatt' => {
						'name' => q(кВт),
						'one' => q({0} кВт),
						'other' => q({0} кВт),
					},
					# Core Unit Identifier
					'kilowatt' => {
						'name' => q(кВт),
						'one' => q({0} кВт),
						'other' => q({0} кВт),
					},
					# Long Unit Identifier
					'power-megawatt' => {
						'name' => q(МВт),
						'one' => q({0} МВт),
						'other' => q({0} МВт),
					},
					# Core Unit Identifier
					'megawatt' => {
						'name' => q(МВт),
						'one' => q({0} МВт),
						'other' => q({0} МВт),
					},
					# Long Unit Identifier
					'power-milliwatt' => {
						'name' => q(мвт),
						'one' => q({0} мвт),
						'other' => q({0} мвт),
					},
					# Core Unit Identifier
					'milliwatt' => {
						'name' => q(мвт),
						'one' => q({0} мвт),
						'other' => q({0} мвт),
					},
					# Long Unit Identifier
					'power-watt' => {
						'name' => q(ватт),
						'one' => q({0} Вт),
						'other' => q({0} Вт),
					},
					# Core Unit Identifier
					'watt' => {
						'name' => q(ватт),
						'one' => q({0} Вт),
						'other' => q({0} Вт),
					},
					# Long Unit Identifier
					'pressure-atmosphere' => {
						'name' => q(атм),
						'one' => q({0} атм),
						'other' => q({0} атм),
					},
					# Core Unit Identifier
					'atmosphere' => {
						'name' => q(атм),
						'one' => q({0} атм),
						'other' => q({0} атм),
					},
					# Long Unit Identifier
					'pressure-hectopascal' => {
						'name' => q(гПа),
						'one' => q({0} гПа),
						'other' => q({0} гПа),
					},
					# Core Unit Identifier
					'hectopascal' => {
						'name' => q(гПа),
						'one' => q({0} гПа),
						'other' => q({0} гПа),
					},
					# Long Unit Identifier
					'pressure-inch-ofhg' => {
						'name' => q(дюйм сымап мамычасы),
					},
					# Core Unit Identifier
					'inch-ofhg' => {
						'name' => q(дюйм сымап мамычасы),
					},
					# Long Unit Identifier
					'pressure-millibar' => {
						'name' => q(миллибар),
						'one' => q({0} мбар),
						'other' => q({0} мбар),
					},
					# Core Unit Identifier
					'millibar' => {
						'name' => q(миллибар),
						'one' => q({0} мбар),
						'other' => q({0} мбар),
					},
					# Long Unit Identifier
					'pressure-millimeter-ofhg' => {
						'name' => q(мм.с.м.),
						'one' => q({0} мм.с. м.),
						'other' => q({0} мм.с. м.),
					},
					# Core Unit Identifier
					'millimeter-ofhg' => {
						'name' => q(мм.с.м.),
						'one' => q({0} мм.с. м.),
						'other' => q({0} мм.с. м.),
					},
					# Long Unit Identifier
					'pressure-pound-force-per-square-inch' => {
						'name' => q(фчд),
						'one' => q({0} фчд),
						'other' => q({0} фчд),
					},
					# Core Unit Identifier
					'pound-force-per-square-inch' => {
						'name' => q(фчд),
						'one' => q({0} фчд),
						'other' => q({0} фчд),
					},
					# Long Unit Identifier
					'speed-kilometer-per-hour' => {
						'name' => q(км/саат),
						'one' => q({0} км/с),
						'other' => q({0} км/с),
					},
					# Core Unit Identifier
					'kilometer-per-hour' => {
						'name' => q(км/саат),
						'one' => q({0} км/с),
						'other' => q({0} км/с),
					},
					# Long Unit Identifier
					'speed-knot' => {
						'name' => q(тн),
						'one' => q({0} тн),
						'other' => q({0} тн),
					},
					# Core Unit Identifier
					'knot' => {
						'name' => q(тн),
						'one' => q({0} тн),
						'other' => q({0} тн),
					},
					# Long Unit Identifier
					'speed-light-speed' => {
						'name' => q(жарык),
						'one' => q({0} жарык),
						'other' => q({0} жарык),
					},
					# Core Unit Identifier
					'light-speed' => {
						'name' => q(жарык),
						'one' => q({0} жарык),
						'other' => q({0} жарык),
					},
					# Long Unit Identifier
					'speed-meter-per-second' => {
						'name' => q(метр/сек.),
						'one' => q({0} м/сек.),
						'other' => q({0} м/сек.),
					},
					# Core Unit Identifier
					'meter-per-second' => {
						'name' => q(метр/сек.),
						'one' => q({0} м/сек.),
						'other' => q({0} м/сек.),
					},
					# Long Unit Identifier
					'speed-mile-per-hour' => {
						'name' => q(миля/саатына),
						'one' => q({0} миля/с),
						'other' => q({0} миля/с),
					},
					# Core Unit Identifier
					'mile-per-hour' => {
						'name' => q(миля/саатына),
						'one' => q({0} миля/с),
						'other' => q({0} миля/с),
					},
					# Long Unit Identifier
					'temperature-celsius' => {
						'name' => q(Цельсий град.),
					},
					# Core Unit Identifier
					'celsius' => {
						'name' => q(Цельсий град.),
					},
					# Long Unit Identifier
					'temperature-fahrenheit' => {
						'name' => q(Ф. град),
					},
					# Core Unit Identifier
					'fahrenheit' => {
						'name' => q(Ф. град),
					},
					# Long Unit Identifier
					'temperature-kelvin' => {
						'name' => q(К град.),
					},
					# Core Unit Identifier
					'kelvin' => {
						'name' => q(К град.),
					},
					# Long Unit Identifier
					'torque-newton-meter' => {
						'name' => q(N m),
					},
					# Core Unit Identifier
					'newton-meter' => {
						'name' => q(N m),
					},
					# Long Unit Identifier
					'volume-acre-foot' => {
						'name' => q(акр-фут),
						'one' => q({0} ак. фт.),
						'other' => q({0} ак. фт.),
					},
					# Core Unit Identifier
					'acre-foot' => {
						'name' => q(акр-фут),
						'one' => q({0} ак. фт.),
						'other' => q({0} ак. фт.),
					},
					# Long Unit Identifier
					'volume-bushel' => {
						'name' => q(бушел),
					},
					# Core Unit Identifier
					'bushel' => {
						'name' => q(бушел),
					},
					# Long Unit Identifier
					'volume-centiliter' => {
						'name' => q(сЛ),
						'one' => q({0} сЛ),
						'other' => q({0} сЛ),
					},
					# Core Unit Identifier
					'centiliter' => {
						'name' => q(сЛ),
						'one' => q({0} сЛ),
						'other' => q({0} сЛ),
					},
					# Long Unit Identifier
					'volume-cubic-centimeter' => {
						'name' => q(см³),
						'one' => q({0} см³),
						'other' => q({0} см³),
						'per' => q({0}/см³),
					},
					# Core Unit Identifier
					'cubic-centimeter' => {
						'name' => q(см³),
						'one' => q({0} см³),
						'other' => q({0} см³),
						'per' => q({0}/см³),
					},
					# Long Unit Identifier
					'volume-cubic-foot' => {
						'name' => q(фут³),
						'one' => q({0} фут³),
						'other' => q({0} фут³),
					},
					# Core Unit Identifier
					'cubic-foot' => {
						'name' => q(фут³),
						'one' => q({0} фут³),
						'other' => q({0} фут³),
					},
					# Long Unit Identifier
					'volume-cubic-inch' => {
						'name' => q(дюйм³),
						'one' => q({0} дюйм³),
						'other' => q({0} дюйм³),
					},
					# Core Unit Identifier
					'cubic-inch' => {
						'name' => q(дюйм³),
						'one' => q({0} дюйм³),
						'other' => q({0} дюйм³),
					},
					# Long Unit Identifier
					'volume-cubic-kilometer' => {
						'name' => q(куб километр),
						'one' => q({0} км³),
						'other' => q({0} км³),
					},
					# Core Unit Identifier
					'cubic-kilometer' => {
						'name' => q(куб километр),
						'one' => q({0} км³),
						'other' => q({0} км³),
					},
					# Long Unit Identifier
					'volume-cubic-meter' => {
						'name' => q(м³),
						'one' => q({0} м³),
						'other' => q({0} м³),
						'per' => q({0}/м³),
					},
					# Core Unit Identifier
					'cubic-meter' => {
						'name' => q(м³),
						'one' => q({0} м³),
						'other' => q({0} м³),
						'per' => q({0}/м³),
					},
					# Long Unit Identifier
					'volume-cubic-mile' => {
						'name' => q(мил³),
						'one' => q({0} мил³),
						'other' => q({0} мил³),
					},
					# Core Unit Identifier
					'cubic-mile' => {
						'name' => q(мил³),
						'one' => q({0} мил³),
						'other' => q({0} мил³),
					},
					# Long Unit Identifier
					'volume-cubic-yard' => {
						'name' => q(ярд³),
						'one' => q({0} ярд³),
						'other' => q({0} ярд³),
					},
					# Core Unit Identifier
					'cubic-yard' => {
						'name' => q(ярд³),
						'one' => q({0} ярд³),
						'other' => q({0} ярд³),
					},
					# Long Unit Identifier
					'volume-cup' => {
						'name' => q(чөйчөк),
						'one' => q({0} чөй.),
						'other' => q({0} чөй.),
					},
					# Core Unit Identifier
					'cup' => {
						'name' => q(чөйчөк),
						'one' => q({0} чөй.),
						'other' => q({0} чөй.),
					},
					# Long Unit Identifier
					'volume-deciliter' => {
						'name' => q(дл),
						'one' => q({0} дл),
						'other' => q({0} дл),
					},
					# Core Unit Identifier
					'deciliter' => {
						'name' => q(дл),
						'one' => q({0} дл),
						'other' => q({0} дл),
					},
					# Long Unit Identifier
					'volume-dram' => {
						'name' => q(драм суюктук),
					},
					# Core Unit Identifier
					'dram' => {
						'name' => q(драм суюктук),
					},
					# Long Unit Identifier
					'volume-drop' => {
						'name' => q(дроп),
						'one' => q({0} дроп),
						'other' => q({0} дроп),
					},
					# Core Unit Identifier
					'drop' => {
						'name' => q(дроп),
						'one' => q({0} дроп),
						'other' => q({0} дроп),
					},
					# Long Unit Identifier
					'volume-fluid-ounce' => {
						'name' => q(с. унц.),
						'one' => q({0} с. унц.),
						'other' => q({0} с. унц.),
					},
					# Core Unit Identifier
					'fluid-ounce' => {
						'name' => q(с. унц.),
						'one' => q({0} с. унц.),
						'other' => q({0} с. унц.),
					},
					# Long Unit Identifier
					'volume-fluid-ounce-imperial' => {
						'name' => q(Имп.суюк.унц),
					},
					# Core Unit Identifier
					'fluid-ounce-imperial' => {
						'name' => q(Имп.суюк.унц),
					},
					# Long Unit Identifier
					'volume-gallon' => {
						'name' => q(гал),
						'one' => q({0} гал),
						'other' => q({0} гал),
						'per' => q({0}/АКШ гал),
					},
					# Core Unit Identifier
					'gallon' => {
						'name' => q(гал),
						'one' => q({0} гал),
						'other' => q({0} гал),
						'per' => q({0}/АКШ гал),
					},
					# Long Unit Identifier
					'volume-gallon-imperial' => {
						'name' => q(англ. гал),
						'one' => q({0} англ. гал),
						'other' => q({0} англ. гал),
						'per' => q(англ. гал/{0}),
					},
					# Core Unit Identifier
					'gallon-imperial' => {
						'name' => q(англ. гал),
						'one' => q({0} англ. гал),
						'other' => q({0} англ. гал),
						'per' => q(англ. гал/{0}),
					},
					# Long Unit Identifier
					'volume-hectoliter' => {
						'name' => q(гл),
						'one' => q({0} гл),
						'other' => q({0} гл),
					},
					# Core Unit Identifier
					'hectoliter' => {
						'name' => q(гл),
						'one' => q({0} гл),
						'other' => q({0} гл),
					},
					# Long Unit Identifier
					'volume-jigger' => {
						'name' => q(жиггер),
						'one' => q({0} жиггер),
						'other' => q({0} жиггер),
					},
					# Core Unit Identifier
					'jigger' => {
						'name' => q(жиггер),
						'one' => q({0} жиггер),
						'other' => q({0} жиггер),
					},
					# Long Unit Identifier
					'volume-liter' => {
						'name' => q(литр),
						'one' => q({0} л),
						'other' => q({0} л),
						'per' => q({0}/л),
					},
					# Core Unit Identifier
					'liter' => {
						'name' => q(литр),
						'one' => q({0} л),
						'other' => q({0} л),
						'per' => q({0}/л),
					},
					# Long Unit Identifier
					'volume-megaliter' => {
						'name' => q(мгл),
						'one' => q({0} мгл),
						'other' => q({0} мгл),
					},
					# Core Unit Identifier
					'megaliter' => {
						'name' => q(мгл),
						'one' => q({0} мгл),
						'other' => q({0} мгл),
					},
					# Long Unit Identifier
					'volume-milliliter' => {
						'name' => q(мл),
						'one' => q({0} мл),
						'other' => q({0} мл),
					},
					# Core Unit Identifier
					'milliliter' => {
						'name' => q(мл),
						'one' => q({0} мл),
						'other' => q({0} мл),
					},
					# Long Unit Identifier
					'volume-pinch' => {
						'name' => q(пинч),
						'one' => q({0} пинч),
						'other' => q({0} пинч),
					},
					# Core Unit Identifier
					'pinch' => {
						'name' => q(пинч),
						'one' => q({0} пинч),
						'other' => q({0} пинч),
					},
					# Long Unit Identifier
					'volume-pint' => {
						'name' => q(пт),
						'one' => q({0} пт),
						'other' => q({0} пт),
					},
					# Core Unit Identifier
					'pint' => {
						'name' => q(пт),
						'one' => q({0} пт),
						'other' => q({0} пт),
					},
					# Long Unit Identifier
					'volume-pint-metric' => {
						'name' => q(мпт),
						'one' => q({0} мпт),
						'other' => q({0} мпт),
					},
					# Core Unit Identifier
					'pint-metric' => {
						'name' => q(мпт),
						'one' => q({0} мпт),
						'other' => q({0} мпт),
					},
					# Long Unit Identifier
					'volume-quart' => {
						'name' => q(квр),
						'one' => q({0} квр),
						'other' => q({0} квр),
					},
					# Core Unit Identifier
					'quart' => {
						'name' => q(квр),
						'one' => q({0} квр),
						'other' => q({0} квр),
					},
					# Long Unit Identifier
					'volume-tablespoon' => {
						'name' => q(чоң каш.),
						'one' => q({0} чоң каш.),
						'other' => q({0} чоң каш.),
					},
					# Core Unit Identifier
					'tablespoon' => {
						'name' => q(чоң каш.),
						'one' => q({0} чоң каш.),
						'other' => q({0} чоң каш.),
					},
					# Long Unit Identifier
					'volume-teaspoon' => {
						'name' => q(чай каш.),
						'one' => q({0} чай каш.),
						'other' => q({0} чай каш.),
					},
					# Core Unit Identifier
					'teaspoon' => {
						'name' => q(чай каш.),
						'one' => q({0} чай каш.),
						'other' => q({0} чай каш.),
					},
				},
			} }
);

has 'yesstr' => (
	is			=> 'ro',
	isa			=> RegexpRef,
	init_arg	=> undef,
	default		=> sub { qr'^(?i:ооба|о|yes|y)$' }
);

has 'nostr' => (
	is			=> 'ro',
	isa			=> RegexpRef,
	init_arg	=> undef,
	default		=> sub { qr'^(?i:жок|ж|no|n)$' }
);

has 'listPatterns' => (
	is			=> 'ro',
	isa			=> HashRef,
	init_arg	=> undef,
	default		=> sub { {
				end => q({0} жана {1}),
				2 => q({0} жана {1}),
		} }
);

has 'number_symbols' => (
	is			=> 'ro',
	isa			=> HashRef,
	init_arg	=> undef,
	default		=> sub { {
		'latn' => {
			'decimal' => q(,),
			'group' => q( ),
			'nan' => q(сан эмес),
		},
	} }
);

has 'number_formats' => (
	is			=> 'ro',
	isa			=> HashRef,
	init_arg	=> undef,
	default		=> sub { {
		decimalFormat => {
			'long' => {
				'1000' => {
					'one' => '0 миң',
					'other' => '0 миң',
				},
				'10000' => {
					'one' => '00 миң',
					'other' => '00 миң',
				},
				'100000' => {
					'one' => '000 миң',
					'other' => '000 миң',
				},
				'1000000' => {
					'one' => '0 миллион',
					'other' => '0 миллион',
				},
				'10000000' => {
					'one' => '00 миллион',
					'other' => '00 миллион',
				},
				'100000000' => {
					'one' => '000 миллион',
					'other' => '000 миллион',
				},
				'1000000000' => {
					'one' => '0 миллиард',
					'other' => '0 миллиард',
				},
				'10000000000' => {
					'one' => '00 миллиард',
					'other' => '00 миллиард',
				},
				'100000000000' => {
					'one' => '000 миллиард',
					'other' => '000 миллиард',
				},
				'1000000000000' => {
					'one' => '0 триллион',
					'other' => '0 триллион',
				},
				'10000000000000' => {
					'one' => '00 триллион',
					'other' => '00 триллион',
				},
				'100000000000000' => {
					'one' => '000 триллион',
					'other' => '000 триллион',
				},
			},
			'short' => {
				'1000' => {
					'one' => '0 миң',
					'other' => '0 миң',
				},
				'10000' => {
					'one' => '00 миң',
					'other' => '00 миң',
				},
				'100000' => {
					'one' => '000 миң',
					'other' => '000 миң',
				},
				'1000000' => {
					'one' => '0 млн',
					'other' => '0 млн',
				},
				'10000000' => {
					'one' => '00 млн',
					'other' => '00 млн',
				},
				'100000000' => {
					'one' => '000 млн',
					'other' => '000 млн',
				},
				'1000000000' => {
					'one' => '0 млд',
					'other' => '0 млд',
				},
				'10000000000' => {
					'one' => '00 млд',
					'other' => '00 млд',
				},
				'100000000000' => {
					'one' => '000 млд',
					'other' => '000 млд',
				},
				'1000000000000' => {
					'one' => '0 трлн',
					'other' => '0 трлн',
				},
				'10000000000000' => {
					'one' => '00 трлн',
					'other' => '00 трлн',
				},
				'100000000000000' => {
					'one' => '000 трлн',
					'other' => '000 трлн',
				},
			},
		},
} },
);

has 'number_currency_formats' => (
	is			=> 'ro',
	isa			=> HashRef,
	init_arg	=> undef,
	default		=> sub { {
		'latn' => {
			'pattern' => {
				'default' => {
					'standard' => {
						'positive' => '#,##0.00 ¤',
					},
				},
			},
		},
} },
);

has 'currencies' => (
	is			=> 'ro',
	isa			=> HashRef,
	init_arg	=> undef,
	default		=> sub { {
		'AED' => {
			display_name => {
				'currency' => q(Бириккен Араб Эмираттарынын дирхамы),
				'one' => q(БАЭ дирхамы),
				'other' => q(БАЭ дирхамы),
			},
		},
		'AFN' => {
			display_name => {
				'currency' => q(Афганстан афганиси),
			},
		},
		'ALL' => {
			display_name => {
				'currency' => q(албан леги),
			},
		},
		'AMD' => {
			display_name => {
				'currency' => q(Армения драмы),
			},
		},
		'ANG' => {
			display_name => {
				'currency' => q(нидерланд-антил гулдени),
			},
		},
		'AOA' => {
			display_name => {
				'currency' => q(Ангола кванзасы),
			},
		},
		'ARS' => {
			display_name => {
				'currency' => q(аргентина песосу),
			},
		},
		'AUD' => {
			symbol => 'AUD',
			display_name => {
				'currency' => q(Австралия доллары),
			},
		},
		'AWG' => {
			display_name => {
				'currency' => q(аруба флорини),
			},
		},
		'AZN' => {
			display_name => {
				'currency' => q(Азербайжан манаты),
			},
		},
		'BAM' => {
			display_name => {
				'currency' => q(босния-герцоговина конвертациялануучу маркасы),
			},
		},
		'BBD' => {
			display_name => {
				'currency' => q(барбадос доллары),
			},
		},
		'BDT' => {
			display_name => {
				'currency' => q(Бангладеш такасы),
			},
		},
		'BGN' => {
			display_name => {
				'currency' => q(болгар левиси),
			},
		},
		'BHD' => {
			display_name => {
				'currency' => q(Бахрейн динары),
			},
		},
		'BIF' => {
			display_name => {
				'currency' => q(Бурунди франкы),
			},
		},
		'BMD' => {
			symbol => 'BD$',
			display_name => {
				'currency' => q(бермуд доллары),
			},
		},
		'BND' => {
			display_name => {
				'currency' => q(Бруней доллары),
			},
		},
		'BOB' => {
			display_name => {
				'currency' => q(боливия боливианосу),
			},
		},
		'BRL' => {
			symbol => 'BRL',
			display_name => {
				'currency' => q(бразилия реалы),
			},
		},
		'BSD' => {
			symbol => 'B$',
			display_name => {
				'currency' => q(багама доллары),
			},
		},
		'BTN' => {
			display_name => {
				'currency' => q(Бутан нгултруму),
			},
		},
		'BWP' => {
			display_name => {
				'currency' => q(Ботсвана пуласы),
			},
		},
		'BYN' => {
			symbol => 'р.',
			display_name => {
				'currency' => q(беларусь рублу),
			},
		},
		'BYR' => {
			display_name => {
				'currency' => q(беларусь рублу \(2000–2016\)),
			},
		},
		'BZD' => {
			symbol => 'BZ$',
			display_name => {
				'currency' => q(белиз доллары),
			},
		},
		'CAD' => {
			symbol => 'CAD',
			display_name => {
				'currency' => q(канада доллары),
			},
		},
		'CDF' => {
			display_name => {
				'currency' => q(Конго франкы),
			},
		},
		'CHF' => {
			display_name => {
				'currency' => q(швейцария франкы),
			},
		},
		'CLP' => {
			display_name => {
				'currency' => q(чили песосу),
			},
		},
		'CNH' => {
			display_name => {
				'currency' => q(Кытай юаны \(оффшор\)),
			},
		},
		'CNY' => {
			display_name => {
				'currency' => q(Кытай юаны),
			},
		},
		'COP' => {
			display_name => {
				'currency' => q(колумбия песосу),
			},
		},
		'CRC' => {
			display_name => {
				'currency' => q(коста-рика колону),
			},
		},
		'CUC' => {
			display_name => {
				'currency' => q(кубанын конвертациялануучу песосу),
			},
		},
		'CUP' => {
			display_name => {
				'currency' => q(куба песосу),
			},
		},
		'CVE' => {
			display_name => {
				'currency' => q(Кабо-Верде эскудосу),
			},
		},
		'CZK' => {
			display_name => {
				'currency' => q(чех кронасы),
			},
		},
		'DJF' => {
			display_name => {
				'currency' => q(Жибути франкы),
			},
		},
		'DKK' => {
			display_name => {
				'currency' => q(дания крону),
			},
		},
		'DOP' => {
			symbol => 'RD$',
			display_name => {
				'currency' => q(доминикан песосу),
			},
		},
		'DZD' => {
			display_name => {
				'currency' => q(алжир динары),
			},
		},
		'EGP' => {
			symbol => 'LE',
			display_name => {
				'currency' => q(египет фунту),
			},
		},
		'ERN' => {
			display_name => {
				'currency' => q(Эритреа накфасы),
			},
		},
		'ETB' => {
			display_name => {
				'currency' => q(Эфиопия бирри),
			},
		},
		'EUR' => {
			display_name => {
				'currency' => q(Евро),
				'one' => q(евро),
				'other' => q(евро),
			},
		},
		'FJD' => {
			display_name => {
				'currency' => q(Фижи доллары),
			},
		},
		'FKP' => {
			display_name => {
				'currency' => q(фолкленд аралдарынын фунту),
			},
		},
		'GBP' => {
			symbol => 'GBP',
			display_name => {
				'currency' => q(британия фунт стерлинги),
			},
		},
		'GEL' => {
			display_name => {
				'currency' => q(Грузия лариси),
			},
		},
		'GHS' => {
			display_name => {
				'currency' => q(Гана седиси),
			},
		},
		'GIP' => {
			display_name => {
				'currency' => q(гибралтар фунту),
			},
		},
		'GMD' => {
			display_name => {
				'currency' => q(Гамбия даласиси),
			},
		},
		'GNF' => {
			display_name => {
				'currency' => q(Гине франкы),
			},
		},
		'GTQ' => {
			display_name => {
				'currency' => q(гватемала кетсалы),
			},
		},
		'GYD' => {
			display_name => {
				'currency' => q(гуйана доллары),
			},
		},
		'HKD' => {
			symbol => 'HKD',
			display_name => {
				'currency' => q(Гонконг доллары),
			},
		},
		'HNL' => {
			display_name => {
				'currency' => q(гондурас лемпирасы),
			},
		},
		'HRK' => {
			symbol => 'Kn',
			display_name => {
				'currency' => q(хорват кунасы),
			},
		},
		'HTG' => {
			display_name => {
				'currency' => q(гаити гурдусу),
			},
		},
		'HUF' => {
			display_name => {
				'currency' => q(венгр форинти),
			},
		},
		'IDR' => {
			display_name => {
				'currency' => q(Индонезия рупийасы),
			},
		},
		'ILS' => {
			symbol => 'ILS',
			display_name => {
				'currency' => q(Израилдин жаңы шекели),
			},
		},
		'INR' => {
			symbol => 'INR',
			display_name => {
				'currency' => q(Индия руписи),
			},
		},
		'IQD' => {
			display_name => {
				'currency' => q(Ирак динары),
			},
		},
		'IRR' => {
			display_name => {
				'currency' => q(Иран риалы),
			},
		},
		'ISK' => {
			display_name => {
				'currency' => q(исландия крону),
			},
		},
		'JMD' => {
			symbol => 'J$',
			display_name => {
				'currency' => q(ямайка доллары),
			},
		},
		'JOD' => {
			display_name => {
				'currency' => q(Йордания динары),
			},
		},
		'JPY' => {
			display_name => {
				'currency' => q(Жапан йени),
			},
		},
		'KES' => {
			display_name => {
				'currency' => q(Кения шиллинги),
			},
		},
		'KGS' => {
			symbol => 'сом',
			display_name => {
				'currency' => q(Кыргызстан сому),
			},
		},
		'KHR' => {
			display_name => {
				'currency' => q(Камбожа риели),
			},
		},
		'KMF' => {
			display_name => {
				'currency' => q(Коморос франкы),
			},
		},
		'KPW' => {
			display_name => {
				'currency' => q(Түндүк Корея вону),
				'one' => q(Түндүк Корея уону),
				'other' => q(Түндүк Корея вону),
			},
		},
		'KRW' => {
			symbol => 'KRW',
			display_name => {
				'currency' => q(Түштүк Корея вону),
			},
		},
		'KWD' => {
			display_name => {
				'currency' => q(Кувейт динары),
			},
		},
		'KYD' => {
			display_name => {
				'currency' => q(кайман доллары),
			},
		},
		'KZT' => {
			display_name => {
				'currency' => q(Казакстан теңгеси),
			},
		},
		'LAK' => {
			display_name => {
				'currency' => q(Лаос киби),
			},
		},
		'LBP' => {
			display_name => {
				'currency' => q(Ливан фунту),
			},
		},
		'LKR' => {
			display_name => {
				'currency' => q(Шри Ланка руписи),
			},
		},
		'LRD' => {
			display_name => {
				'currency' => q(Либерия доллары),
			},
		},
		'LSL' => {
			display_name => {
				'currency' => q(Лесото лотиси),
			},
		},
		'LTL' => {
			display_name => {
				'currency' => q(литва литасы),
			},
		},
		'LVL' => {
			display_name => {
				'currency' => q(латвия латы),
			},
		},
		'LYD' => {
			display_name => {
				'currency' => q(ливия динары),
			},
		},
		'MAD' => {
			display_name => {
				'currency' => q(марокко дирхамы),
			},
		},
		'MDL' => {
			display_name => {
				'currency' => q(молдован лейи),
			},
		},
		'MGA' => {
			display_name => {
				'currency' => q(Мадагаскар ариариси),
			},
		},
		'MKD' => {
			display_name => {
				'currency' => q(македон денары),
			},
		},
		'MMK' => {
			display_name => {
				'currency' => q(Мйанмар кйаты),
			},
		},
		'MNT' => {
			display_name => {
				'currency' => q(Монгол тугриги),
			},
		},
		'MOP' => {
			display_name => {
				'currency' => q(Макау патакасы),
			},
		},
		'MRO' => {
			display_name => {
				'currency' => q(Мавритания угиясы \(1973–2017\)),
			},
		},
		'MRU' => {
			display_name => {
				'currency' => q(Мавритания угиясы),
			},
		},
		'MUR' => {
			display_name => {
				'currency' => q(Мавританий руписи),
			},
		},
		'MVR' => {
			display_name => {
				'currency' => q(Малдив руфийасы),
			},
		},
		'MWK' => {
			display_name => {
				'currency' => q(Малави квачасы),
			},
		},
		'MXN' => {
			symbol => 'MXN',
			display_name => {
				'currency' => q(мексика песосу),
			},
		},
		'MYR' => {
			display_name => {
				'currency' => q(Малайзия ринггити),
			},
		},
		'MZN' => {
			display_name => {
				'currency' => q(Мозамбик метикалы),
			},
		},
		'NAD' => {
			display_name => {
				'currency' => q(Намибия доллары),
			},
		},
		'NGN' => {
			display_name => {
				'currency' => q(Нигерия найрасы),
			},
		},
		'NIO' => {
			display_name => {
				'currency' => q(никарагуа кордобасы),
			},
		},
		'NOK' => {
			display_name => {
				'currency' => q(норвегия крону),
			},
		},
		'NPR' => {
			display_name => {
				'currency' => q(Непал руписи),
			},
		},
		'NZD' => {
			symbol => 'NZD',
			display_name => {
				'currency' => q(Жаңы Зеландия доллары),
			},
		},
		'OMR' => {
			display_name => {
				'currency' => q(Оман риалы),
			},
		},
		'PAB' => {
			display_name => {
				'currency' => q(панама балбоасы),
			},
		},
		'PEN' => {
			display_name => {
				'currency' => q(перу солу),
			},
		},
		'PGK' => {
			display_name => {
				'currency' => q(Папуа Жаңы Гвинея кинасы),
			},
		},
		'PHP' => {
			symbol => 'PHP',
			display_name => {
				'currency' => q(Филиппин песосу),
			},
		},
		'PKR' => {
			display_name => {
				'currency' => q(Пакистан руписи),
			},
		},
		'PLN' => {
			display_name => {
				'currency' => q(польша злотыйы),
			},
		},
		'PYG' => {
			display_name => {
				'currency' => q(парагвай гуараниси),
			},
		},
		'QAR' => {
			display_name => {
				'currency' => q(Катар риалы),
			},
		},
		'RON' => {
			display_name => {
				'currency' => q(румын лейи),
			},
		},
		'RSD' => {
			display_name => {
				'currency' => q(серб динары),
			},
		},
		'RUB' => {
			display_name => {
				'currency' => q(орус рублу),
			},
		},
		'RWF' => {
			display_name => {
				'currency' => q(Руанда франкы),
			},
		},
		'SAR' => {
			display_name => {
				'currency' => q(Сауд риалы),
			},
		},
		'SBD' => {
			display_name => {
				'currency' => q(Соломон аралдарынын доллары),
			},
		},
		'SCR' => {
			display_name => {
				'currency' => q(Сейшел руписи),
			},
		},
		'SDG' => {
			display_name => {
				'currency' => q(судан фунту),
			},
		},
		'SEK' => {
			display_name => {
				'currency' => q(швеция крону),
			},
		},
		'SGD' => {
			display_name => {
				'currency' => q(Сингапур доллары),
			},
		},
		'SHP' => {
			display_name => {
				'currency' => q(Ыйык Елена аралынын фунту),
			},
		},
		'SLE' => {
			display_name => {
				'currency' => q(Сиерра-Леоне леонеси),
			},
		},
		'SLL' => {
			display_name => {
				'currency' => q(Сиерра-Леоне леонеси \(1964—2022\)),
			},
		},
		'SOS' => {
			display_name => {
				'currency' => q(Сомали шиллинги),
			},
		},
		'SRD' => {
			display_name => {
				'currency' => q(суринам доллары),
			},
		},
		'SSP' => {
			display_name => {
				'currency' => q(Түштүк Судан фунту),
			},
		},
		'STD' => {
			display_name => {
				'currency' => q(Сао Томе жана Принсипе добрасы \(1977–2017\)),
			},
		},
		'STN' => {
			display_name => {
				'currency' => q(Сао Томе жана Принсипе добрасы),
			},
		},
		'SYP' => {
			display_name => {
				'currency' => q(Сирия фунту),
			},
		},
		'SZL' => {
			display_name => {
				'currency' => q(Свази лилангени),
				'one' => q(Свази лилангени),
				'other' => q(Свази эмалангени),
			},
		},
		'THB' => {
			symbol => '฿',
			display_name => {
				'currency' => q(Тай баты),
			},
		},
		'TJS' => {
			display_name => {
				'currency' => q(Тажикстан сомониси),
			},
		},
		'TMT' => {
			display_name => {
				'currency' => q(Түркмөнстан манаты),
			},
		},
		'TND' => {
			display_name => {
				'currency' => q(тунис динары),
			},
		},
		'TOP' => {
			display_name => {
				'currency' => q(Тонга паангасы),
			},
		},
		'TRY' => {
			display_name => {
				'currency' => q(Түркия лирасы),
			},
		},
		'TTD' => {
			symbol => 'TT$',
			display_name => {
				'currency' => q(тринидад жана тобаго доллары),
			},
		},
		'TWD' => {
			symbol => 'TWD',
			display_name => {
				'currency' => q(Тайвань жаңы доллары),
			},
		},
		'TZS' => {
			display_name => {
				'currency' => q(Танзания шиллинги),
			},
		},
		'UAH' => {
			display_name => {
				'currency' => q(украин гривени),
			},
		},
		'UGX' => {
			display_name => {
				'currency' => q(Уганда шиллинги),
			},
		},
		'USD' => {
			symbol => 'USD',
			display_name => {
				'currency' => q(АКШ доллары),
			},
		},
		'UYU' => {
			display_name => {
				'currency' => q(уругвай песосу),
			},
		},
		'UZS' => {
			display_name => {
				'currency' => q(Өзбекстан суму),
			},
		},
		'VEF' => {
			display_name => {
				'currency' => q(венесуэла боливары \(2008–2018\)),
			},
		},
		'VES' => {
			display_name => {
				'currency' => q(Венесуэла боливары),
			},
		},
		'VND' => {
			display_name => {
				'currency' => q(Вьетнам доңу),
			},
		},
		'VUV' => {
			display_name => {
				'currency' => q(Вануату ватусу),
			},
		},
		'WST' => {
			display_name => {
				'currency' => q(Самоа таласы),
			},
		},
		'XAF' => {
			display_name => {
				'currency' => q(Борбордук Африка КФА франкы),
			},
		},
		'XCD' => {
			symbol => 'XCD',
			display_name => {
				'currency' => q(чыгыш кариб доллары),
			},
		},
		'XOF' => {
			display_name => {
				'currency' => q(КФА франкы),
			},
		},
		'XPF' => {
			display_name => {
				'currency' => q(КФП франкы),
			},
		},
		'XXX' => {
			display_name => {
				'currency' => q(Белгисиз акча),
				'one' => q(\(белгисиз акча бирдиги\)),
				'other' => q(\(белгисиз акча\)),
			},
		},
		'YER' => {
			display_name => {
				'currency' => q(Йемен риалы),
			},
		},
		'ZAR' => {
			display_name => {
				'currency' => q(Түштүк Африка ранды),
			},
		},
		'ZMW' => {
			display_name => {
				'currency' => q(Замбия квачасы),
			},
		},
	} },
);


has 'calendar_months' => (
	is			=> 'ro',
	isa			=> HashRef,
	init_arg	=> undef,
	default		=> sub { {
			'gregorian' => {
				'format' => {
					abbreviated => {
						nonleap => [
							'янв.',
							'фев.',
							'мар.',
							'апр.',
							'май',
							'июн.',
							'июл.',
							'авг.',
							'сен.',
							'окт.',
							'ноя.',
							'дек.'
						],
						leap => [
							
						],
					},
					wide => {
						nonleap => [
							'январь',
							'февраль',
							'март',
							'апрель',
							'май',
							'июнь',
							'июль',
							'август',
							'сентябрь',
							'октябрь',
							'ноябрь',
							'декабрь'
						],
						leap => [
							
						],
					},
				},
				'stand-alone' => {
					abbreviated => {
						nonleap => [
							'Янв',
							'Фев',
							'Мар',
							'Апр',
							'Май',
							'Июн',
							'Июл',
							'Авг',
							'Сен',
							'Окт',
							'Ноя',
							'Дек'
						],
						leap => [
							
						],
					},
					narrow => {
						nonleap => [
							'Я',
							'Ф',
							'М',
							'А',
							'М',
							'И',
							'И',
							'А',
							'С',
							'О',
							'Н',
							'Д'
						],
						leap => [
							
						],
					},
					wide => {
						nonleap => [
							'Январь',
							'Февраль',
							'Март',
							'Апрель',
							'Май',
							'Июнь',
							'Июль',
							'Август',
							'Сентябрь',
							'Октябрь',
							'Ноябрь',
							'Декабрь'
						],
						leap => [
							
						],
					},
				},
			},
	} },
);

has 'calendar_days' => (
	is			=> 'ro',
	isa			=> HashRef,
	init_arg	=> undef,
	default		=> sub { {
			'gregorian' => {
				'format' => {
					abbreviated => {
						mon => 'дүй.',
						tue => 'шейш.',
						wed => 'шарш.',
						thu => 'бейш.',
						fri => 'жума',
						sat => 'ишм.',
						sun => 'жек.'
					},
					short => {
						mon => 'дш.',
						tue => 'шш.',
						wed => 'шр.',
						thu => 'бш.',
						fri => 'жм.',
						sat => 'иш.',
						sun => 'жш.'
					},
					wide => {
						mon => 'дүйшөмбү',
						tue => 'шейшемби',
						wed => 'шаршемби',
						thu => 'бейшемби',
						fri => 'жума',
						sat => 'ишемби',
						sun => 'жекшемби'
					},
				},
				'stand-alone' => {
					narrow => {
						mon => 'Д',
						tue => 'Ш',
						wed => 'Ш',
						thu => 'Б',
						fri => 'Ж',
						sat => 'И',
						sun => 'Ж'
					},
				},
			},
	} },
);

has 'calendar_quarters' => (
	is			=> 'ro',
	isa			=> HashRef,
	init_arg	=> undef,
	default		=> sub { {
			'gregorian' => {
				'format' => {
					abbreviated => {0 => '1-чей.',
						1 => '2-чей.',
						2 => '3-чей.',
						3 => '4-чей.'
					},
					wide => {0 => '1-чейрек',
						1 => '2-чейрек',
						2 => '3-чейрек',
						3 => '4-чейрек'
					},
				},
				'stand-alone' => {
					abbreviated => {0 => '1-ч.',
						1 => '2-ч.',
						2 => '3-ч.',
						3 => '4-ч.'
					},
				},
			},
	} },
);

has 'day_period_data' => (
	is			=> 'ro',
	isa			=> CodeRef,
	init_arg	=> undef,
	default		=> sub { sub {
		# Time in hhmm format
		my ($self, $type, $time, $day_period_type) = @_;
		$day_period_type //= 'default';
		SWITCH:
		for ($type) {
			if ($_ eq 'generic') {
				if($day_period_type eq 'default') {
					return 'midnight' if $time == 0;
					return 'noon' if $time == 1200;
					return 'afternoon1' if $time >= 1200
						&& $time < 1800;
					return 'evening1' if $time >= 1800
						&& $time < 2100;
					return 'morning1' if $time >= 600
						&& $time < 1200;
					return 'night1' if $time >= 2100;
					return 'night1' if $time < 600;
				}
				if($day_period_type eq 'selection') {
					return 'afternoon1' if $time >= 1200
						&& $time < 1800;
					return 'evening1' if $time >= 1800
						&& $time < 2100;
					return 'morning1' if $time >= 600
						&& $time < 1200;
					return 'night1' if $time >= 2100;
					return 'night1' if $time < 600;
				}
				last SWITCH;
				}
			if ($_ eq 'gregorian') {
				if($day_period_type eq 'default') {
					return 'midnight' if $time == 0;
					return 'noon' if $time == 1200;
					return 'afternoon1' if $time >= 1200
						&& $time < 1800;
					return 'evening1' if $time >= 1800
						&& $time < 2100;
					return 'morning1' if $time >= 600
						&& $time < 1200;
					return 'night1' if $time >= 2100;
					return 'night1' if $time < 600;
				}
				if($day_period_type eq 'selection') {
					return 'afternoon1' if $time >= 1200
						&& $time < 1800;
					return 'evening1' if $time >= 1800
						&& $time < 2100;
					return 'morning1' if $time >= 600
						&& $time < 1200;
					return 'night1' if $time >= 2100;
					return 'night1' if $time < 600;
				}
				last SWITCH;
				}
		}
	} },
);

around day_period_data => sub {
    my ($orig, $self) = @_;
    return $self->$orig;
};

has 'day_periods' => (
	is			=> 'ro',
	isa			=> HashRef,
	init_arg	=> undef,
	default		=> sub { {
		'gregorian' => {
			'format' => {
				'abbreviated' => {
					'afternoon1' => q{түштөн кийин},
					'am' => q{тң},
					'evening1' => q{кечинде},
					'midnight' => q{түн ортосу},
					'morning1' => q{эртең менен},
					'night1' => q{түн ичинде},
					'noon' => q{чак түш},
					'pm' => q{тк},
				},
				'narrow' => {
					'afternoon1' => q{түшт кйн},
					'evening1' => q{кечк},
					'midnight' => q{түн орт},
					'morning1' => q{эртң мн},
					'night1' => q{түн},
					'noon' => q{чт},
				},
				'wide' => {
					'am' => q{таңкы},
					'pm' => q{түштөн кийинки},
				},
			},
			'stand-alone' => {
				'abbreviated' => {
					'afternoon1' => q{түштөн кийин},
					'evening1' => q{кечкурун},
					'morning1' => q{эртең менен},
					'night1' => q{түн},
				},
				'wide' => {
					'am' => q{таңкы},
					'pm' => q{түштөн кийинки},
				},
			},
		},
	} },
);

has 'eras' => (
	is			=> 'ro',
	isa			=> HashRef,
	init_arg	=> undef,
	default		=> sub { {
		'generic' => {
		},
		'gregorian' => {
			abbreviated => {
				'0' => 'б.з.ч.',
				'1' => 'б.з.'
			},
			wide => {
				'0' => 'биздин заманга чейин',
				'1' => 'биздин заман'
			},
		},
	} },
);

has 'date_formats' => (
	is			=> 'ro',
	isa			=> HashRef,
	init_arg	=> undef,
	default		=> sub { {
		'generic' => {
			'full' => q{EEEE, G d-MMMM y-'ж'.},
			'long' => q{d-MMMM G y-'ж'.},
			'medium' => q{dd.MM.y G},
			'short' => q{dd.MM.y GGGGG},
		},
		'gregorian' => {
			'full' => q{y-'ж'., d-MMMM, EEEE},
			'long' => q{y-'ж'., d-MMMM},
			'medium' => q{y-'ж'., d-MMM},
			'short' => q{d/M/yy},
		},
	} },
);

has 'time_formats' => (
	is			=> 'ro',
	isa			=> HashRef,
	init_arg	=> undef,
	default		=> sub { {
		'generic' => {
		},
		'gregorian' => {
			'full' => q{HH:mm:ss zzzz},
			'long' => q{HH:mm:ss z},
			'medium' => q{HH:mm:ss},
			'short' => q{HH:mm},
		},
	} },
);

has 'datetime_formats' => (
	is			=> 'ro',
	isa			=> HashRef,
	init_arg	=> undef,
	default		=> sub { {
		'generic' => {
			'full' => q{{1} {0}},
			'long' => q{{1} {0}},
			'medium' => q{{1} {0}},
			'short' => q{{1} {0}},
		},
		'gregorian' => {
			'full' => q{{1} {0}},
			'long' => q{{1} {0}},
			'medium' => q{{1} {0}},
			'short' => q{{1} {0}},
		},
	} },
);

has 'datetime_formats_available_formats' => (
	is			=> 'ro',
	isa			=> HashRef,
	init_arg	=> undef,
	default		=> sub { {
		'generic' => {
			Ehm => q{E h:mm a},
			Ehms => q{E h:mm:ss a},
			GyMMMEd => q{G y-'ж'. d-MMM, E},
			GyMMMd => q{G y-'ж'. d-MMM},
			MEd => q{dd/MM, E},
			MMMEd => q{d-MMM, E},
			MMMMd => q{d MMMM},
			MMMd => q{d-MMM},
			Md => q{dd/MM},
			h => q{h a},
			hm => q{h:mm a},
			hms => q{h:mm:ss a},
			y => q{y-G},
			yyyy => q{y-G},
			yyyyMEd => q{GGGGG y-dd-MM, E},
			yyyyMMM => q{G y-'ж'. MMM},
			yyyyMMMEd => q{G y-'ж'. d-MMM, E},
			yyyyMMMM => q{G y-'ж'., MMMM},
			yyyyMMMd => q{G y-'ж'. d-MMM},
			yyyyMd => q{GGGGG y-dd-MM},
			yyyyQQQ => q{G y-'ж'. QQQ},
			yyyyQQQQ => q{G y-'ж'. QQQQ},
		},
		'gregorian' => {
			Ehm => q{E h:mm a},
			Ehms => q{E h:mm:ss a},
			Gy => q{G y-'ж'.},
			GyMMM => q{G y-'ж'. MMM},
			GyMMMEd => q{G y-'ж'. d-MMM, E},
			GyMMMd => q{G y-'ж'. d-MMM},
			MEd => q{dd-MM, E},
			MMMEd => q{d-MMM, E},
			MMMMW => q{MMMM 'айынын' W-'аптасы'},
			MMMMd => q{d-MMMM},
			MMMd => q{d-MMM},
			Md => q{dd-MM},
			h => q{h a},
			hm => q{h:mm a},
			hms => q{h:mm:ss a},
			hmsv => q{h:mm:ss a v},
			hmv => q{h:mm a v},
			yMEd => q{y-dd-MM, E},
			yMMM => q{y-'ж'. MMM},
			yMMMEd => q{y-'ж'. d-MMM, E},
			yMMMM => q{y-'ж'., MMMM},
			yMMMd => q{y-'ж'. d-MMM},
			yMd => q{y-dd-MM},
			yQQQ => q{y-'ж'., QQQ},
			yQQQQ => q{y-'ж'., QQQQ},
			yw => q{Y-'жылдын' w-'аптасы'},
		},
	} },
);

has 'datetime_formats_append_item' => (
	is			=> 'ro',
	isa			=> HashRef,
	init_arg	=> undef,
	default		=> sub { {
	} },
);

has 'datetime_formats_interval' => (
	is			=> 'ro',
	isa			=> HashRef,
	init_arg	=> undef,
	default		=> sub { {
		'generic' => {
			M => {
				M => q{M–M},
			},
			MEd => {
				M => q{E, dd.MM – E, dd.MM},
				d => q{E, dd.MM – E, dd.MM},
			},
			MMM => {
				M => q{MMM–MMM},
			},
			MMMEd => {
				M => q{E, d MMM – E, d MMM},
				d => q{E, d – E, d MMM},
			},
			MMMd => {
				M => q{d MMM – d MMM},
				d => q{d–d MMM},
			},
			Md => {
				M => q{dd.MM – dd.MM},
				d => q{dd.MM – dd.MM},
			},
			fallback => '{0} - {1}',
			h => {
				h => q{h–h a},
			},
			hm => {
				h => q{h:mm–h:mm a},
				m => q{h:mm–h:mm a},
			},
			hmv => {
				h => q{h:mm–h:mm a v},
				m => q{h:mm–h:mm a v},
			},
			hv => {
				h => q{h–h a v},
			},
			y => {
				y => q{y-'ж'.–y-'ж'. G},
			},
			yM => {
				M => q{MM.y – MM.y G},
				y => q{MM.y – MM.y G},
			},
			yMEd => {
				M => q{E, dd.MM.y – E, dd.MM.y G},
				d => q{E, dd.MM.y – E, dd.MM.y G},
				y => q{E, dd.MM.y – E, dd.MM.y G},
			},
			yMMM => {
				M => q{MMM–MMM y-'ж'. G},
				y => q{MMM y-'ж'. - MMM y-'ж'. G},
			},
			yMMMEd => {
				M => q{E, d-MMM – E, d-MMM y-'ж'. G},
				d => q{E, d – E, d-MMM y-'ж'. G},
				y => q{E, d-MMM y-'ж'. - E, d-MMM y-'ж'. G},
			},
			yMMMM => {
				M => q{G y-'ж'. MMMM – MMMM},
				y => q{G y-'ж'. MMMM – y-'ж'. MMMM},
			},
			yMMMd => {
				M => q{d-MMM – d-MMM y-'ж'. G},
				d => q{d–d-MMM y-'ж'. G},
				y => q{d-MMM y-'ж'. - d-MMM y-'ж'. G},
			},
			yMd => {
				M => q{dd.MM.y – dd.MM.y G},
				d => q{dd.MM.y – dd.MM.y G},
				y => q{dd.MM.y – dd.MM.y G},
			},
		},
		'gregorian' => {
			MEd => {
				M => q{dd-MM, E – dd-MM, E},
				d => q{dd-MM, E – dd-MM, E},
			},
			MMM => {
				M => q{MMM–MMM},
			},
			MMMEd => {
				M => q{d-MMM, E – d-MMM, E},
				d => q{d-MMM, E – d-MMM, E},
			},
			MMMd => {
				M => q{d-MMM – d-MMM},
				d => q{d–d-MMM},
			},
			Md => {
				M => q{dd.MM – dd.MM},
				d => q{dd.MM – dd.MM},
			},
			fallback => '{0} - {1}',
			h => {
				a => q{a h – a h},
				h => q{a h–h},
			},
			hm => {
				a => q{a h:mm – a h:mm},
				h => q{a h:mm–h:mm},
				m => q{a h:mm–h:mm},
			},
			hmv => {
				a => q{a h:mm – a h:mm v},
				h => q{a h:mm–h:mm v},
				m => q{a h:mm–h:mm v},
			},
			hv => {
				a => q{a h – a h v},
				h => q{a h–h v},
			},
			yM => {
				y => q{MM.y – MM.y},
			},
			yMEd => {
				M => q{y-dd-MM, E – y-dd-MM, E},
				d => q{E, dd.MM.y – E, dd.MM.y},
				y => q{y-dd-MM, E – y-dd-MM, E},
			},
			yMMM => {
				M => q{MMM–MMM y-'ж'.},
				y => q{MMM y-'ж'. - MMM y-'ж'.},
			},
			yMMMEd => {
				M => q{y-'ж'., d-MMM, E – d-MMM E},
				d => q{y-'ж'., d-MMM, E – d-MMM, E},
				y => q{y-'ж'., d-MMM, E – y-'ж'., d-MMM, E},
			},
			yMMMM => {
				M => q{MMMM – MMMM, y-'ж'.},
				y => q{MMMM, y-'ж'. – MMMM, y-'ж'.},
			},
			yMMMd => {
				M => q{d-MMM – d-MMM y-'ж'.},
				d => q{d–d-MMM y-'ж'.},
				y => q{d-MMM y-'ж'. - d-MMM y-'ж'.},
			},
			yMd => {
				M => q{dd.MM.y – dd.MM.y},
				d => q{dd.MM.y – dd.MM.y},
				y => q{dd.MM.y – dd.MM.y},
			},
		},
	} },
);

has 'time_zone_names' => (
	is			=> 'ro',
	isa			=> HashRef,
	init_arg	=> undef,
	default	=> sub { {
		regionFormat => q({0} убактысы),
		'Afghanistan' => {
			long => {
				'standard' => q#Афганистан убактысы#,
			},
		},
		'Africa/Abidjan' => {
			exemplarCity => q#Абиджан#,
		},
		'Africa/Accra' => {
			exemplarCity => q#Аккра#,
		},
		'Africa/Addis_Ababa' => {
			exemplarCity => q#Аддис-Абеба#,
		},
		'Africa/Algiers' => {
			exemplarCity => q#Алжир#,
		},
		'Africa/Asmera' => {
			exemplarCity => q#Асмара#,
		},
		'Africa/Bamako' => {
			exemplarCity => q#Бамако#,
		},
		'Africa/Bangui' => {
			exemplarCity => q#Баги#,
		},
		'Africa/Banjul' => {
			exemplarCity => q#Банжул#,
		},
		'Africa/Bissau' => {
			exemplarCity => q#Бисау#,
		},
		'Africa/Blantyre' => {
			exemplarCity => q#Блантайр#,
		},
		'Africa/Brazzaville' => {
			exemplarCity => q#Браззавилл#,
		},
		'Africa/Bujumbura' => {
			exemplarCity => q#Бужумбура#,
		},
		'Africa/Cairo' => {
			exemplarCity => q#Каир#,
		},
		'Africa/Casablanca' => {
			exemplarCity => q#Касабланка#,
		},
		'Africa/Ceuta' => {
			exemplarCity => q#Сеута#,
		},
		'Africa/Conakry' => {
			exemplarCity => q#Конакри#,
		},
		'Africa/Dakar' => {
			exemplarCity => q#Дакар#,
		},
		'Africa/Dar_es_Salaam' => {
			exemplarCity => q#Дар эс Салаам#,
		},
		'Africa/Djibouti' => {
			exemplarCity => q#Жибути#,
		},
		'Africa/Douala' => {
			exemplarCity => q#Дуала#,
		},
		'Africa/El_Aaiun' => {
			exemplarCity => q#Эл Айун#,
		},
		'Africa/Freetown' => {
			exemplarCity => q#Фритаун#,
		},
		'Africa/Gaborone' => {
			exemplarCity => q#Габороне#,
		},
		'Africa/Harare' => {
			exemplarCity => q#Хараре#,
		},
		'Africa/Johannesburg' => {
			exemplarCity => q#Йоханнесбург#,
		},
		'Africa/Juba' => {
			exemplarCity => q#Жуба#,
		},
		'Africa/Kampala' => {
			exemplarCity => q#Кампала#,
		},
		'Africa/Khartoum' => {
			exemplarCity => q#Картум#,
		},
		'Africa/Kigali' => {
			exemplarCity => q#Кигали#,
		},
		'Africa/Kinshasa' => {
			exemplarCity => q#Киншаса#,
		},
		'Africa/Lagos' => {
			exemplarCity => q#Лагос#,
		},
		'Africa/Libreville' => {
			exemplarCity => q#Либревилл#,
		},
		'Africa/Lome' => {
			exemplarCity => q#Ломе#,
		},
		'Africa/Luanda' => {
			exemplarCity => q#Луанда#,
		},
		'Africa/Lubumbashi' => {
			exemplarCity => q#Лубумбаши#,
		},
		'Africa/Lusaka' => {
			exemplarCity => q#Лусака#,
		},
		'Africa/Malabo' => {
			exemplarCity => q#Малабо#,
		},
		'Africa/Maputo' => {
			exemplarCity => q#Мапуто#,
		},
		'Africa/Maseru' => {
			exemplarCity => q#Масеру#,
		},
		'Africa/Mbabane' => {
			exemplarCity => q#Мбабане#,
		},
		'Africa/Mogadishu' => {
			exemplarCity => q#Могадишу#,
		},
		'Africa/Monrovia' => {
			exemplarCity => q#Монровиа#,
		},
		'Africa/Nairobi' => {
			exemplarCity => q#Найроби#,
		},
		'Africa/Ndjamena' => {
			exemplarCity => q#Нжамена#,
		},
		'Africa/Niamey' => {
			exemplarCity => q#Нйаме#,
		},
		'Africa/Nouakchott' => {
			exemplarCity => q#Нуакшот#,
		},
		'Africa/Ouagadougou' => {
			exemplarCity => q#Уагадугу#,
		},
		'Africa/Porto-Novo' => {
			exemplarCity => q#Порто-Ново#,
		},
		'Africa/Sao_Tome' => {
			exemplarCity => q#Сао Томе#,
		},
		'Africa/Tripoli' => {
			exemplarCity => q#Триполи#,
		},
		'Africa/Tunis' => {
			exemplarCity => q#Тунис#,
		},
		'Africa/Windhoek' => {
			exemplarCity => q#Уиндхук#,
		},
		'Africa_Central' => {
			long => {
				'standard' => q#Борбордук Африка убактысы#,
			},
		},
		'Africa_Eastern' => {
			long => {
				'standard' => q#Чыгыш Африка убактысы#,
			},
		},
		'Africa_Southern' => {
			long => {
				'standard' => q#Түштүк Африка убактысы#,
			},
		},
		'Africa_Western' => {
			long => {
				'daylight' => q#Батыш Африка жайкы убактысы#,
				'generic' => q#Батыш Африка убактысы#,
				'standard' => q#Батыш Африка кышкы убакыты#,
			},
		},
		'Alaska' => {
			long => {
				'daylight' => q#Аляска жайкы убактысы#,
				'generic' => q#Аляска убактысы#,
				'standard' => q#Аляска кышкы убактысы#,
			},
		},
		'Amazon' => {
			long => {
				'daylight' => q#Амазон жайкы убактысы#,
				'generic' => q#Амазон убактысы#,
				'standard' => q#Амазон кышкы убактысы#,
			},
		},
		'America/Adak' => {
			exemplarCity => q#Адак#,
		},
		'America/Anchorage' => {
			exemplarCity => q#Анкориж#,
		},
		'America/Anguilla' => {
			exemplarCity => q#Ангуила#,
		},
		'America/Antigua' => {
			exemplarCity => q#Антигуа#,
		},
		'America/Araguaina' => {
			exemplarCity => q#Арагуаина#,
		},
		'America/Argentina/La_Rioja' => {
			exemplarCity => q#Ла-Риоха#,
		},
		'America/Argentina/Rio_Gallegos' => {
			exemplarCity => q#Рио Галлегос#,
		},
		'America/Argentina/Salta' => {
			exemplarCity => q#Салта#,
		},
		'America/Argentina/San_Juan' => {
			exemplarCity => q#Сан Хуан#,
		},
		'America/Argentina/San_Luis' => {
			exemplarCity => q#Сан Луи#,
		},
		'America/Argentina/Tucuman' => {
			exemplarCity => q#Тукуман#,
		},
		'America/Argentina/Ushuaia' => {
			exemplarCity => q#Ушуайа#,
		},
		'America/Aruba' => {
			exemplarCity => q#Аруба#,
		},
		'America/Asuncion' => {
			exemplarCity => q#Асунсион#,
		},
		'America/Bahia' => {
			exemplarCity => q#Байиа#,
		},
		'America/Bahia_Banderas' => {
			exemplarCity => q#Баийа Бандерас#,
		},
		'America/Barbados' => {
			exemplarCity => q#Барбадос#,
		},
		'America/Belem' => {
			exemplarCity => q#Белем#,
		},
		'America/Belize' => {
			exemplarCity => q#Белиз#,
		},
		'America/Blanc-Sablon' => {
			exemplarCity => q#Бланк-Саблон#,
		},
		'America/Boa_Vista' => {
			exemplarCity => q#Боа Виста#,
		},
		'America/Bogota' => {
			exemplarCity => q#Богота#,
		},
		'America/Boise' => {
			exemplarCity => q#Бойсе#,
		},
		'America/Buenos_Aires' => {
			exemplarCity => q#Буэнос-Айрес#,
		},
		'America/Cambridge_Bay' => {
			exemplarCity => q#Кэмбриж Бей#,
		},
		'America/Campo_Grande' => {
			exemplarCity => q#Кампо Гранде#,
		},
		'America/Cancun' => {
			exemplarCity => q#Канкун#,
		},
		'America/Caracas' => {
			exemplarCity => q#Каракас#,
		},
		'America/Catamarca' => {
			exemplarCity => q#Катамарка#,
		},
		'America/Cayenne' => {
			exemplarCity => q#Кайен#,
		},
		'America/Cayman' => {
			exemplarCity => q#Кайман#,
		},
		'America/Chicago' => {
			exemplarCity => q#Чикаго#,
		},
		'America/Chihuahua' => {
			exemplarCity => q#Чихуахуа#,
		},
		'America/Ciudad_Juarez' => {
			exemplarCity => q#Сьюдад-Хуарес#,
		},
		'America/Coral_Harbour' => {
			exemplarCity => q#Атикокан#,
		},
		'America/Cordoba' => {
			exemplarCity => q#Кордова#,
		},
		'America/Costa_Rica' => {
			exemplarCity => q#Коста-Рика#,
		},
		'America/Creston' => {
			exemplarCity => q#Крестон#,
		},
		'America/Cuiaba' => {
			exemplarCity => q#Куйаба#,
		},
		'America/Curacao' => {
			exemplarCity => q#Кюрасао#,
		},
		'America/Danmarkshavn' => {
			exemplarCity => q#Данмарксхавн#,
		},
		'America/Dawson' => {
			exemplarCity => q#Доусон#,
		},
		'America/Dawson_Creek' => {
			exemplarCity => q#Доусон Грек#,
		},
		'America/Denver' => {
			exemplarCity => q#Денвер#,
		},
		'America/Detroit' => {
			exemplarCity => q#Детройт#,
		},
		'America/Dominica' => {
			exemplarCity => q#Доминика#,
		},
		'America/Edmonton' => {
			exemplarCity => q#Эдмонтон#,
		},
		'America/Eirunepe' => {
			exemplarCity => q#Эйрунепе#,
		},
		'America/El_Salvador' => {
			exemplarCity => q#Эл Салвадор#,
		},
		'America/Fort_Nelson' => {
			exemplarCity => q#Форт Нельсон#,
		},
		'America/Fortaleza' => {
			exemplarCity => q#Форталеза#,
		},
		'America/Glace_Bay' => {
			exemplarCity => q#Глейс Бей#,
		},
		'America/Godthab' => {
			exemplarCity => q#Нуук#,
		},
		'America/Goose_Bay' => {
			exemplarCity => q#Гус Бей#,
		},
		'America/Grand_Turk' => {
			exemplarCity => q#Гранд Түрк#,
		},
		'America/Grenada' => {
			exemplarCity => q#Гренада#,
		},
		'America/Guadeloupe' => {
			exemplarCity => q#Гваделупе#,
		},
		'America/Guatemala' => {
			exemplarCity => q#Гватемала#,
		},
		'America/Guayaquil' => {
			exemplarCity => q#Гуайакил#,
		},
		'America/Guyana' => {
			exemplarCity => q#Гуйана#,
		},
		'America/Halifax' => {
			exemplarCity => q#Галифакс#,
		},
		'America/Havana' => {
			exemplarCity => q#Гавана#,
		},
		'America/Hermosillo' => {
			exemplarCity => q#Эрмосилло#,
		},
		'America/Indiana/Knox' => {
			exemplarCity => q#Нокс, Индиана#,
		},
		'America/Indiana/Marengo' => {
			exemplarCity => q#Маренго, Индиана#,
		},
		'America/Indiana/Petersburg' => {
			exemplarCity => q#Питерсбург, Индиана#,
		},
		'America/Indiana/Tell_City' => {
			exemplarCity => q#Телл Сити, Индиана#,
		},
		'America/Indiana/Vevay' => {
			exemplarCity => q#Вивей, Индиана#,
		},
		'America/Indiana/Vincennes' => {
			exemplarCity => q#Винсен, Индиана#,
		},
		'America/Indiana/Winamac' => {
			exemplarCity => q#Уинамак, Индиана#,
		},
		'America/Indianapolis' => {
			exemplarCity => q#Индианаполис#,
		},
		'America/Inuvik' => {
			exemplarCity => q#Инувик#,
		},
		'America/Iqaluit' => {
			exemplarCity => q#Икалуит#,
		},
		'America/Jamaica' => {
			exemplarCity => q#Ямайка#,
		},
		'America/Jujuy' => {
			exemplarCity => q#Жужуй#,
		},
		'America/Juneau' => {
			exemplarCity => q#Жуно#,
		},
		'America/Kentucky/Monticello' => {
			exemplarCity => q#Монтичелло, Кентукки#,
		},
		'America/Kralendijk' => {
			exemplarCity => q#Кралендейк#,
		},
		'America/La_Paz' => {
			exemplarCity => q#Ла Пас#,
		},
		'America/Lima' => {
			exemplarCity => q#Лима#,
		},
		'America/Los_Angeles' => {
			exemplarCity => q#Лос-Анжелес#,
		},
		'America/Louisville' => {
			exemplarCity => q#Луизвилл#,
		},
		'America/Lower_Princes' => {
			exemplarCity => q#Лоуэр Принсес Куате#,
		},
		'America/Maceio' => {
			exemplarCity => q#Масейо#,
		},
		'America/Managua' => {
			exemplarCity => q#Манагуа#,
		},
		'America/Manaus' => {
			exemplarCity => q#Манаус#,
		},
		'America/Marigot' => {
			exemplarCity => q#Мариго#,
		},
		'America/Martinique' => {
			exemplarCity => q#Мартиник#,
		},
		'America/Matamoros' => {
			exemplarCity => q#Матаморос#,
		},
		'America/Mazatlan' => {
			exemplarCity => q#Мазатлан#,
		},
		'America/Mendoza' => {
			exemplarCity => q#Мендоза#,
		},
		'America/Menominee' => {
			exemplarCity => q#Меномини#,
		},
		'America/Merida' => {
			exemplarCity => q#Мерида#,
		},
		'America/Metlakatla' => {
			exemplarCity => q#Метлакатла#,
		},
		'America/Mexico_City' => {
			exemplarCity => q#Мехико шаары#,
		},
		'America/Miquelon' => {
			exemplarCity => q#Микелон#,
		},
		'America/Moncton' => {
			exemplarCity => q#Монктон#,
		},
		'America/Monterrey' => {
			exemplarCity => q#Монтерей#,
		},
		'America/Montevideo' => {
			exemplarCity => q#Монтевидео#,
		},
		'America/Montserrat' => {
			exemplarCity => q#Монсерат#,
		},
		'America/Nassau' => {
			exemplarCity => q#Нассау#,
		},
		'America/New_York' => {
			exemplarCity => q#Нью-Йорк#,
		},
		'America/Nome' => {
			exemplarCity => q#Ном#,
		},
		'America/Noronha' => {
			exemplarCity => q#Норониа#,
		},
		'America/North_Dakota/Beulah' => {
			exemplarCity => q#Беула, Түндүк Дакота#,
		},
		'America/North_Dakota/Center' => {
			exemplarCity => q#Түндүк Дакотанын борбору#,
		},
		'America/North_Dakota/New_Salem' => {
			exemplarCity => q#Нью-Салем, Түндүк Дакота#,
		},
		'America/Ojinaga' => {
			exemplarCity => q#Охинага#,
		},
		'America/Panama' => {
			exemplarCity => q#Панама#,
		},
		'America/Paramaribo' => {
			exemplarCity => q#Парамарибо#,
		},
		'America/Phoenix' => {
			exemplarCity => q#Феникс#,
		},
		'America/Port-au-Prince' => {
			exemplarCity => q#Порт-о-Пренс#,
		},
		'America/Port_of_Spain' => {
			exemplarCity => q#Порт оф Спейн#,
		},
		'America/Porto_Velho' => {
			exemplarCity => q#Порто Велио#,
		},
		'America/Puerto_Rico' => {
			exemplarCity => q#Пуэрто-Рико#,
		},
		'America/Punta_Arenas' => {
			exemplarCity => q#Пунта-Аренас#,
		},
		'America/Rankin_Inlet' => {
			exemplarCity => q#Рэнкин Инлет#,
		},
		'America/Recife' => {
			exemplarCity => q#Ресифи#,
		},
		'America/Regina' => {
			exemplarCity => q#Регина#,
		},
		'America/Resolute' => {
			exemplarCity => q#Резолут#,
		},
		'America/Rio_Branco' => {
			exemplarCity => q#Рио Бранко#,
		},
		'America/Santarem' => {
			exemplarCity => q#Сантарем#,
		},
		'America/Santiago' => {
			exemplarCity => q#Сантиаго#,
		},
		'America/Santo_Domingo' => {
			exemplarCity => q#Санто Доминго#,
		},
		'America/Sao_Paulo' => {
			exemplarCity => q#Сао Пауло#,
		},
		'America/Scoresbysund' => {
			exemplarCity => q#Иттоккортоормиит#,
		},
		'America/Sitka' => {
			exemplarCity => q#Ситка#,
		},
		'America/St_Barthelemy' => {
			exemplarCity => q#Сент-Бартелеми#,
		},
		'America/St_Johns' => {
			exemplarCity => q#Сент Жонс#,
		},
		'America/St_Kitts' => {
			exemplarCity => q#Сент-Китс#,
		},
		'America/St_Lucia' => {
			exemplarCity => q#Санта Лючия#,
		},
		'America/St_Thomas' => {
			exemplarCity => q#Сент-Томас#,
		},
		'America/St_Vincent' => {
			exemplarCity => q#Сент-Винсент#,
		},
		'America/Swift_Current' => {
			exemplarCity => q#Свифт Каррент#,
		},
		'America/Tegucigalpa' => {
			exemplarCity => q#Тегусигальпа#,
		},
		'America/Thule' => {
			exemplarCity => q#Туле#,
		},
		'America/Tijuana' => {
			exemplarCity => q#Тихуана#,
		},
		'America/Toronto' => {
			exemplarCity => q#Торонто#,
		},
		'America/Tortola' => {
			exemplarCity => q#Тортола#,
		},
		'America/Vancouver' => {
			exemplarCity => q#Ванкувер#,
		},
		'America/Whitehorse' => {
			exemplarCity => q#Уайтхорс#,
		},
		'America/Winnipeg' => {
			exemplarCity => q#Уиннипег#,
		},
		'America/Yakutat' => {
			exemplarCity => q#Якутат#,
		},
		'America_Central' => {
			long => {
				'daylight' => q#Түндүк Америка, борбордук жайкы убактысы#,
				'generic' => q#Түндүк Америка, борбордук убакыт#,
				'standard' => q#Түндүк Америка, борбордук кышкы убактысы#,
			},
		},
		'America_Eastern' => {
			long => {
				'daylight' => q#Түндүк Америка, чыгыш жайкы убактысы#,
				'generic' => q#Түндүк Америка, чыгыш убактысы#,
				'standard' => q#Түндүк Америка, чыгыш кышкы убактысы#,
			},
		},
		'America_Mountain' => {
			long => {
				'daylight' => q#Түндүк Америка, тоо жайкы убактысы#,
				'generic' => q#Түндүк Америка, тоо убактысы#,
				'standard' => q#Түндүк Америка, тоо кышкы убактысы#,
			},
		},
		'America_Pacific' => {
			long => {
				'daylight' => q#Түндүк Америка, Тынч океан жайкы убактысы#,
				'generic' => q#Түндүк Америка, Тынч океан убактысы#,
				'standard' => q#Түндүк Америка, Тынч океан кышкы убактысы#,
			},
		},
		'Antarctica/Casey' => {
			exemplarCity => q#Кейси#,
		},
		'Antarctica/Davis' => {
			exemplarCity => q#Дэвис#,
		},
		'Antarctica/DumontDUrville' => {
			exemplarCity => q#Дюмон д-Урвил#,
		},
		'Antarctica/Macquarie' => {
			exemplarCity => q#Маккуори#,
		},
		'Antarctica/Mawson' => {
			exemplarCity => q#Моусон#,
		},
		'Antarctica/McMurdo' => {
			exemplarCity => q#МакМёрдо#,
		},
		'Antarctica/Palmer' => {
			exemplarCity => q#Палмер#,
		},
		'Antarctica/Rothera' => {
			exemplarCity => q#Ротера#,
		},
		'Antarctica/Syowa' => {
			exemplarCity => q#Саоа#,
		},
		'Antarctica/Troll' => {
			exemplarCity => q#Тролл#,
		},
		'Antarctica/Vostok' => {
			exemplarCity => q#Восток#,
		},
		'Apia' => {
			long => {
				'daylight' => q#Апиа жайкы убактысы#,
				'generic' => q#Апиа убактысы#,
				'standard' => q#Апиа кышкы убактысы#,
			},
		},
		'Arabian' => {
			long => {
				'daylight' => q#Арабия жайкы убакыты#,
				'generic' => q#Арабия убактысы#,
				'standard' => q#Арабия кышкы убакыты#,
			},
		},
		'Arctic/Longyearbyen' => {
			exemplarCity => q#Лонгйербиен#,
		},
		'Argentina' => {
			long => {
				'daylight' => q#Аргентина жайкы убактысы#,
				'generic' => q#Аргентина убактысы#,
				'standard' => q#Аргентина кышкы убактысы#,
			},
		},
		'Argentina_Western' => {
			long => {
				'daylight' => q#Батыш Аргентина жайкы убактысы#,
				'generic' => q#Батыш Аргентина убактысы#,
				'standard' => q#Батыш Аргентина кышкы убактысы#,
			},
		},
		'Armenia' => {
			long => {
				'daylight' => q#Армения жайкы убактысы#,
				'generic' => q#Армения убактысы#,
				'standard' => q#Армения кышкы убакыты#,
			},
		},
		'Asia/Aden' => {
			exemplarCity => q#Аден#,
		},
		'Asia/Almaty' => {
			exemplarCity => q#Алматы#,
		},
		'Asia/Amman' => {
			exemplarCity => q#Амман#,
		},
		'Asia/Anadyr' => {
			exemplarCity => q#Анадыр#,
		},
		'Asia/Aqtau' => {
			exemplarCity => q#Актау#,
		},
		'Asia/Aqtobe' => {
			exemplarCity => q#Актобе#,
		},
		'Asia/Ashgabat' => {
			exemplarCity => q#Ашхабад#,
		},
		'Asia/Atyrau' => {
			exemplarCity => q#Атырау#,
		},
		'Asia/Baghdad' => {
			exemplarCity => q#Багдад#,
		},
		'Asia/Bahrain' => {
			exemplarCity => q#Бахрейн#,
		},
		'Asia/Baku' => {
			exemplarCity => q#Баку#,
		},
		'Asia/Bangkok' => {
			exemplarCity => q#Бангкок#,
		},
		'Asia/Barnaul' => {
			exemplarCity => q#Барнаул#,
		},
		'Asia/Beirut' => {
			exemplarCity => q#Бейрут#,
		},
		'Asia/Bishkek' => {
			exemplarCity => q#Бишкек#,
		},
		'Asia/Brunei' => {
			exemplarCity => q#Бруней#,
		},
		'Asia/Calcutta' => {
			exemplarCity => q#Калькутта#,
		},
		'Asia/Chita' => {
			exemplarCity => q#Чита#,
		},
		'Asia/Colombo' => {
			exemplarCity => q#Коломбо#,
		},
		'Asia/Damascus' => {
			exemplarCity => q#Дамаск#,
		},
		'Asia/Dhaka' => {
			exemplarCity => q#Дакка#,
		},
		'Asia/Dili' => {
			exemplarCity => q#Дили#,
		},
		'Asia/Dubai' => {
			exemplarCity => q#Дубай#,
		},
		'Asia/Dushanbe' => {
			exemplarCity => q#Душанбе#,
		},
		'Asia/Famagusta' => {
			exemplarCity => q#Фамагуста#,
		},
		'Asia/Gaza' => {
			exemplarCity => q#Газа#,
		},
		'Asia/Hebron' => {
			exemplarCity => q#Хеброн#,
		},
		'Asia/Hong_Kong' => {
			exemplarCity => q#Гонконг#,
		},
		'Asia/Hovd' => {
			exemplarCity => q#Ховд#,
		},
		'Asia/Irkutsk' => {
			exemplarCity => q#Иркутск#,
		},
		'Asia/Jakarta' => {
			exemplarCity => q#Жакарта#,
		},
		'Asia/Jayapura' => {
			exemplarCity => q#Жайапура#,
		},
		'Asia/Jerusalem' => {
			exemplarCity => q#Иерусалим#,
		},
		'Asia/Kabul' => {
			exemplarCity => q#Кабул#,
		},
		'Asia/Kamchatka' => {
			exemplarCity => q#Камчатка#,
		},
		'Asia/Karachi' => {
			exemplarCity => q#Карачи#,
		},
		'Asia/Katmandu' => {
			exemplarCity => q#Катманду#,
		},
		'Asia/Khandyga' => {
			exemplarCity => q#Кандыга#,
		},
		'Asia/Krasnoyarsk' => {
			exemplarCity => q#Красноярск#,
		},
		'Asia/Kuala_Lumpur' => {
			exemplarCity => q#Куала Лумпур#,
		},
		'Asia/Kuching' => {
			exemplarCity => q#Кучиң#,
		},
		'Asia/Kuwait' => {
			exemplarCity => q#Кувейт#,
		},
		'Asia/Macau' => {
			exemplarCity => q#Макау#,
		},
		'Asia/Magadan' => {
			exemplarCity => q#Магадан#,
		},
		'Asia/Makassar' => {
			exemplarCity => q#Макассар#,
		},
		'Asia/Manila' => {
			exemplarCity => q#Манила#,
		},
		'Asia/Muscat' => {
			exemplarCity => q#Мускат#,
		},
		'Asia/Nicosia' => {
			exemplarCity => q#Никосия#,
		},
		'Asia/Novokuznetsk' => {
			exemplarCity => q#Новокузнецк#,
		},
		'Asia/Novosibirsk' => {
			exemplarCity => q#Новосибирск#,
		},
		'Asia/Omsk' => {
			exemplarCity => q#Омск#,
		},
		'Asia/Oral' => {
			exemplarCity => q#Орал#,
		},
		'Asia/Phnom_Penh' => {
			exemplarCity => q#Пномпень#,
		},
		'Asia/Pontianak' => {
			exemplarCity => q#Понтианак#,
		},
		'Asia/Pyongyang' => {
			exemplarCity => q#Пхеньян#,
		},
		'Asia/Qatar' => {
			exemplarCity => q#Катар#,
		},
		'Asia/Qostanay' => {
			exemplarCity => q#Костанай#,
		},
		'Asia/Qyzylorda' => {
			exemplarCity => q#Кызылорда#,
		},
		'Asia/Rangoon' => {
			exemplarCity => q#Рангун#,
		},
		'Asia/Riyadh' => {
			exemplarCity => q#Рийад#,
		},
		'Asia/Saigon' => {
			exemplarCity => q#Хо Ши Мин#,
		},
		'Asia/Sakhalin' => {
			exemplarCity => q#Сахалин#,
		},
		'Asia/Samarkand' => {
			exemplarCity => q#Самарканд#,
		},
		'Asia/Seoul' => {
			exemplarCity => q#Сеул#,
		},
		'Asia/Shanghai' => {
			exemplarCity => q#Шанхай#,
		},
		'Asia/Singapore' => {
			exemplarCity => q#Сингапур#,
		},
		'Asia/Srednekolymsk' => {
			exemplarCity => q#Среднеколымск#,
		},
		'Asia/Taipei' => {
			exemplarCity => q#Тайпей#,
		},
		'Asia/Tashkent' => {
			exemplarCity => q#Ташкент#,
		},
		'Asia/Tbilisi' => {
			exemplarCity => q#Тбилиси#,
		},
		'Asia/Tehran' => {
			exemplarCity => q#Тегеран#,
		},
		'Asia/Thimphu' => {
			exemplarCity => q#Тимпу#,
		},
		'Asia/Tokyo' => {
			exemplarCity => q#Токио#,
		},
		'Asia/Tomsk' => {
			exemplarCity => q#Томск#,
		},
		'Asia/Ulaanbaatar' => {
			exemplarCity => q#Улан-Батор#,
		},
		'Asia/Urumqi' => {
			exemplarCity => q#Үрүмчү#,
		},
		'Asia/Ust-Nera' => {
			exemplarCity => q#Усть-Нера#,
		},
		'Asia/Vientiane' => {
			exemplarCity => q#Виентиан#,
		},
		'Asia/Vladivostok' => {
			exemplarCity => q#Владивосток#,
		},
		'Asia/Yakutsk' => {
			exemplarCity => q#Якутск#,
		},
		'Asia/Yekaterinburg' => {
			exemplarCity => q#Екатеринбург#,
		},
		'Asia/Yerevan' => {
			exemplarCity => q#Ереван#,
		},
		'Atlantic' => {
			long => {
				'daylight' => q#Атлантика жайкы убактысы#,
				'generic' => q#Атлантика убактысы#,
				'standard' => q#Атлантика кышкы убактысы#,
			},
		},
		'Atlantic/Azores' => {
			exemplarCity => q#Азор#,
		},
		'Atlantic/Bermuda' => {
			exemplarCity => q#Бермуда#,
		},
		'Atlantic/Canary' => {
			exemplarCity => q#Канари#,
		},
		'Atlantic/Cape_Verde' => {
			exemplarCity => q#Капе Верде#,
		},
		'Atlantic/Faeroe' => {
			exemplarCity => q#Фарер#,
		},
		'Atlantic/Madeira' => {
			exemplarCity => q#Мадейра#,
		},
		'Atlantic/Reykjavik' => {
			exemplarCity => q#Рейкьявик#,
		},
		'Atlantic/South_Georgia' => {
			exemplarCity => q#Түштүк Жоржия#,
		},
		'Atlantic/St_Helena' => {
			exemplarCity => q#Сент Елена#,
		},
		'Atlantic/Stanley' => {
			exemplarCity => q#Стэнли#,
		},
		'Australia/Adelaide' => {
			exemplarCity => q#Аделаида#,
		},
		'Australia/Brisbane' => {
			exemplarCity => q#Брисбен#,
		},
		'Australia/Broken_Hill' => {
			exemplarCity => q#Броукен Хил#,
		},
		'Australia/Darwin' => {
			exemplarCity => q#Дарвин#,
		},
		'Australia/Eucla' => {
			exemplarCity => q#Юкла#,
		},
		'Australia/Hobart' => {
			exemplarCity => q#Хобарт#,
		},
		'Australia/Lindeman' => {
			exemplarCity => q#Линдеман#,
		},
		'Australia/Lord_Howe' => {
			exemplarCity => q#Лорд Хау#,
		},
		'Australia/Melbourne' => {
			exemplarCity => q#Мельбурн#,
		},
		'Australia/Perth' => {
			exemplarCity => q#Перт#,
		},
		'Australia/Sydney' => {
			exemplarCity => q#Сидней#,
		},
		'Australia_Central' => {
			long => {
				'daylight' => q#Австралия борбордук жайкы убактысы#,
				'generic' => q#Австралия борбордук убактысы#,
				'standard' => q#Австралия борбордук кышкы убакыты#,
			},
		},
		'Australia_CentralWestern' => {
			long => {
				'daylight' => q#Австралия борбордук чыгыш жайкы убактысы#,
				'generic' => q#Австралия борбордук батыш убактысы#,
				'standard' => q#Австралия борбордук батыш кышкы убакыты#,
			},
		},
		'Australia_Eastern' => {
			long => {
				'daylight' => q#Австралия чыгыш жайкы убактысы#,
				'generic' => q#Австралия чыгыш убактысы#,
				'standard' => q#Австралия чыгыш кышкы убакыты#,
			},
		},
		'Australia_Western' => {
			long => {
				'daylight' => q#Австралия батыш жайкы убактысы#,
				'generic' => q#Австралия батыш убактысы#,
				'standard' => q#Австралия батыш кышкы убакыты#,
			},
		},
		'Azerbaijan' => {
			long => {
				'daylight' => q#Азербайжан жайкы убактысы#,
				'generic' => q#Азербайжан убактысы#,
				'standard' => q#Азербайжан кышкы убакыты#,
			},
		},
		'Azores' => {
			long => {
				'daylight' => q#Азорс жайкы убактысы#,
				'generic' => q#Азор убактысы#,
				'standard' => q#Азор кышкы убакыты#,
			},
		},
		'Bangladesh' => {
			long => {
				'daylight' => q#Бангладеш жайкы убактысы#,
				'generic' => q#Бангладеш убактысы#,
				'standard' => q#Бангладеш кышкы убакыты#,
			},
		},
		'Bhutan' => {
			long => {
				'standard' => q#Бутан убактысы#,
			},
		},
		'Bolivia' => {
			long => {
				'standard' => q#Боливия убактысы#,
			},
		},
		'Brasilia' => {
			long => {
				'daylight' => q#Бразилия жайкы убактысы#,
				'generic' => q#Бразилия убактысы#,
				'standard' => q#Бразилия кышкы убактысы#,
			},
		},
		'Brunei' => {
			long => {
				'standard' => q#Бруней Даруссалам убактысы#,
			},
		},
		'Cape_Verde' => {
			long => {
				'daylight' => q#Капе Верде жайкы убактысы#,
				'generic' => q#Капе Верде убактысы#,
				'standard' => q#Капе Верде кышкы убакыты#,
			},
		},
		'Chamorro' => {
			long => {
				'standard' => q#Чаморро убактысы#,
			},
		},
		'Chatham' => {
			long => {
				'daylight' => q#Чатам жайкы убактысы#,
				'generic' => q#Чатам убактысы#,
				'standard' => q#Чатам кышкы убакыт#,
			},
		},
		'Chile' => {
			long => {
				'daylight' => q#Чили жайкы убактысы#,
				'generic' => q#Чили убактысы#,
				'standard' => q#Чили кышкы убактысы#,
			},
		},
		'China' => {
			long => {
				'daylight' => q#Кытай жайкы убакыты#,
				'generic' => q#Кытай убактысы#,
				'standard' => q#Кытай кышкы убакыты#,
			},
		},
		'Christmas' => {
			long => {
				'standard' => q#Крисмас аралынын убактысы#,
			},
		},
		'Cocos' => {
			long => {
				'standard' => q#Кокос аралдарынын убактысы#,
			},
		},
		'Colombia' => {
			long => {
				'daylight' => q#Колумбия жайкы убактысы#,
				'generic' => q#Колумбия убактысы#,
				'standard' => q#Колумбия кышкы убактысы#,
			},
		},
		'Cook' => {
			long => {
				'daylight' => q#Кук аралдарынын жарым жайкы убактысы#,
				'generic' => q#Кук аралдарынын убактысы#,
				'standard' => q#Кук аралдарынын кышкы убактысы#,
			},
		},
		'Cuba' => {
			long => {
				'daylight' => q#Куба жайкы убактысы#,
				'generic' => q#Куба убактысы#,
				'standard' => q#Куба кышкы убактысы#,
			},
		},
		'Davis' => {
			long => {
				'standard' => q#Дэвис убактысы#,
			},
		},
		'DumontDUrville' => {
			long => {
				'standard' => q#Дюмон-д-Урвил убактысы#,
			},
		},
		'East_Timor' => {
			long => {
				'standard' => q#Чыгыш Тимор убактысы#,
			},
		},
		'Easter' => {
			long => {
				'daylight' => q#Истер аралынын жайкы убакыты#,
				'generic' => q#Истер аралынын убактысы#,
				'standard' => q#Истер аралынын кышкы убакыты#,
			},
		},
		'Ecuador' => {
			long => {
				'standard' => q#Экуадор убактысы#,
			},
		},
		'Etc/UTC' => {
			long => {
				'standard' => q#Бирдиктүү дүйнөлүк убакыт#,
			},
		},
		'Etc/Unknown' => {
			exemplarCity => q#Белгисиз шаар#,
		},
		'Europe/Amsterdam' => {
			exemplarCity => q#Амстердам#,
		},
		'Europe/Andorra' => {
			exemplarCity => q#Андорра#,
		},
		'Europe/Astrakhan' => {
			exemplarCity => q#Астрахань#,
		},
		'Europe/Athens' => {
			exemplarCity => q#Афины#,
		},
		'Europe/Belgrade' => {
			exemplarCity => q#Белград#,
		},
		'Europe/Berlin' => {
			exemplarCity => q#Берлин#,
		},
		'Europe/Bratislava' => {
			exemplarCity => q#Братислава#,
		},
		'Europe/Brussels' => {
			exemplarCity => q#Брюссель#,
		},
		'Europe/Bucharest' => {
			exemplarCity => q#Бухарест#,
		},
		'Europe/Budapest' => {
			exemplarCity => q#Будапешт#,
		},
		'Europe/Busingen' => {
			exemplarCity => q#Бузинген#,
		},
		'Europe/Chisinau' => {
			exemplarCity => q#Кишинев#,
		},
		'Europe/Copenhagen' => {
			exemplarCity => q#Копенгаген#,
		},
		'Europe/Dublin' => {
			exemplarCity => q#Дублин#,
			long => {
				'daylight' => q#Ирландия кышкы убакыты#,
			},
		},
		'Europe/Gibraltar' => {
			exemplarCity => q#Гибралтар#,
		},
		'Europe/Guernsey' => {
			exemplarCity => q#Гернси#,
		},
		'Europe/Helsinki' => {
			exemplarCity => q#Хельсинки#,
		},
		'Europe/Isle_of_Man' => {
			exemplarCity => q#Мэн аралы#,
		},
		'Europe/Istanbul' => {
			exemplarCity => q#Стамбул#,
		},
		'Europe/Jersey' => {
			exemplarCity => q#Жерси#,
		},
		'Europe/Kaliningrad' => {
			exemplarCity => q#Калининград#,
		},
		'Europe/Kiev' => {
			exemplarCity => q#Киев#,
		},
		'Europe/Kirov' => {
			exemplarCity => q#Киров#,
		},
		'Europe/Lisbon' => {
			exemplarCity => q#Лиссабон#,
		},
		'Europe/Ljubljana' => {
			exemplarCity => q#Любляна#,
		},
		'Europe/London' => {
			exemplarCity => q#Лондон#,
			long => {
				'daylight' => q#Британия жайкы убактысы#,
			},
		},
		'Europe/Luxembourg' => {
			exemplarCity => q#Люксембург#,
		},
		'Europe/Madrid' => {
			exemplarCity => q#Мадрид#,
		},
		'Europe/Malta' => {
			exemplarCity => q#Мальта#,
		},
		'Europe/Mariehamn' => {
			exemplarCity => q#Мариехамн#,
		},
		'Europe/Minsk' => {
			exemplarCity => q#Минск#,
		},
		'Europe/Monaco' => {
			exemplarCity => q#Монако#,
		},
		'Europe/Moscow' => {
			exemplarCity => q#Москва#,
		},
		'Europe/Oslo' => {
			exemplarCity => q#Осло#,
		},
		'Europe/Paris' => {
			exemplarCity => q#Париж#,
		},
		'Europe/Podgorica' => {
			exemplarCity => q#Подгорица#,
		},
		'Europe/Prague' => {
			exemplarCity => q#Прага#,
		},
		'Europe/Riga' => {
			exemplarCity => q#Рига#,
		},
		'Europe/Rome' => {
			exemplarCity => q#Рим#,
		},
		'Europe/Samara' => {
			exemplarCity => q#Самара#,
		},
		'Europe/San_Marino' => {
			exemplarCity => q#Сан Марино#,
		},
		'Europe/Sarajevo' => {
			exemplarCity => q#Сараево#,
		},
		'Europe/Saratov' => {
			exemplarCity => q#Саратов#,
		},
		'Europe/Simferopol' => {
			exemplarCity => q#Симферополь#,
		},
		'Europe/Skopje' => {
			exemplarCity => q#Скопйе#,
		},
		'Europe/Sofia' => {
			exemplarCity => q#София#,
		},
		'Europe/Stockholm' => {
			exemplarCity => q#Стокгольм#,
		},
		'Europe/Tallinn' => {
			exemplarCity => q#Таллин#,
		},
		'Europe/Tirane' => {
			exemplarCity => q#Тирана#,
		},
		'Europe/Ulyanovsk' => {
			exemplarCity => q#Ульяновск#,
		},
		'Europe/Vaduz' => {
			exemplarCity => q#Фадуц#,
		},
		'Europe/Vatican' => {
			exemplarCity => q#Ватикан#,
		},
		'Europe/Vienna' => {
			exemplarCity => q#Вена#,
		},
		'Europe/Vilnius' => {
			exemplarCity => q#Вильнюс#,
		},
		'Europe/Volgograd' => {
			exemplarCity => q#Волгоград#,
		},
		'Europe/Warsaw' => {
			exemplarCity => q#Варшава#,
		},
		'Europe/Zagreb' => {
			exemplarCity => q#Загреб#,
		},
		'Europe/Zurich' => {
			exemplarCity => q#Цюрих#,
		},
		'Europe_Central' => {
			long => {
				'daylight' => q#Борбордук Европа жайкы убактысы#,
				'generic' => q#Борбордук Европа убактысы#,
				'standard' => q#Борбордук Европа кышкы убакыты#,
			},
		},
		'Europe_Eastern' => {
			long => {
				'daylight' => q#Чыгыш Европа жайкы убактысы#,
				'generic' => q#Чыгыш Европа убактысы#,
				'standard' => q#Чыгыш Европа кышкы убакыты#,
			},
		},
		'Europe_Further_Eastern' => {
			long => {
				'standard' => q#Калининград жана Минск убактысы#,
			},
		},
		'Europe_Western' => {
			long => {
				'daylight' => q#Батыш Европа жайкы убактысы#,
				'generic' => q#Батыш Европа убактысы#,
				'standard' => q#Батыш Европа кышкы убакыты#,
			},
		},
		'Falkland' => {
			long => {
				'daylight' => q#Фолкленд аралдарынын жайкы убактысы#,
				'generic' => q#Фолкленд аралдарынын убактысы#,
				'standard' => q#Фолкленд аралдарынын кышкы убакыты#,
			},
		},
		'Fiji' => {
			long => {
				'daylight' => q#Фижи жайкы убактысы#,
				'generic' => q#Фижи убактысы#,
				'standard' => q#Фижи кышкы убакыты#,
			},
		},
		'French_Guiana' => {
			long => {
				'standard' => q#Француз Гвиана убактысы#,
			},
		},
		'French_Southern' => {
			long => {
				'standard' => q#Француз Түштүгү жана Антарктика убактысы#,
			},
		},
		'GMT' => {
			long => {
				'standard' => q#Гринвич боюнча орточо убакыт#,
			},
		},
		'Galapagos' => {
			long => {
				'standard' => q#Галапагос убактысы#,
			},
		},
		'Gambier' => {
			long => {
				'standard' => q#Гамбие убактысы#,
			},
		},
		'Georgia' => {
			long => {
				'daylight' => q#Грузия жайкы убактысы#,
				'generic' => q#Грузия убактысы#,
				'standard' => q#Грузия кышкы убакыты#,
			},
		},
		'Gilbert_Islands' => {
			long => {
				'standard' => q#Гилберт убактысы#,
			},
		},
		'Greenland_Eastern' => {
			long => {
				'daylight' => q#Чыгыш Гренландия жайкы убактысы#,
				'generic' => q#Чыгыш Гренландия убактысы#,
				'standard' => q#Чыгыш Гренландия кышкы убактысы#,
			},
		},
		'Greenland_Western' => {
			long => {
				'daylight' => q#Батыш Гренландия жайкы убактысы#,
				'generic' => q#Батыш Гренландия убактысы#,
				'standard' => q#Батыш Гренландия кышкы убактысы#,
			},
		},
		'Gulf' => {
			long => {
				'standard' => q#Булуңдун стандарттык убакыты#,
			},
		},
		'Guyana' => {
			long => {
				'standard' => q#Гвиана убактысы#,
			},
		},
		'Hawaii_Aleutian' => {
			long => {
				'daylight' => q#Гавайи-Алеут жайкы убактысы#,
				'generic' => q#Гавайи-Алеут убактысы#,
				'standard' => q#Гавайи-Алеут кышкы убактысы#,
			},
		},
		'Hong_Kong' => {
			long => {
				'daylight' => q#Гонконг жайкы убактысы#,
				'generic' => q#Гонконг убактысы#,
				'standard' => q#Гонконг кышкы убакыты#,
			},
		},
		'Hovd' => {
			long => {
				'daylight' => q#Ховд жайкы убактысы#,
				'generic' => q#Ховд убактысы#,
				'standard' => q#Ховд кышкы убакыты#,
			},
		},
		'India' => {
			long => {
				'standard' => q#Индия убактысы#,
			},
		},
		'Indian/Antananarivo' => {
			exemplarCity => q#Антананариво#,
		},
		'Indian/Chagos' => {
			exemplarCity => q#Чагос#,
		},
		'Indian/Christmas' => {
			exemplarCity => q#Крисмас#,
		},
		'Indian/Cocos' => {
			exemplarCity => q#Кокос#,
		},
		'Indian/Comoro' => {
			exemplarCity => q#Коморо#,
		},
		'Indian/Kerguelen' => {
			exemplarCity => q#Кергелен#,
		},
		'Indian/Mahe' => {
			exemplarCity => q#Маэ#,
		},
		'Indian/Maldives' => {
			exemplarCity => q#Мальдив аралдары#,
		},
		'Indian/Mauritius' => {
			exemplarCity => q#Маврикий#,
		},
		'Indian/Mayotte' => {
			exemplarCity => q#Майотт#,
		},
		'Indian/Reunion' => {
			exemplarCity => q#Реюнион#,
		},
		'Indian_Ocean' => {
			long => {
				'standard' => q#Инди океан убактысы#,
			},
		},
		'Indochina' => {
			long => {
				'standard' => q#Индокытай убактысы#,
			},
		},
		'Indonesia_Central' => {
			long => {
				'standard' => q#Борбордук Индонезия убактысы#,
			},
		},
		'Indonesia_Eastern' => {
			long => {
				'standard' => q#Чыгыш Индонезия убактысы#,
			},
		},
		'Indonesia_Western' => {
			long => {
				'standard' => q#Батыш Индонезия убактысы#,
			},
		},
		'Iran' => {
			long => {
				'daylight' => q#Иран күндүзгү убактысы#,
				'generic' => q#Иран убактысы#,
				'standard' => q#Иран кышкы убакыты#,
			},
		},
		'Irkutsk' => {
			long => {
				'daylight' => q#Иркутск жайкы убакыты#,
				'generic' => q#Иркутск убактысы#,
				'standard' => q#Иркутск кышкы убакыты#,
			},
		},
		'Israel' => {
			long => {
				'daylight' => q#Израиль жайкы убакыты#,
				'generic' => q#Израиль убакыты#,
				'standard' => q#Израиль кышкы убакыты#,
			},
		},
		'Japan' => {
			long => {
				'daylight' => q#Жапон жайкы убактысы#,
				'generic' => q#Жапон убактысы#,
				'standard' => q#Жапон кышкы убакыты#,
			},
		},
		'Kazakhstan' => {
			long => {
				'standard' => q#Казакстан убактысы#,
			},
		},
		'Kazakhstan_Eastern' => {
			long => {
				'standard' => q#Чыгыш Казакстан убактысы#,
			},
		},
		'Kazakhstan_Western' => {
			long => {
				'standard' => q#Батыш Казакстан убактысы#,
			},
		},
		'Korea' => {
			long => {
				'daylight' => q#Корея жайкы убактысы#,
				'generic' => q#Корея убактысы#,
				'standard' => q#Корея кышкы убакыты#,
			},
		},
		'Kosrae' => {
			long => {
				'standard' => q#Косрае убактысы#,
			},
		},
		'Krasnoyarsk' => {
			long => {
				'daylight' => q#Красноярск жайкы убактысы#,
				'generic' => q#Красноярск убактысы#,
				'standard' => q#Красноярск кышкы убакыты#,
			},
		},
		'Kyrgystan' => {
			long => {
				'standard' => q#Кыргызстан убактысы#,
			},
		},
		'Line_Islands' => {
			long => {
				'standard' => q#Лайн аралдарынын убактысы#,
			},
		},
		'Lord_Howe' => {
			long => {
				'daylight' => q#Лорд Хау жайкы убактысы#,
				'generic' => q#Лорд Хау убактысы#,
				'standard' => q#Лорд Хау кышкы убакыты#,
			},
		},
		'Magadan' => {
			long => {
				'daylight' => q#Магадан жайкы убактысы#,
				'generic' => q#Магадан убактысы#,
				'standard' => q#Магадан кышкы убакыты#,
			},
		},
		'Malaysia' => {
			long => {
				'standard' => q#Малайзия убактысы#,
			},
		},
		'Maldives' => {
			long => {
				'standard' => q#Мальдив убактысы#,
			},
		},
		'Marquesas' => {
			long => {
				'standard' => q#Маркезас убактысы#,
			},
		},
		'Marshall_Islands' => {
			long => {
				'standard' => q#Маршалл аралдарынын убактысы#,
			},
		},
		'Mauritius' => {
			long => {
				'daylight' => q#Маврикий жайкы убактысы#,
				'generic' => q#Маврикий убактысы#,
				'standard' => q#Маврикий кышкы убакыты#,
			},
		},
		'Mawson' => {
			long => {
				'standard' => q#Моусон убактысы#,
			},
		},
		'Mexico_Pacific' => {
			long => {
				'daylight' => q#Мексика, Тынч океан жайкы убактысы#,
				'generic' => q#Мексика, Тынч океан убактысы#,
				'standard' => q#Мексика, Тынч океан кышкы убактысы#,
			},
		},
		'Mongolia' => {
			long => {
				'daylight' => q#Улан Батор жайкы убактысы#,
				'generic' => q#Улан Батор убактысы#,
				'standard' => q#Улан Батор кышкы убакыты#,
			},
		},
		'Moscow' => {
			long => {
				'daylight' => q#Москва жайкы убактысы#,
				'generic' => q#Москва убактысы#,
				'standard' => q#Москва кышкы убакыты#,
			},
		},
		'Myanmar' => {
			long => {
				'standard' => q#Мйанмар убактысы#,
			},
		},
		'Nauru' => {
			long => {
				'standard' => q#Науру убактысы#,
			},
		},
		'Nepal' => {
			long => {
				'standard' => q#Непал убактысы#,
			},
		},
		'New_Caledonia' => {
			long => {
				'daylight' => q#Жаңы Каледония жайкы убактысы#,
				'generic' => q#Жаңы Каледония убактысы#,
				'standard' => q#Жаңы Каледония кышкы убактысы#,
			},
		},
		'New_Zealand' => {
			long => {
				'daylight' => q#Жаңы Зеландия жайкы убакыты#,
				'generic' => q#Жаңы Зеландия убактысы#,
				'standard' => q#Жаңы Зеландия кышкы убакыты#,
			},
		},
		'Newfoundland' => {
			long => {
				'daylight' => q#Нюфаундлэнд жайкы убактысы#,
				'generic' => q#Нюфаундлэнд убактысы#,
				'standard' => q#Нюфаундлэнд кышкы убактысы#,
			},
		},
		'Niue' => {
			long => {
				'standard' => q#Ниуэ убактысы#,
			},
		},
		'Norfolk' => {
			long => {
				'daylight' => q#Норфолк жайкы убактысы#,
				'generic' => q#Норфолк убактысы#,
				'standard' => q#Норфолк кышкы убактысы#,
			},
		},
		'Noronha' => {
			long => {
				'daylight' => q#Фернандо де Норонья жайкы убактысы#,
				'generic' => q#Фернандо де Норонья убактысы#,
				'standard' => q#Фернандо де Норонья кышкы убактысы#,
			},
		},
		'Novosibirsk' => {
			long => {
				'daylight' => q#Новосибирск жайкы убактысы#,
				'generic' => q#Новосибирск убактысы#,
				'standard' => q#Новосибирск кышкы убакыты#,
			},
		},
		'Omsk' => {
			long => {
				'daylight' => q#Омск жайкы убактысы#,
				'generic' => q#Омск убактысы#,
				'standard' => q#Омск кышкы убакыты#,
			},
		},
		'Pacific/Apia' => {
			exemplarCity => q#Апиа#,
		},
		'Pacific/Auckland' => {
			exemplarCity => q#Оклэнд#,
		},
		'Pacific/Bougainville' => {
			exemplarCity => q#Бугенвиль#,
		},
		'Pacific/Chatham' => {
			exemplarCity => q#Чатем#,
		},
		'Pacific/Easter' => {
			exemplarCity => q#Истер#,
		},
		'Pacific/Efate' => {
			exemplarCity => q#Эфат#,
		},
		'Pacific/Enderbury' => {
			exemplarCity => q#Эндербери#,
		},
		'Pacific/Fakaofo' => {
			exemplarCity => q#Факаофо#,
		},
		'Pacific/Fiji' => {
			exemplarCity => q#Фижи#,
		},
		'Pacific/Funafuti' => {
			exemplarCity => q#Фунафути#,
		},
		'Pacific/Galapagos' => {
			exemplarCity => q#Галапагос#,
		},
		'Pacific/Gambier' => {
			exemplarCity => q#Гамбие#,
		},
		'Pacific/Guadalcanal' => {
			exemplarCity => q#Гуадалканал#,
		},
		'Pacific/Guam' => {
			exemplarCity => q#Гуам#,
		},
		'Pacific/Honolulu' => {
			exemplarCity => q#Гонолулу#,
		},
		'Pacific/Kanton' => {
			exemplarCity => q#Кантон#,
		},
		'Pacific/Kiritimati' => {
			exemplarCity => q#Киритимати#,
		},
		'Pacific/Kosrae' => {
			exemplarCity => q#Козрае#,
		},
		'Pacific/Kwajalein' => {
			exemplarCity => q#Куажалейн#,
		},
		'Pacific/Majuro' => {
			exemplarCity => q#Мажуро#,
		},
		'Pacific/Marquesas' => {
			exemplarCity => q#Маркезас#,
		},
		'Pacific/Midway' => {
			exemplarCity => q#Мидуэй#,
		},
		'Pacific/Nauru' => {
			exemplarCity => q#Науру#,
		},
		'Pacific/Niue' => {
			exemplarCity => q#Ниуэ#,
		},
		'Pacific/Norfolk' => {
			exemplarCity => q#Норфолк#,
		},
		'Pacific/Noumea' => {
			exemplarCity => q#Нумеа#,
		},
		'Pacific/Pago_Pago' => {
			exemplarCity => q#Паго Паго#,
		},
		'Pacific/Palau' => {
			exemplarCity => q#Палау#,
		},
		'Pacific/Pitcairn' => {
			exemplarCity => q#Питкэрн#,
		},
		'Pacific/Ponape' => {
			exemplarCity => q#Понпей#,
		},
		'Pacific/Port_Moresby' => {
			exemplarCity => q#Порт Моэрсби#,
		},
		'Pacific/Rarotonga' => {
			exemplarCity => q#Раготонга#,
		},
		'Pacific/Saipan' => {
			exemplarCity => q#Сайпан#,
		},
		'Pacific/Tahiti' => {
			exemplarCity => q#Таити#,
		},
		'Pacific/Tarawa' => {
			exemplarCity => q#Тарава#,
		},
		'Pacific/Tongatapu' => {
			exemplarCity => q#Тонгатапу#,
		},
		'Pacific/Truk' => {
			exemplarCity => q#Чуук#,
		},
		'Pacific/Wake' => {
			exemplarCity => q#Уейк#,
		},
		'Pacific/Wallis' => {
			exemplarCity => q#Уолис#,
		},
		'Pakistan' => {
			long => {
				'daylight' => q#Пакистан жайкы убактысы#,
				'generic' => q#Пакистан убактысы#,
				'standard' => q#Пакистан кышкы убакыты#,
			},
		},
		'Palau' => {
			long => {
				'standard' => q#Палау убактысы#,
			},
		},
		'Papua_New_Guinea' => {
			long => {
				'standard' => q#Папуа-Жаңы Гвинея убакыты#,
			},
		},
		'Paraguay' => {
			long => {
				'daylight' => q#Парагвай жайкы убактысы#,
				'generic' => q#Парагвай убактысы#,
				'standard' => q#Парагвай кышкы убактысы#,
			},
		},
		'Peru' => {
			long => {
				'daylight' => q#Перу жайкы убактысы#,
				'generic' => q#Перу убактысы#,
				'standard' => q#Перу кышкы убактысы#,
			},
		},
		'Philippines' => {
			long => {
				'daylight' => q#Филиппин аралдарынын жайкы убактысы#,
				'generic' => q#Филиппин аралдарынын убактысы#,
				'standard' => q#Филиппин аралдарынын кышкы убактысы#,
			},
		},
		'Phoenix_Islands' => {
			long => {
				'standard' => q#Феникс аралдарынын убактысы#,
			},
		},
		'Pierre_Miquelon' => {
			long => {
				'daylight' => q#Сен Пьер жана Микелон жайкы убактысы#,
				'generic' => q#Сен Пьер жана Микелон убактысы#,
				'standard' => q#Сен Пьер жана Микелон кышкы убактысы#,
			},
		},
		'Pitcairn' => {
			long => {
				'standard' => q#Питкэрнг убактысы#,
			},
		},
		'Ponape' => {
			long => {
				'standard' => q#Понапе убактысы#,
			},
		},
		'Pyongyang' => {
			long => {
				'standard' => q#Пхеньян убакыты#,
			},
		},
		'Reunion' => {
			long => {
				'standard' => q#Реюнион убактысы#,
			},
		},
		'Rothera' => {
			long => {
				'standard' => q#Ротера убактысы#,
			},
		},
		'Sakhalin' => {
			long => {
				'daylight' => q#Сахалин жайкы убактысы#,
				'generic' => q#Сахалин убактысы#,
				'standard' => q#Сахалин кышкы убакыты#,
			},
		},
		'Samoa' => {
			long => {
				'daylight' => q#Самоа жайкы убактысы#,
				'generic' => q#Самоа убактысы#,
				'standard' => q#Самоа кышкы убактысы#,
			},
		},
		'Seychelles' => {
			long => {
				'standard' => q#Сейшел убактысы#,
			},
		},
		'Singapore' => {
			long => {
				'standard' => q#Сингапур убактысы#,
			},
		},
		'Solomon' => {
			long => {
				'standard' => q#Соломон аралдарынын убактысы#,
			},
		},
		'South_Georgia' => {
			long => {
				'standard' => q#Түштүк Жоржия убактысы#,
			},
		},
		'Suriname' => {
			long => {
				'standard' => q#Суринаме убактысы#,
			},
		},
		'Syowa' => {
			long => {
				'standard' => q#Саоа убактысы#,
			},
		},
		'Tahiti' => {
			long => {
				'standard' => q#Таити убактысы#,
			},
		},
		'Taipei' => {
			long => {
				'daylight' => q#Тайпей жайкы убакыты#,
				'generic' => q#Тайпей убактысы#,
				'standard' => q#Тайпей кышкы убакыты#,
			},
		},
		'Tajikistan' => {
			long => {
				'standard' => q#Тажикстан убактысы#,
			},
		},
		'Tokelau' => {
			long => {
				'standard' => q#Токелау убактысы#,
			},
		},
		'Tonga' => {
			long => {
				'daylight' => q#Тонга жайкы убактысы#,
				'generic' => q#Тонга убактысы#,
				'standard' => q#Тонга кышкы убактысы#,
			},
		},
		'Truk' => {
			long => {
				'standard' => q#Чуук убактысы#,
			},
		},
		'Turkmenistan' => {
			long => {
				'daylight' => q#Түркмөнстан жайкы убактысы#,
				'generic' => q#Түркмөнстан убактысы#,
				'standard' => q#Түркмөнстан кышкы убакыты#,
			},
		},
		'Tuvalu' => {
			long => {
				'standard' => q#Тувалу убактысы#,
			},
		},
		'Uruguay' => {
			long => {
				'daylight' => q#Уругвай жайкы убактысы#,
				'generic' => q#Уругвай убактысы#,
				'standard' => q#Уругвай кышкы убактысы#,
			},
		},
		'Uzbekistan' => {
			long => {
				'daylight' => q#Өзбекстан жайкы убактысы#,
				'generic' => q#Өзбекстан убактысы#,
				'standard' => q#Өзбекстан кышкы убакыты#,
			},
		},
		'Vanuatu' => {
			long => {
				'daylight' => q#Вануату жайкы убактысы#,
				'generic' => q#Вануату убактысы#,
				'standard' => q#Вануату кышкы убакыты#,
			},
		},
		'Venezuela' => {
			long => {
				'standard' => q#Венесуэла убактысы#,
			},
		},
		'Vladivostok' => {
			long => {
				'daylight' => q#Владивосток жайкы убактысы#,
				'generic' => q#Владивосток убактысы#,
				'standard' => q#Владивосток кышкы убакыты#,
			},
		},
		'Volgograd' => {
			long => {
				'daylight' => q#Волгоград жайкы убактысы#,
				'generic' => q#Волгоград убактысы#,
				'standard' => q#Волгоград кышкы убакыты#,
			},
		},
		'Vostok' => {
			long => {
				'standard' => q#Восток убактысы#,
			},
		},
		'Wake' => {
			long => {
				'standard' => q#Уейк аралдарынын убактысы#,
			},
		},
		'Wallis' => {
			long => {
				'standard' => q#Уолис жана Футуна убактысы#,
			},
		},
		'Yakutsk' => {
			long => {
				'daylight' => q#Якутск жайкы убактысы#,
				'generic' => q#Якутск убактысы#,
				'standard' => q#Якутск кышкы убакыты#,
			},
		},
		'Yekaterinburg' => {
			long => {
				'daylight' => q#Екатеринбург жайкы убактысы#,
				'generic' => q#Екатеринбург убактысы#,
				'standard' => q#Екатеринбург кышкы убакыты#,
			},
		},
		'Yukon' => {
			long => {
				'standard' => q#Юкон убактысы#,
			},
		},
	 } }
);
no Moo;

1;

# vim: tabstop=4
