NAME
    Locale::ID::Province - List of provinces in Indonesia

VERSION
    This document describes version 0.112 of Locale::ID::Province (from Perl
    distribution Locale-ID-Province), released on 2024-09-26.

SYNOPSIS
     use Locale::ID::Province qw(list_idn_provinces);
     my $res = list_idn_provinces();

DESCRIPTION
FUNCTIONS
  list_idn_provinces
    Usage:

     list_idn_provinces(%args) -> [$status_code, $reason, $payload, \%result_meta]

    Provinces in Indonesia.

    REPLACE ME

    This function is not exported by default, but exportable.

    Arguments ('*' denotes required arguments):

    *   bps_code => *int*

        Only return records where the 'bps_code' field equals specified
        value.

    *   bps_code.in => *array[int]*

        Only return records where the 'bps_code' field is in the specified
        values.

    *   bps_code.is => *int*

        Only return records where the 'bps_code' field equals specified
        value.

    *   bps_code.isnt => *int*

        Only return records where the 'bps_code' field does not equal
        specified value.

    *   bps_code.max => *int*

        Only return records where the 'bps_code' field is less than or equal
        to specified value.

    *   bps_code.min => *int*

        Only return records where the 'bps_code' field is greater than or
        equal to specified value.

    *   bps_code.not_in => *array[int]*

        Only return records where the 'bps_code' field is not in the
        specified values.

    *   bps_code.xmax => *int*

        Only return records where the 'bps_code' field is less than
        specified value.

    *   bps_code.xmin => *int*

        Only return records where the 'bps_code' field is greater than
        specified value.

    *   detail => *bool* (default: 0)

        Return array of full records instead of just ID fields.

        By default, only the key (ID) field is returned per result entry.

    *   eng_name => *str*

        Only return records where the 'eng_name' field equals specified
        value.

    *   eng_name.contains => *str*

        Only return records where the 'eng_name' field contains specified
        text.

    *   eng_name.in => *array[str]*

        Only return records where the 'eng_name' field is in the specified
        values.

    *   eng_name.is => *str*

        Only return records where the 'eng_name' field equals specified
        value.

    *   eng_name.isnt => *str*

        Only return records where the 'eng_name' field does not equal
        specified value.

    *   eng_name.max => *str*

        Only return records where the 'eng_name' field is less than or equal
        to specified value.

    *   eng_name.min => *str*

        Only return records where the 'eng_name' field is greater than or
        equal to specified value.

    *   eng_name.not_contains => *str*

        Only return records where the 'eng_name' field does not contain
        specified text.

    *   eng_name.not_in => *array[str]*

        Only return records where the 'eng_name' field is not in the
        specified values.

    *   eng_name.xmax => *str*

        Only return records where the 'eng_name' field is less than
        specified value.

    *   eng_name.xmin => *str*

        Only return records where the 'eng_name' field is greater than
        specified value.

    *   exclude_fields => *array[str]*

        Select fields to return.

    *   fields => *array[str]*

        Select fields to return.

    *   ind_abbrev => *str*

        Only return records where the 'ind_abbrev' field equals specified
        value.

    *   ind_abbrev.contains => *str*

        Only return records where the 'ind_abbrev' field contains specified
        text.

    *   ind_abbrev.in => *array[str]*

        Only return records where the 'ind_abbrev' field is in the specified
        values.

    *   ind_abbrev.is => *str*

        Only return records where the 'ind_abbrev' field equals specified
        value.

    *   ind_abbrev.isnt => *str*

        Only return records where the 'ind_abbrev' field does not equal
        specified value.

    *   ind_abbrev.max => *str*

        Only return records where the 'ind_abbrev' field is less than or
        equal to specified value.

    *   ind_abbrev.min => *str*

        Only return records where the 'ind_abbrev' field is greater than or
        equal to specified value.

    *   ind_abbrev.not_contains => *str*

        Only return records where the 'ind_abbrev' field does not contain
        specified text.

    *   ind_abbrev.not_in => *array[str]*

        Only return records where the 'ind_abbrev' field is not in the
        specified values.

    *   ind_abbrev.xmax => *str*

        Only return records where the 'ind_abbrev' field is less than
        specified value.

    *   ind_abbrev.xmin => *str*

        Only return records where the 'ind_abbrev' field is greater than
        specified value.

    *   ind_capital_name => *str*

        Only return records where the 'ind_capital_name' field equals
        specified value.

    *   ind_capital_name.contains => *str*

        Only return records where the 'ind_capital_name' field contains
        specified text.

    *   ind_capital_name.in => *array[str]*

        Only return records where the 'ind_capital_name' field is in the
        specified values.

    *   ind_capital_name.is => *str*

        Only return records where the 'ind_capital_name' field equals
        specified value.

    *   ind_capital_name.isnt => *str*

        Only return records where the 'ind_capital_name' field does not
        equal specified value.

    *   ind_capital_name.max => *str*

        Only return records where the 'ind_capital_name' field is less than
        or equal to specified value.

    *   ind_capital_name.min => *str*

        Only return records where the 'ind_capital_name' field is greater
        than or equal to specified value.

    *   ind_capital_name.not_contains => *str*

        Only return records where the 'ind_capital_name' field does not
        contain specified text.

    *   ind_capital_name.not_in => *array[str]*

        Only return records where the 'ind_capital_name' field is not in the
        specified values.

    *   ind_capital_name.xmax => *str*

        Only return records where the 'ind_capital_name' field is less than
        specified value.

    *   ind_capital_name.xmin => *str*

        Only return records where the 'ind_capital_name' field is greater
        than specified value.

    *   ind_island_name => *str*

        Only return records where the 'ind_island_name' field equals
        specified value.

    *   ind_island_name.contains => *str*

        Only return records where the 'ind_island_name' field contains
        specified text.

    *   ind_island_name.in => *array[str]*

        Only return records where the 'ind_island_name' field is in the
        specified values.

    *   ind_island_name.is => *str*

        Only return records where the 'ind_island_name' field equals
        specified value.

    *   ind_island_name.isnt => *str*

        Only return records where the 'ind_island_name' field does not equal
        specified value.

    *   ind_island_name.max => *str*

        Only return records where the 'ind_island_name' field is less than
        or equal to specified value.

    *   ind_island_name.min => *str*

        Only return records where the 'ind_island_name' field is greater
        than or equal to specified value.

    *   ind_island_name.not_contains => *str*

        Only return records where the 'ind_island_name' field does not
        contain specified text.

    *   ind_island_name.not_in => *array[str]*

        Only return records where the 'ind_island_name' field is not in the
        specified values.

    *   ind_island_name.xmax => *str*

        Only return records where the 'ind_island_name' field is less than
        specified value.

    *   ind_island_name.xmin => *str*

        Only return records where the 'ind_island_name' field is greater
        than specified value.

    *   ind_name => *str*

        Only return records where the 'ind_name' field equals specified
        value.

    *   ind_name.contains => *str*

        Only return records where the 'ind_name' field contains specified
        text.

    *   ind_name.in => *array[str]*

        Only return records where the 'ind_name' field is in the specified
        values.

    *   ind_name.is => *str*

        Only return records where the 'ind_name' field equals specified
        value.

    *   ind_name.isnt => *str*

        Only return records where the 'ind_name' field does not equal
        specified value.

    *   ind_name.max => *str*

        Only return records where the 'ind_name' field is less than or equal
        to specified value.

    *   ind_name.min => *str*

        Only return records where the 'ind_name' field is greater than or
        equal to specified value.

    *   ind_name.not_contains => *str*

        Only return records where the 'ind_name' field does not contain
        specified text.

    *   ind_name.not_in => *array[str]*

        Only return records where the 'ind_name' field is not in the
        specified values.

    *   ind_name.xmax => *str*

        Only return records where the 'ind_name' field is less than
        specified value.

    *   ind_name.xmin => *str*

        Only return records where the 'ind_name' field is greater than
        specified value.

    *   iso3166_2_code => *str*

        Only return records where the 'iso3166_2_code' field equals
        specified value.

    *   iso3166_2_code.contains => *str*

        Only return records where the 'iso3166_2_code' field contains
        specified text.

    *   iso3166_2_code.in => *array[str]*

        Only return records where the 'iso3166_2_code' field is in the
        specified values.

    *   iso3166_2_code.is => *str*

        Only return records where the 'iso3166_2_code' field equals
        specified value.

    *   iso3166_2_code.isnt => *str*

        Only return records where the 'iso3166_2_code' field does not equal
        specified value.

    *   iso3166_2_code.max => *str*

        Only return records where the 'iso3166_2_code' field is less than or
        equal to specified value.

    *   iso3166_2_code.min => *str*

        Only return records where the 'iso3166_2_code' field is greater than
        or equal to specified value.

    *   iso3166_2_code.not_contains => *str*

        Only return records where the 'iso3166_2_code' field does not
        contain specified text.

    *   iso3166_2_code.not_in => *array[str]*

        Only return records where the 'iso3166_2_code' field is not in the
        specified values.

    *   iso3166_2_code.xmax => *str*

        Only return records where the 'iso3166_2_code' field is less than
        specified value.

    *   iso3166_2_code.xmin => *str*

        Only return records where the 'iso3166_2_code' field is greater than
        specified value.

    *   queries => *array[str]*

        Search.

        This will search all searchable fields with one or more specified
        queries. Each query can be in the form of "-FOO" (dash prefix
        notation) to require that the fields do not contain specified
        string, or "/FOO/" to use regular expression. All queries must match
        if the "query_boolean" option is set to "and"; only one query should
        match if the "query_boolean" option is set to "or".

    *   query_boolean => *str* (default: "and")

        Whether records must match all search queries ('and') or just one
        ('or').

        If set to "and", all queries must match; if set to "or", only one
        query should match. See the "queries" option for more details on
        searching.

    *   random => *bool* (default: 0)

        Return records in random order.

    *   result_limit => *int*

        Only return a certain number of records.

    *   result_start => *int* (default: 1)

        Only return starting from the n'th record.

    *   sort => *array[str]*

        Order records according to certain field(s).

        A list of field names separated by comma. Each field can be prefixed
        with '-' to specify descending order instead of the default
        ascending.

    *   tags => *str*

        Only return records where the 'tags' field equals specified value.

    *   tags.contains => *str*

        Only return records where the 'tags' field contains specified text.

    *   tags.in => *array[str]*

        Only return records where the 'tags' field is in the specified
        values.

    *   tags.is => *str*

        Only return records where the 'tags' field equals specified value.

    *   tags.isnt => *str*

        Only return records where the 'tags' field does not equal specified
        value.

    *   tags.max => *str*

        Only return records where the 'tags' field is less than or equal to
        specified value.

    *   tags.min => *str*

        Only return records where the 'tags' field is greater than or equal
        to specified value.

    *   tags.not_contains => *str*

        Only return records where the 'tags' field does not contain
        specified text.

    *   tags.not_in => *array[str]*

        Only return records where the 'tags' field is not in the specified
        values.

    *   tags.xmax => *str*

        Only return records where the 'tags' field is less than specified
        value.

    *   tags.xmin => *str*

        Only return records where the 'tags' field is greater than specified
        value.

    *   with_field_names => *bool*

        Return field names in each record (as hash/associative array).

        When enabled, function will return each record as hash/associative
        array (field name => value pairs). Otherwise, function will return
        each record as list/array (field value, field value, ...).

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/Locale-ID-Province>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-Locale-ID-Province>.

SEE ALSO
    list-idn-provinces (from App::IndonesianLocaleUtils)

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTOR
    Steven Haryanto <stevenharyanto@gmail.com>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR,
    Pod::Weaver::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla- and/or Pod::Weaver plugins. Any additional steps
    required beyond that are considered a bug and can be reported to me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2024, 2017, 2015, 2014, 2012 by perlancar
    <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=Locale-ID-Province>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

