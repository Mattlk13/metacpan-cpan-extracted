=pod

=for vim
   vim: tw=72 ts=3 sts=3 sw=3 et ai :

=encoding utf8

=head1 NAME

Log::Any::Adapter::Log4perlTiny - Log::Any adapter for Log::Log4perl::Tiny


=head1 VERSION

This document describes Log::Any::Adapter::Log4perlTiny version 0.001.

=begin html

<a href="https://travis-ci.org/polettix/Log-Any-Adapter-Log4perlTiny">
<img alt="Build Status" src="https://travis-ci.org/polettix/Log-Any-Adapter-Log4perlTiny.svg?branch=master">
</a>
<a href="https://www.perl.org/">
<img alt="Perl Version" src="https://img.shields.io/badge/perl-5.24+-brightgreen.svg">
</a>
<a href="https://badge.fury.io/pl/Log-Any-Adapter-Log4perlTiny">
<img alt="Current CPAN version" src="https://badge.fury.io/pl/Log-Any-Adapter-Log4perlTiny.svg">
</a>
<a href="http://cpants.cpanauthors.org/dist/Log-Any-Adapter-Log4perlTiny">
<img alt="Kwalitee" src="http://cpants.cpanauthors.org/dist/Log-Any-Adapter-Log4perlTiny.png">
</a>
<a href="http://www.cpantesters.org/distro/O/Log-Any-Adapter-Log4perlTiny.html?distmat=1">
<img alt="CPAN Testers" src="https://img.shields.io/badge/cpan-testers-blue.svg">
</a>
<a href="http://matrix.cpantesters.org/?dist=Log-Any-Adapter-Log4perlTiny">
<img alt="CPAN Testers Matrix" src="https://img.shields.io/badge/matrix-@testers-blue.svg">
</a>

=end html

=head1 SYNOPSIS

   use Log::Log4perl::Tiny qw< LOGLEVEL >;
   use Log::Any::Adapter 'Log4perlTiny';

   LOGLEVEL('DEBUG');


=head1 DESCRIPTION

This L<Log::Any> adapter uses L<Log::Log4perl::Tiny> under the hood. It
does not need to be initialized as it comes with some sensible defaults;
users might anyway be interested into setting a different log level
dinamically, so importing C<LOGLEVEL> might be beneficial.

=head1 INTERFACE

Methods for checking the activity of levels are generated dynamically;
as of the generation of this module, they are:

=over

=item B<< is_alert >>

=item B<< is_critical >>

=item B<< is_debug >>

=item B<< is_emergency >>

=item B<< is_error >>

=item B<< is_info >>

=item B<< is_notice >>

=item B<< is_trace >>

=item B<< is_warning >>

=back

In addition, the method in the following sub-section is available.

=head2 B<< structured >>

   $object->structured($level, $category, @stuff);

The provided C<$level> is mapped onto one of the available ones; unknown
levels are mapped onto C<FATAL> (this might be the case if L<Log::Any>
introduces any new levels in the future).

The C<$category> is ignored, as there is a single instance.

The C<@stuff> is passed onto to L<Log::Log4perl::Tiny>.

=head1 BUGS AND LIMITATIONS

Report bugs through Codeberg (patches welcome) at
L<https://codeberg.org/polettix/Log-Any-Adapter-Log4perlTiny>.

=head1 SEE ALSO

L<Log::Any>, L<Log::Any::Adapter> and L<Log::Log4perl::Tiny>.

=head1 AUTHOR

Flavio Poletti <flavio@polettix.it>

=head1 COPYRIGHT AND LICENSE

Copyright 2023 by Flavio Poletti <flavio@polettix.it>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


=cut
