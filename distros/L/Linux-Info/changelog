liblinux-info-perl (2.17) trusty; urgency=low
  * Added support to ARM and AMD processors (#25)
  * refactor: reused compiled regex
  * refactor: better message
  * doc: better format
  * refactor: testing multiple samples
  * fix: additional new line
  * chore: version bump
  * fix: simulated error
  * chore: new classes skeleton
  * chore: added required info
  * refactor: better naming
  * chore: finished implementation (untested)
  * refactor: not needed
  * chore: incomplete
  * feat: vendor information
  * feat: ARM support
  * feat: Intel support
  * feat: more attributes for Intel
  * fix: Intel bugs
  * refactor: parsing lists
  - Bugs are specific to Intel CPU - sorting flags in order to have
    consistent results
  * refactor: interface changes to support CPU class
  * feat: S390 support
  * doc: added missing Pod
  * fix: capturing GHA cpuinfo
  * chore: standard naming
  * feat: AMD support 

 -- Alceu Rodrigues de Freitas Junior <glasswalk3r@yahoo.com.br>  Sun, 16 Jun 2024 23:11:17 +0000

liblinux-info-perl () trusty; urgency=low
  * feat: AMD support 
  * chore: standard naming 
  * fix: capturing GHA cpuinfo 
  * doc: added missing Pod 
  * feat: S390 support 
  * refactor: interface changes to support CPU class 
  * refactor: parsing lists
  - Bugs are specific to Intel CPU - sorting flags in order to have
    consistent results 
  * fix: Intel bugs 
  * feat: more attributes for Intel 
  * feat: Intel support 
  * feat: ARM support 
  * feat: vendor information 
  * chore: incomplete 
  * refactor: not needed 
  * chore: finished implementation (untested) 
  * refactor: better naming 
  * chore: added required info 
  * chore: new classes skeleton 
  * fix: simulated error 
  * chore: version bump 
  * fix: additional new line 
  * refactor: testing multiple samples 
  * doc: better format 
  * refactor: better message 
  * refactor: reused compiled regex 
  * Bugfix/distro factory (#24)
  * chore: version bump
  * feat: Finder handles os-release anywhere
  * refactor: organizing samples
  * fix: bugs with Raspbian and CloudLinux
  * fix: wrong use of length
  * doc: required update
  * fix: GHA test requirement
  * doc: typo
  * fix: GHA testing requirements
  * chore: deprecated 

 -- Alceu Rodrigues de Freitas Junior <glasswalk3r@yahoo.com.br>  Sun, 16 Jun 2024 23:02:14 +0000

liblinux-info-perl () trusty; urgency=low
  * chore: deprecated 
  * fix: GHA testing requirements 
  * doc: typo 
  * fix: GHA test requirement 
  * doc: required update 
  * fix: wrong use of length 
  * fix: bugs with Raspbian and CloudLinux 
  * refactor: organizing samples 
  * feat: Finder handles os-release anywhere 
  * chore: version bump 
  * Bugfix/os release (#23)
  * fix: missing newer subclasses
  * refactor: idiomatic Perl
  * fix: deprecated test
  * fix: OSRelease might fail
  OSRelease won't work as expected in distributions with missing
    attributes, so it is a bad idea to try to instantiate a new class
    using the default file location.
  * fix: deprecated accepting a OSRelease
  Changed the logic to avoid the same issues with subclasses of
    OSRelease which contain a customized format of /etc/os-release.
  * chore: version bump 

 -- Alceu Rodrigues de Freitas Junior <glasswalk3r@yahoo.com.br>  Fri, 31 May 2024 00:48:33 +0000

liblinux-info-perl () trusty; urgency=low
  * chore: version bump 
  * fix: deprecated accepting a OSRelease
  Changed the logic to avoid the same issues with subclasses of
    OSRelease which contain a customized format of /etc/os-release. 
  * fix: OSRelease might fail
  OSRelease won't work as expected in distributions with missing
    attributes, so it is a bad idea to try to instantiate a new class
    using the default file location. 
  * fix: deprecated test 
  * refactor: idiomatic Perl 
  * fix: missing newer subclasses 
  * Feature/rt 86737 limits (#22)
  * feat: applied the patch as is
  Also included minor changes, as refactorings and Pod improvements.
  * refactor: unnecessary numbering
  * refactor: more readable
  * refactor: small improvements
  * feat: testing limits implementation
  * refactor: useless _init method
  * feat: explicity enabling data fetching
  * feat: explicity enabling data fetching
  * refactor: better performance
  * refactor: oneliner
  * chore: version bump 
  * Revert "Feature/rt 86737 limits (#20)" (#21)
  This reverts commit efa103181b8023a5aa836ad4d8c38e6ce2b9c4d0. 
  * Feature/rt 86737 limits (#20)
  * feat: applied the patch as is
  Also included minor changes, as refactorings and Pod improvements.
  * refactor: unnecessary numbering
  * refactor: more readable
  * refactor: small improvements
  * feat: testing limits implementation
  * refactor: useless _init method
  * feat: explicity enabling data fetching
  * feat: explicity enabling data fetching
  * refactor: better performance
  * refactor: oneliner 

 -- Alceu Rodrigues de Freitas Junior <glasswalk3r@yahoo.com.br>  Wed, 29 May 2024 01:06:00 +0000

liblinux-info-perl () trusty; urgency=low
  * chore: version bump 
  * refactor: oneliner 
  * refactor: better performance 
  * feat: explicity enabling data fetching 
  * feat: explicity enabling data fetching 
  * refactor: useless _init method 
  * feat: testing limits implementation 
  * refactor: small improvements 
  * refactor: more readable 
  * refactor: unnecessary numbering 
  * Merge branch 'master' into feature/rt-86737-limits 
  * chore: bump version (#19) 
  * Merge branch 'master' into feature/rt-86737-limits 
  * feat: applied the patch as is
  Also included minor changes, as refactorings and Pod improvements. 

 -- Alceu Rodrigues de Freitas Junior <glasswalk3r@yahoo.com.br>  Tue, 28 May 2024 23:07:52 +0000

liblinux-info-perl () trusty; urgency=low
  * add support to Raspbian (Debian GNU Linux on Raspberry) (#18)
  * fix: typo
  * refactor: subclasses fixes missing fields
  * chore: cleanup
  * feat: making OSRelease more robust
  The class now delegates to subclasses to "fix" missing fields instead
    of doing itself.
  * feat: Raspbian support
  * fix: type cannot be required
  * fix: missing
  * fix: properly validating version_signature
  Properly testing if version_signature is indeed available insteaf of
    just adding it.
  * fix: missing data 

 -- Alceu Rodrigues de Freitas Junior <glasswalk3r@yahoo.com.br>  Mon, 27 May 2024 07:00:56 +0000

liblinux-info-perl () trusty; urgency=low
  * Bugfix/sysinfo scalar (#17)
  * fix: wrong definition of parameters
  When the distribution based on /etc/os-release wasn't the ones that
    are supported were wrongly waiting for a hash as parameter.
  In other cases, a file path was expected.
  Linux::Info::Distribution::BasicInfo class was introduced to fix
    that.
  * fix: typo
  Thanks to https://github.com/michal-josef-spacek for spotting the
    typo!
  * fix: wrong abstract format
  * chore: version bump
  * chore: new test requirements 
  * fix: configure GitHub Actions to ignore tags (#13)
  At each tag creation and pushed after branches merging, the GHA is
    being executed again, without any need. 

 -- Alceu Rodrigues de Freitas Junior <glasswalk3r@yahoo.com.br>  Fri, 24 May 2024 01:10:24 +0000

liblinux-info-perl () trusty; urgency=low
  * Feature/improved kernel release (#12)
  * refactor: keep filename pattern
  * refactor: replaced Class::Accessor with Class::XSAccessor
  * refactor: check multithread support
  * feat: more kernel info
  * feat: RedHat parser
  * fix: Class::XSAccessor is faster
  * refactor: no need of test ordering
  * fix: new KernelRelease interface
  * feat: distribution handling
  * feat: distribution handling
  * fix: requires perl 5.12 due readdir
  * fix: missing version declaration
  * fix: conditional definition of sources
  * feat: Factory completed
  * fix: Test::Most version
  * fix: missing validations
  * fix: added missing validations
  * feat: OSRelease subclasses
  The cache is required to avoid parsing the file again in the
    subclasses initialization.
  * fix: Distribution validation broke other classes
  - classes were missing the "name" key - classes were using
    "distro_id" instead of the expected "id"
  * feat: has_custom method
  Finder should has a method invoked instead checking data structure
    returned by it's method to now if the release information is from
    /etc/os-release or any other custom file.
  * fix: cannot fetch source from class
  * doc: added missing Pod
  * refactor: common attributes
  * feat: new os-release classes
  * refactor: better encapsulation
  * fix: confusing parse options
  * fix: missing new attributes
  * fix: Debian issues
  * fix: missing VERSION
  * refactor: PodWeaver to reduce boilterplate Pod
  * doc: references to Linux::Distribution
  * doc: missing info
  * refactor: less code
  * feat: Amazon Linux
  * refactor: need to test os-release based distros
  * feat: Amazon and RedHat support
  * feat: CloudLinux support
  * chore: cleanup
  * feat: CentOS Stream support
  * fix: skip empty lines
  * feat: CentOS support
  * feat: Alpine Linux support
  * fix: missing Pod
  * chore: added TODO
  * fix: previous merge
  * refactor: standard package naming
  Also removed deprecated the method because that will be taken care by
    a factory.
  * chore: version upgrade
  * refactor: package naming standard
  * refactor: new classes names
  * refactor: packing name standard
  * refactor: new name
  * chore: deprecated
  * fix: due new classes introduced
  * refactor: due new classes introduced
  * fix: due interface changes
  * fix: allow unknown properties
  * feat: KernelSource introduction
  Introduced to decouple KernelRelease instances from the actual file
    they retrieve their information.
  * fix: wrong content
  * fix: wrong content
  * fix: wrong path on /proc
  * fix: wrong validation
  * refactor: unnecessary data
  * feat: RedHat kernel info
  * refactor: more flexible version parsing
  * fix: missing patch
  * refactor: not needed
  * feat: Rocky Linux kernel
  * fix: wrong logic to handle info source
  * fix: missing Pod
  * refactor: code reuse
  * fix: missing implemented classes
  * fix: cache abusing
  * fix: missing arguments
  * fix: missing test requirements
  * refactor: better feedback
  * doc: required
  * refactor: forcing integers
  * feat: Alpine Linux support to kernel parsing 

 -- Alceu Rodrigues de Freitas Junior <glasswalk3r@yahoo.com.br>  Wed, 22 May 2024 14:50:20 +0000

liblinux-info-perl () trusty; urgency=low
  * Bugfix/non ubuntu failure (#11)
  * fix: useless verification
  * fix: missing distro
  * Attempt o enable multiple Linux distros
  * refactor: shorter name 

 -- Alceu Rodrigues de Freitas Junior <glasswalk3r@yahoo.com.br>  Fri, 17 May 2024 15:47:56 +0000

liblinux-info-perl () trusty; urgency=low
  * fix: typo (#9) 
  * Bugfix/diskstatus format (#8)
  * feat: GitHub Actions config
  * doc: tests status badge
  * chore: updating contact email
  * chore: add docs about format
  * chore: Perltidy error files
  * feat: getter for total fields read
  * refactor: extended unit tests
  * feat: fields validation
  * feat: fetches mainline kernel version
  This should be available on Ubuntu like distros.
  * feat: kernel release module
  * fix: cannot use Dist::Zilla
  * fix: YAML syntax
  * fix: missing requirements
  * fix: missing requirements
  * fix: parsing newer format of diskstats
  * feat: incomplete testing of new fields
  * fix: added missing Pod
  Also toke the change to review the Pod structure to leave
    documentation right before the methods code.
  * chore: bumped version requirements
  * chore: required
  * chore: upgrading dependencies
  * doc: added Pod
  * doc: required Pod
  * feat: sample output
  * fix: forcing version
  * fix: forcing sudo
  * fix: forcing sudo
  * chore: requirement upgrade
  * refactor: best practices
  * refactor: only what is required
  * feat: SSD statistics parsing
  * refactor: better names
  * refactor: define parsing method during new()
  * feat: class to manage diskstats options
  * feat: finished Options
  * fix: missing optional config
  * chore: updated due Options
  * fix: missing block sizes values
  * chore: replaced hash with Options
  * chore: cleanup
  * feat: _parse_disk_stats method
  Also refactored shifting fields for code reuse.
  * refactor: _shift_fields can be a sub
  * refactor: _backwards_fields to reduce code
  * feat: _parse_partitions method
  * feat: tests for non-legacy fields
  * refactor: cleanup
  * chore: preparing release 

 -- Alceu Rodrigues de Freitas Junior <glasswalk3r@yahoo.com.br>  Tue,  7 May 2024 19:08:44 +0000

