NAME
    Net::API::Telegram - Telegram Bot Interface

SYNOPSIS
            my $t = Net::API::Telegram->new(
                    debug => $DEBUG,
                    webhook => 1,
                    ## This would contain a token property with the Telegram api token
                    config_file => "./settings.json",
                    ## Since we are testing, we want to process even old messages
                    skip_past_messages => -86400,
                    # use_ssl => 1,
                    # ssl_cert => $ssl_certificate,
                    # ssl_key => $ssl_key,
                    external_ssl  => 1,
                    external_path => 'tg',
                    external_host => 'www.example.com',
                    external_port => 443,
                    logging => 1,
                    log_file => $log_file,
                    debug_log_file => $debug_log_file,
                    error_handler => \&handleError,
            ) || die( Net::API::Telegram->error->message, "\n" );
        
            ## Declare some handlers
            $t->handler(
                    message => \&processMessage,
            );
            $t->start || die( "Error starting: ", $t->error->message, "\n" );

VERSION
    This is version v0.600.1

DESCRIPTION
    Net::API::Telegram is a powerful and yet simple interface to Telegram
    Bot api.

    Net::API::Telegram inherits from Module::Generic and all its module
    excepted for Net::API::Telegram::Generic and Net::API::Telegram::Number
    are auto generated based on Telegram api online documentation.

CORE METHODS
    new( [ TOKEN ], %PARAMETERS )
        This initiate a Net::API::Telegram object as an accessor to all the
        core methods and api methods.

        It can take the following parameters:

        *browser*
                This is the name of the browser our http agent will take as
                identity when communicating with the Telegram api.

                BY default, it looks like "DEGUEST_Bot/0.1"

        *conf_file*
                This is an optional configuration file in json format that
                contains properties. For example, it can contain the
                property *token* to avoid passing it as argument.

        *cookie_file*
                This takes a cookie file path. By default it is empty. The
                Telegram api does not send cookie, so it should not be
                needed.

        *debug* Defaults to 0 (false). Can be set to any digit. The higher,
                the more debug output.

        *encode_with_json*
                Can be true or false. Defaults to false.

                If true, Net::API::Telegram will encode data in json format
                and send it to the server rather than using the url-encoded
                format.

        *host*  This is the host to set up the webhook. It will be provided
                as part of the uri our HTTP::Daemon server listens to. The
                path is randomly generated to ensure some level of security.

        *port*  This is the host to set up the webhook.

        *ssl_cert*
                Pass to the ssl certificate. This is used to run the ssl
                http server and to be sent to Telegram.

                This parameter is necessary only under ssl with the
                *use_ssl*.

                If the server is run on a host with certificate signed by a
                proper authority like Let's Encrypt, the certificate does
                not need to be sent to Telegram.

                To create a ssl key and certificate, you can use the
                following command:

                        openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes -subj "/C=JP/ST=Tokyo/L=Tokyo/O=Deguest Pte. Ltd./OU=Org/CN=www.example.jp"

                Ref:
                <https://stackoverflow.com/questions/10175812/how-to-create-
                a-self-signed-certificate-with-openssl>

        *ssl_key*
                Path to the ssl key. This is used to run the ssl http
                server.

                This parameter is necessary only under ssl with the
                *use_ssl*.

        *timeout*
                The timeout in second when making http requests. It defaults
                to 5 seconds.

        *token* This is a required item. It can be provided either the first
                parameter of the new() method or as a hash parameter.
                Example:

                        my $t = Net::API::Telegram->new( '123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11', debug => 3, webhook => 1 );
        
                        ## or
        
                        my $t = Net::API::Telegram->new( 'token' => '123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11', debug => 3, webhook => 1 );

        *use_ssl*
                Can be true or false. If true, the server launched to handle
                the webhook will run under ssl. Please note that Telegram
                only accepts webhooks that run under ssl.

        *verbose*
                Defaults to 0 (false).

        *webhook*
                Either true or false. If true, this will initiate the web
                token and automatically declare it to the Telegram server.
                It defaults to false.

    agent()
        It returns a LWP::UserAgent object which is used to make http calls
        to Telegram api.

    api_uri()
        This returns the uri of the api for our bot. It would be something
        like:
        <https://api.telegram.org/bot123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew
        11>

    data2json( JSON )
        Given a json data this returns an equivalent structure in perl, so a
        hash reference.

    debug( TRUE | FALSE )
        Set or get the debug value, which is an integer. 0 deactivate debug
        mode and a number greater than 0 activates it. The greater the
        number, the more debug output.

    error( ERROR )
        Sets or get an error. When making calls to methods under this
        package and package children, if the return value is undef(), then
        it means an error has been set and can be retrieved with "$t-"error>

        The error retrieved is a Net::API::Telegram::Error object that has
        the following properties:

        *type*  This is the type of error, if any. It could be empty.

        *code*  This is the error code using the http standard.

        *message*
                This is the error message.

        *file*  The file from which the error came from.

        *line*  The line at which the error was triggered.

        *package*
                The perl module name from which the error occurred.

        *sub*   The subroutine that triggered the error.

        *trace* This is a Devel::StackTrace which can be stringified. This
                provides the full stack trace of the error.

        *retry_after*
                This is optional, and represents the number of seconds to
                wait until the next attempt. This is provided as a response
                by the Telegram api.

    generate_uuid()
        This will generate a new uuid using Data::UUID.

    launch_daemon()
        This will prepare a new http daemon to listen for the webhook

    port( INTEGER )
        This sets the port that will be used by HTTP::Daemon to listen for
        webhooks.

        The only acceptable ports, as per Telegram Bot API documentation,
        are: 443, 80, 88, 8443.

        It returns the current value set, if any.

        Ref: <https://core.telegram.org/bots/api#setwebhook>

    query( { PARAMETERS } )
        This takes an hash reference as parameters, and issues a http post
        request to Telegram api. If successful, it returns a hash reference
        of the data returned by Telegram api, otherwise it returns undef()
        upon an error.

    start()
        This will start processing requests received by the bot.

        If the *webhook* option was set, this will start the http daemon, as
        prepared with the launch_daemon() method.

        Otherwise, this will probe indefinitely, in a loop, the Telegram
        server using the api method getUpdates()

        It will receive json data from Telegram in the form of a
        Net::API::Telegram::Update object.

        Ref: <https://core.telegram.org/bots/api#update>

    verbose( [ TRUE | FALSE ] )
        This sets or get the value of verbose.

    webhook( [ TRUE | FALSE ] )
        This sets the boolean flag for the option *webhook*. If set to true,
        this will call the launch_daemon() method. It will also create a
        randomly generated path which can be retrieved using the
        webhook_path method.

    webhook_path()
        Returns the webhook path randomly generated. If webhook has not been
        activated this will return an empty string.

API METHODS
    answerCallbackQuery( %PARAMETERS )
        Use this method to send answers to callback queries sent from inline
        keyboards. The answer will be displayed to the user as a
        notification at the top of the chat screen or as an alert. On
        success, True is returned.

        Reference: <https://core.telegram.org/bots/api#answercallbackquery>

        This methods takes the following parameters:

        *cache_time*
                This parameter type is Integer and is optional.

                The maximum amount of time in seconds that the result of the
                callback query may be cached client-side. Telegram apps will
                support caching starting in version 3.14. Defaults to 0.

        *callback_query_id*
                This parameter type is String and is required.

                Unique identifier for the query to be answered

        *show_alert*
                This parameter type is Boolean and is optional.

                If true, an alert will be shown by the client instead of a
                notification at the top of the chat screen. Defaults to
                false.

        *text*  This parameter type is String and is optional.

                Text of the notification. If not specified, nothing will be
                shown to the user, 0-200 characters

        *url*   This parameter type is String and is optional.

                URL that will be opened by the user's client. If you have
                created a Game and accepted the conditions via @Botfather,
                specify the URL that opens your game – note that this will
                only work if the query comes from a callback_game
                button.Otherwise, you may use links like
                t.me/your_bot?start=XXXX that open your bot with a
                parameter.

    answerInlineQuery( %PARAMETERS )
        Use this method to send answers to an inline query. On success, True
        is returned.No more than 50 results per query are allowed.

        Reference: <https://core.telegram.org/bots/api#answerinlinequery>

        This methods takes the following parameters:

        *cache_time*
                This parameter type is Integer and is optional.

                The maximum amount of time in seconds that the result of the
                inline query may be cached on the server. Defaults to 300.

        *inline_query_id*
                This parameter type is String and is required.

                Unique identifier for the answered query

        *is_personal*
                This parameter type is Boolean and is optional.

                Pass True, if results may be cached on the server side only
                for the user that sent the query. By default, results may be
                returned to any user who sends the same query

        *next_offset*
                This parameter type is String and is optional.

                Pass the offset that a client should send in the next query
                with the same text to receive more results. Pass an empty
                string if there are no more results or if you don‘t support
                pagination. Offset length can’t exceed 64 bytes.

        *results*
                This parameter type is an array of
                Net::API::Telegram::InlineQueryResult and is required. A
                JSON-serialized array of results for the inline query

        *switch_pm_parameter*
                This parameter type is String and is optional.

                Deep-linking parameter for the /start message sent to the
                bot when user presses the switch button. 1-64 characters,
                only A-Z, a-z, 0-9, _ and - are allowed.Example: An inline
                bot that sends YouTube videos can ask the user to connect
                the bot to their YouTube account to adapt search results
                accordingly. To do this, it displays a ‘Connect your YouTube
                account’ button above the results, or even before showing
                any. The user presses the button, switches to a private chat
                with the bot and, in doing so, passes a start parameter that
                instructs the bot to return an oauth link. Once done, the
                bot can offer a switch_inline button so that the user can
                easily return to the chat where they wanted to use the bot's
                inline capabilities.

        *switch_pm_text*
                This parameter type is String and is optional.

                If passed, clients will display a button with specified text
                that switches the user to a private chat with the bot and
                sends the bot a start message with the parameter
                switch_pm_parameter

    answerPreCheckoutQuery( %PARAMETERS )
        Once the user has confirmed their payment and shipping details, the
        Bot API sends the final confirmation in the form of an Update with
        the field pre_checkout_query. Use this method to respond to such
        pre-checkout queries. On success, True is returned. Note: The Bot
        API must receive an answer within 10 seconds after the pre-checkout
        query was sent.

        Reference:
        <https://core.telegram.org/bots/api#answerprecheckoutquery>

        This methods takes the following parameters:

        *error_message*
                This parameter type is String and is optional.

                Required if ok is False. Error message in human readable
                form that explains the reason for failure to proceed with
                the checkout (e.g. "Sorry, somebody just bought the last of
                our amazing black T-shirts while you were busy filling out
                your payment details. Please choose a different color or
                garment!"). Telegram will display this message to the user.

        *ok*    This parameter type is Boolean and is required.

                Specify True if everything is alright (goods are available,
                etc.) and the bot is ready to proceed with the order. Use
                False if there are any problems.

        *pre_checkout_query_id*
                This parameter type is String and is required.

                Unique identifier for the query to be answered

    answerShippingQuery( %PARAMETERS )
        If you sent an invoice requesting a shipping address and the
        parameter is_flexible was specified, the Bot API will send an Update
        with a shipping_query field to the bot. Use this method to reply to
        shipping queries. On success, True is returned.

        Reference: <https://core.telegram.org/bots/api#answershippingquery>

        This methods takes the following parameters:

        *error_message*
                This parameter type is String and is optional.

                Required if ok is False. Error message in human readable
                form that explains why it is impossible to complete the
                order (e.g. "Sorry, delivery to your desired address is
                unavailable'). Telegram will display this message to the
                user.

        *ok*    This parameter type is Boolean and is required.

                Specify True if delivery to the specified address is
                possible and False if there are any problems (for example,
                if delivery to the specified address is not possible)

        *shipping_options*
                This parameter type is an array of
                Net::API::Telegram::ShippingOption and is optional. Required
                if ok is True. A JSON-serialized array of available shipping
                options.

        *shipping_query_id*
                This parameter type is String and is required.

                Unique identifier for the query to be answered

    createNewStickerSet( %PARAMETERS )
        Use this method to create new sticker set owned by a user. The bot
        will be able to edit the created sticker set. Returns True on
        success.

        Reference: <https://core.telegram.org/bots/api#createnewstickerset>

        This methods takes the following parameters:

        *contains_masks*
                This parameter type is Boolean and is optional.

                Pass True, if a set of mask stickers should be created

        *emojis*
                This parameter type is String and is required.

                One or more emoji corresponding to the sticker

        *mask_position*
                This parameter type is an object
                Net::API::Telegram::MaskPosition and is optional. A
                JSON-serialized object for position where the mask should be
                placed on faces

        *name*  This parameter type is String and is required.

                Short name of sticker set, to be used in t.me/addstickers/
                URLs (e.g., animals). Can contain only english letters,
                digits and underscores. Must begin with a letter, can't
                contain consecutive underscores and must end in “_by_<bot
                username>”. <bot_username> is case insensitive. 1-64
                characters.

        *png_sticker*
                This parameter type is one of the following InputFile or
                String and is required. Png image with the sticker, must be
                up to 512 kilobytes in size, dimensions must not exceed
                512px, and either width or height must be exactly 512px.
                Pass a file_id as a String to send a file that already
                exists on the Telegram servers, pass an HTTP URL as a String
                for Telegram to get a file from the Internet, or upload a
                new one using multipart/form-data. More info on Sending
                Files »

        *title* This parameter type is String and is required.

                Sticker set title, 1-64 characters

        *user_id*
                This parameter type is Integer and is required.

                User identifier of created sticker set owner

    deleteChatPhoto( %PARAMETERS )
        Use this method to delete a chat photo. Photos can't be changed for
        private chats. The bot must be an administrator in the chat for this
        to work and must have the appropriate admin rights. Returns True on
        success.

        Reference: <https://core.telegram.org/bots/api#deletechatphoto>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

    deleteChatStickerSet( %PARAMETERS )
        Use this method to delete a group sticker set from a supergroup. The
        bot must be an administrator in the chat for this to work and must
        have the appropriate admin rights. Use the field can_set_sticker_set
        optionally returned in getChat requests to check if the bot can use
        this method. Returns True on success.

        Reference: <https://core.telegram.org/bots/api#deletechatstickerset>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target supergroup (in the format
                @supergroupusername)

    deleteMessage( %PARAMETERS )
        Use this method to delete a message, including service messages,
        with the following limitations:- A message can only be deleted if it
        was sent less than 48 hours ago.- Bots can delete outgoing messages
        in private chats, groups, and supergroups.- Bots can delete incoming
        messages in private chats.- Bots granted can_post_messages
        permissions can delete outgoing messages in channels.- If the bot is
        an administrator of a group, it can delete any message there.- If
        the bot has can_delete_messages permission in a supergroup or a
        channel, it can delete any message there.Returns True on success.

        Reference: <https://core.telegram.org/bots/api#deletemessage>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

        *message_id*
                This parameter type is Integer and is required.

                Identifier of the message to delete

    deleteStickerFromSet( %PARAMETERS )
        Use this method to delete a sticker from a set created by the bot.
        Returns True on success.

        Reference: <https://core.telegram.org/bots/api#deletestickerfromset>

        This methods takes the following parameters:

        *sticker*
                This parameter type is String and is required.

                File identifier of the sticker

    deleteWebhook()
        Use this method to remove webhook integration if you decide to
        switch back to getUpdates. Returns True on success. Requires no
        parameters.

        Reference: <https://core.telegram.org/bots/api#deletewebhook>

        This method does not take any parameter.

    editMessageCaption( %PARAMETERS )
        Use this method to edit captions of messages. On success, if edited
        message is sent by the bot, the edited Message is returned,
        otherwise True is returned.

        Reference: <https://core.telegram.org/bots/api#editmessagecaption>

        This methods takes the following parameters:

        *caption*
                This parameter type is String and is optional.

                New caption of the message

        *chat_id*
                This parameter type is one of the following Integer or
                String and is optional. Required if inline_message_id is not
                specified. Unique identifier for the target chat or username
                of the target channel (in the format @channelusername)

        *inline_message_id*
                This parameter type is String and is optional.

                Required if chat_id and message_id are not specified.
                Identifier of the inline message

        *message_id*
                This parameter type is Integer and is optional.

                Required if inline_message_id is not specified. Identifier
                of the message to edit

        *parse_mode*
                This parameter type is String and is optional.

                Send Markdown or HTML, if you want Telegram apps to show
                bold, italic, fixed-width text or inline URLs in the media
                caption.

        *reply_markup*
                This parameter type is an object
                Net::API::Telegram::InlineKeyboardMarkup and is optional. A
                JSON-serialized object for an inline keyboard.

    editMessageLiveLocation( %PARAMETERS )
        Use this method to edit live location messages. A location can be
        edited until its live_period expires or editing is explicitly
        disabled by a call to stopMessageLiveLocation. On success, if the
        edited message was sent by the bot, the edited Message is returned,
        otherwise True is returned.

        Reference:
        <https://core.telegram.org/bots/api#editmessagelivelocation>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is optional. Required if inline_message_id is not
                specified. Unique identifier for the target chat or username
                of the target channel (in the format @channelusername)

        *inline_message_id*
                This parameter type is String and is optional.

                Required if chat_id and message_id are not specified.
                Identifier of the inline message

        *latitude*
                This parameter type is Float number and is required.

                Latitude of new location

        *longitude*
                This parameter type is Float number and is required.

                Longitude of new location

        *message_id*
                This parameter type is Integer and is optional.

                Required if inline_message_id is not specified. Identifier
                of the message to edit

        *reply_markup*
                This parameter type is an object
                Net::API::Telegram::InlineKeyboardMarkup and is optional. A
                JSON-serialized object for a new inline keyboard.

    editMessageMedia( %PARAMETERS )
        Use this method to edit animation, audio, document, photo, or video
        messages. If a message is a part of a message album, then it can be
        edited only to a photo or a video. Otherwise, message type can be
        changed arbitrarily. When inline message is edited, new file can't
        be uploaded. Use previously uploaded file via its file_id or specify
        a URL. On success, if the edited message was sent by the bot, the
        edited Message is returned, otherwise True is returned.

        Reference: <https://core.telegram.org/bots/api#editmessagemedia>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is optional. Required if inline_message_id is not
                specified. Unique identifier for the target chat or username
                of the target channel (in the format @channelusername)

        *inline_message_id*
                This parameter type is String and is optional.

                Required if chat_id and message_id are not specified.
                Identifier of the inline message

        *media* This parameter type is an object
                Net::API::Telegram::InputMedia and is required. A
                JSON-serialized object for a new media content of the
                message

        *message_id*
                This parameter type is Integer and is optional.

                Required if inline_message_id is not specified. Identifier
                of the message to edit

        *reply_markup*
                This parameter type is an object
                Net::API::Telegram::InlineKeyboardMarkup and is optional. A
                JSON-serialized object for a new inline keyboard.

    editMessageReplyMarkup( %PARAMETERS )
        Use this method to edit only the reply markup of messages. On
        success, if edited message is sent by the bot, the edited Message is
        returned, otherwise True is returned.

        Reference:
        <https://core.telegram.org/bots/api#editmessagereplymarkup>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is optional. Required if inline_message_id is not
                specified. Unique identifier for the target chat or username
                of the target channel (in the format @channelusername)

        *inline_message_id*
                This parameter type is String and is optional.

                Required if chat_id and message_id are not specified.
                Identifier of the inline message

        *message_id*
                This parameter type is Integer and is optional.

                Required if inline_message_id is not specified. Identifier
                of the message to edit

        *reply_markup*
                This parameter type is an object
                Net::API::Telegram::InlineKeyboardMarkup and is optional. A
                JSON-serialized object for an inline keyboard.

    editMessageText( %PARAMETERS )
        Use this method to edit text and game messages. On success, if
        edited message is sent by the bot, the edited Message is returned,
        otherwise True is returned.

        Reference: <https://core.telegram.org/bots/api#editmessagetext>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is optional. Required if inline_message_id is not
                specified. Unique identifier for the target chat or username
                of the target channel (in the format @channelusername)

        *disable_web_page_preview*
                This parameter type is Boolean and is optional.

                Disables link previews for links in this message

        *inline_message_id*
                This parameter type is String and is optional.

                Required if chat_id and message_id are not specified.
                Identifier of the inline message

        *message_id*
                This parameter type is Integer and is optional.

                Required if inline_message_id is not specified. Identifier
                of the message to edit

        *parse_mode*
                This parameter type is String and is optional.

                Send Markdown or HTML, if you want Telegram apps to show
                bold, italic, fixed-width text or inline URLs in your bot's
                message.

        *reply_markup*
                This parameter type is an object
                Net::API::Telegram::InlineKeyboardMarkup and is optional. A
                JSON-serialized object for an inline keyboard.

        *text*  This parameter type is String and is required.

                New text of the message

    exportChatInviteLink( %PARAMETERS )
        Use this method to generate a new invite link for a chat; any
        previously generated link is revoked. The bot must be an
        administrator in the chat for this to work and must have the
        appropriate admin rights. Returns the new invite link as String on
        success.

        Reference: <https://core.telegram.org/bots/api#exportchatinvitelink>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

    forwardMessage( %PARAMETERS )
        Use this method to forward messages of any kind. On success, the
        sent Message is returned.

        Reference: <https://core.telegram.org/bots/api#forwardmessage>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

        *disable_notification*
                This parameter type is Boolean and is optional.

                Sends the message silently. Users will receive a
                notification with no sound.

        *from_chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the chat where
                the original message was sent (or channel username in the
                format @channelusername)

        *message_id*
                This parameter type is Integer and is required.

                Message identifier in the chat specified in from_chat_id

    getChat( %PARAMETERS )
        Use this method to get up to date information about the chat
        (current name of the user for one-on-one conversations, current
        username of a user, group or channel, etc.). Returns a Chat object
        on success.

        Reference: <https://core.telegram.org/bots/api#getchat>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target supergroup or channel (in the
                format @channelusername)

    getChatAdministrators( %PARAMETERS )
        Use this method to get a list of administrators in a chat. On
        success, returns an Array of ChatMember objects that contains
        information about all chat administrators except other bots. If the
        chat is a group or a supergroup and no administrators were
        appointed, only the creator will be returned.

        Reference:
        <https://core.telegram.org/bots/api#getchatadministrators>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target supergroup or channel (in the
                format @channelusername)

    getChatMember( %PARAMETERS )
        Use this method to get information about a member of a chat. Returns
        a ChatMember object on success.

        Reference: <https://core.telegram.org/bots/api#getchatmember>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target supergroup or channel (in the
                format @channelusername)

        *user_id*
                This parameter type is Integer and is required.

                Unique identifier of the target user

    getChatMembersCount( %PARAMETERS )
        Use this method to get the number of members in a chat. Returns Int
        on success.

        Reference: <https://core.telegram.org/bots/api#getchatmemberscount>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target supergroup or channel (in the
                format @channelusername)

    getFile( %PARAMETERS )
        Use this method to get basic info about a file and prepare it for
        downloading. For the moment, bots can download files of up to 20MB
        in size. On success, a File object is returned. The file can then be
        downloaded via the link
        https://api.telegram.org/file/bot<token>/<file_path>, where
        <file_path> is taken from the response. It is guaranteed that the
        link will be valid for at least 1 hour. When the link expires, a new
        one can be requested by calling getFile again.

        Reference: <https://core.telegram.org/bots/api#getfile>

        This methods takes the following parameters:

        *file_id*
                This parameter type is String and is required.

                File identifier to get info about

    getGameHighScores( %PARAMETERS )
        Use this method to get data for high score tables. Will return the
        score of the specified user and several of his neighbors in a game.
        On success, returns an Array of GameHighScore objects.

        Reference: <https://core.telegram.org/bots/api#getgamehighscores>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is Integer and is optional.

                Required if inline_message_id is not specified. Unique
                identifier for the target chat

        *inline_message_id*
                This parameter type is String and is optional.

                Required if chat_id and message_id are not specified.
                Identifier of the inline message

        *message_id*
                This parameter type is Integer and is optional.

                Required if inline_message_id is not specified. Identifier
                of the sent message

        *user_id*
                This parameter type is Integer and is required.

                Target user id

    getMe()
        A simple method for testing your bot's auth token. Requires no
        parameters. Returns basic information about the bot in form of a
        User object.

        Reference: <https://core.telegram.org/bots/api#getme>

        This method does not take any parameter.

    getStickerSet( %PARAMETERS )
        Use this method to get a sticker set. On success, a StickerSet
        object is returned.

        Reference: <https://core.telegram.org/bots/api#getstickerset>

        This methods takes the following parameters:

        *name*  This parameter type is String and is required.

                Name of the sticker set

    getUpdates( %PARAMETERS )
        Use this method to receive incoming updates using long polling
        (wiki). An Array of Update objects is returned.

        Reference: <https://core.telegram.org/bots/api#getupdates>

        This methods takes the following parameters:

        *allowed_updates*
                This parameter type is an array of and is optional. List the
                types of updates you want your bot to receive. For example,
                specify [“message”, “edited_channel_post”, “callback_query”]
                to only receive updates of these types. See Update for a
                complete list of available update types. Specify an empty
                list to receive all updates regardless of type (default). If
                not specified, the previous setting will be used.Please note
                that this parameter doesn't affect updates created before
                the call to the getUpdates, so unwanted updates may be
                received for a short period of time.

        *limit* This parameter type is Integer and is optional.

                Limits the number of updates to be retrieved. Values between
                1—100 are accepted. Defaults to 100.

        *offset*
                This parameter type is Integer and is optional.

                Identifier of the first update to be returned. Must be
                greater by one than the highest among the identifiers of
                previously received updates. By default, updates starting
                with the earliest unconfirmed update are returned. An update
                is considered confirmed as soon as getUpdates is called with
                an offset higher than its update_id. The negative offset can
                be specified to retrieve updates starting from -offset
                update from the end of the updates queue. All previous
                updates will forgotten.

        *timeout*
                This parameter type is Integer and is optional.

                Timeout in seconds for long polling. Defaults to 0, i.e.
                usual short polling. Should be positive, short polling
                should be used for testing purposes only.

    getUserProfilePhotos( %PARAMETERS )
        Use this method to get a list of profile pictures for a user.
        Returns a UserProfilePhotos object.

        Reference: <https://core.telegram.org/bots/api#getuserprofilephotos>

        This methods takes the following parameters:

        *limit* This parameter type is Integer and is optional.

                Limits the number of photos to be retrieved. Values between
                1—100 are accepted. Defaults to 100.

        *offset*
                This parameter type is Integer and is optional.

                Sequential number of the first photo to be returned. By
                default, all photos are returned.

        *user_id*
                This parameter type is Integer and is required.

                Unique identifier of the target user

    getWebhookInfo()
        Use this method to get current webhook status. Requires no
        parameters. On success, returns a WebhookInfo object. If the bot is
        using getUpdates, will return an object with the url field empty.

        Reference: <https://core.telegram.org/bots/api#getwebhookinfo>

        This method does not take any parameter.

    kickChatMember( %PARAMETERS )
        Use this method to kick a user from a group, a supergroup or a
        channel. In the case of supergroups and channels, the user will not
        be able to return to the group on their own using invite links,
        etc., unless unbanned first. The bot must be an administrator in the
        chat for this to work and must have the appropriate admin rights.
        Returns True on success.

        Reference: <https://core.telegram.org/bots/api#kickchatmember>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                group or username of the target supergroup or channel (in
                the format @channelusername)

        *until_date*
                This parameter type is Integer and is optional.

                Date when the user will be unbanned, unix time. If user is
                banned for more than 366 days or less than 30 seconds from
                the current time they are considered to be banned forever

        *user_id*
                This parameter type is Integer and is required.

                Unique identifier of the target user

    leaveChat( %PARAMETERS )
        Use this method for your bot to leave a group, supergroup or
        channel. Returns True on success.

        Reference: <https://core.telegram.org/bots/api#leavechat>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target supergroup or channel (in the
                format @channelusername)

    pinChatMessage( %PARAMETERS )
        Use this method to pin a message in a group, a supergroup, or a
        channel. The bot must be an administrator in the chat for this to
        work and must have the ‘can_pin_messages’ admin right in the
        supergroup or ‘can_edit_messages’ admin right in the channel.
        Returns True on success.

        Reference: <https://core.telegram.org/bots/api#pinchatmessage>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

        *disable_notification*
                This parameter type is Boolean and is optional.

                Pass True, if it is not necessary to send a notification to
                all chat members about the new pinned message. Notifications
                are always disabled in channels.

        *message_id*
                This parameter type is Integer and is required.

                Identifier of a message to pin

    promoteChatMember( %PARAMETERS )
        Use this method to promote or demote a user in a supergroup or a
        channel. The bot must be an administrator in the chat for this to
        work and must have the appropriate admin rights. Pass False for all
        boolean parameters to demote a user. Returns True on success.

        Reference: <https://core.telegram.org/bots/api#promotechatmember>

        This methods takes the following parameters:

        *can_change_info*
                This parameter type is Boolean and is optional.

                Pass True, if the administrator can change chat title, photo
                and other settings

        *can_delete_messages*
                This parameter type is Boolean and is optional.

                Pass True, if the administrator can delete messages of other
                users

        *can_edit_messages*
                This parameter type is Boolean and is optional.

                Pass True, if the administrator can edit messages of other
                users and can pin messages, channels only

        *can_invite_users*
                This parameter type is Boolean and is optional.

                Pass True, if the administrator can invite new users to the
                chat

        *can_pin_messages*
                This parameter type is Boolean and is optional.

                Pass True, if the administrator can pin messages,
                supergroups only

        *can_post_messages*
                This parameter type is Boolean and is optional.

                Pass True, if the administrator can create channel posts,
                channels only

        *can_promote_members*
                This parameter type is Boolean and is optional.

                Pass True, if the administrator can add new administrators
                with a subset of his own privileges or demote administrators
                that he has promoted, directly or indirectly (promoted by
                administrators that were appointed by him)

        *can_restrict_members*
                This parameter type is Boolean and is optional.

                Pass True, if the administrator can restrict, ban or unban
                chat members

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

        *user_id*
                This parameter type is Integer and is required.

                Unique identifier of the target user

    restrictChatMember( %PARAMETERS )
        Use this method to restrict a user in a supergroup. The bot must be
        an administrator in the supergroup for this to work and must have
        the appropriate admin rights. Pass True for all permissions to lift
        restrictions from a user. Returns True on success.

        Reference: <https://core.telegram.org/bots/api#restrictchatmember>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target supergroup (in the format
                @supergroupusername)

        *permissions*
                This parameter type is an object
                Net::API::Telegram::ChatPermissions and is required. New
                user permissions

        *until_date*
                This parameter type is Integer and is optional.

                Date when restrictions will be lifted for the user, unix
                time. If user is restricted for more than 366 days or less
                than 30 seconds from the current time, they are considered
                to be restricted forever

        *user_id*
                This parameter type is Integer and is required.

                Unique identifier of the target user

    sendAnimation( %PARAMETERS )
        Use this method to send animation files (GIF or H.264/MPEG-4 AVC
        video without sound). On success, the sent Message is returned. Bots
        can currently send animation files of up to 50 MB in size, this
        limit may be changed in the future.

        Reference: <https://core.telegram.org/bots/api#sendanimation>

        This methods takes the following parameters:

        *animation*
                This parameter type is one of the following InputFile or
                String and is required. Animation to send. Pass a file_id as
                String to send an animation that exists on the Telegram
                servers (recommended), pass an HTTP URL as a String for
                Telegram to get an animation from the Internet, or upload a
                new animation using multipart/form-data. More info on
                Sending Files »

        *caption*
                This parameter type is String and is optional.

                Animation caption (may also be used when resending animation
                by file_id), 0-1024 characters

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

        *disable_notification*
                This parameter type is Boolean and is optional.

                Sends the message silently. Users will receive a
                notification with no sound.

        *duration*
                This parameter type is Integer and is optional.

                Duration of sent animation in seconds

        *height*
                This parameter type is Integer and is optional.

                Animation height

        *parse_mode*
                This parameter type is String and is optional.

                Send Markdown or HTML, if you want Telegram apps to show
                bold, italic, fixed-width text or inline URLs in the media
                caption.

        *reply_markup*
                This parameter type is one of the following
                InlineKeyboardMarkup or ReplyKeyboardMarkup or
                ReplyKeyboardRemove or ForceReply and is optional.
                Additional interface options. A JSON-serialized object for
                an inline keyboard, custom reply keyboard, instructions to
                remove reply keyboard or to force a reply from the user.

        *reply_to_message_id*
                This parameter type is Integer and is optional.

                If the message is a reply, ID of the original message

        *thumb* This parameter type is one of the following InputFile or
                String and is optional. Thumbnail of the file sent; can be
                ignored if thumbnail generation for the file is supported
                server-side. The thumbnail should be in JPEG format and less
                than 200 kB in size. A thumbnail‘s width and height should
                not exceed 320. Ignored if the file is not uploaded using
                multipart/form-data. Thumbnails can’t be reused and can be
                only uploaded as a new file, so you can pass
                “attach://<file_attach_name>” if the thumbnail was uploaded
                using multipart/form-data under <file_attach_name>. More
                info on Sending Files »

        *width* This parameter type is Integer and is optional.

                Animation width

    sendAudio( %PARAMETERS )
        Use this method to send audio files, if you want Telegram clients to
        display them in the music player. Your audio must be in the .MP3 or
        .M4A format. On success, the sent Message is returned. Bots can
        currently send audio files of up to 50 MB in size, this limit may be
        changed in the future.For sending voice messages, use the sendVoice
        method instead.

        Reference: <https://core.telegram.org/bots/api#sendaudio>

        This methods takes the following parameters:

        *audio* This parameter type is one of the following InputFile or
                String and is required. Audio file to send. Pass a file_id
                as String to send an audio file that exists on the Telegram
                servers (recommended), pass an HTTP URL as a String for
                Telegram to get an audio file from the Internet, or upload a
                new one using multipart/form-data. More info on Sending
                Files »

        *caption*
                This parameter type is String and is optional.

                Audio caption, 0-1024 characters

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

        *disable_notification*
                This parameter type is Boolean and is optional.

                Sends the message silently. Users will receive a
                notification with no sound.

        *duration*
                This parameter type is Integer and is optional.

                Duration of the audio in seconds

        *parse_mode*
                This parameter type is String and is optional.

                Send Markdown or HTML, if you want Telegram apps to show
                bold, italic, fixed-width text or inline URLs in the media
                caption.

        *performer*
                This parameter type is String and is optional.

                Performer

        *reply_markup*
                This parameter type is one of the following
                InlineKeyboardMarkup or ReplyKeyboardMarkup or
                ReplyKeyboardRemove or ForceReply and is optional.
                Additional interface options. A JSON-serialized object for
                an inline keyboard, custom reply keyboard, instructions to
                remove reply keyboard or to force a reply from the user.

        *reply_to_message_id*
                This parameter type is Integer and is optional.

                If the message is a reply, ID of the original message

        *thumb* This parameter type is one of the following InputFile or
                String and is optional. Thumbnail of the file sent; can be
                ignored if thumbnail generation for the file is supported
                server-side. The thumbnail should be in JPEG format and less
                than 200 kB in size. A thumbnail‘s width and height should
                not exceed 320. Ignored if the file is not uploaded using
                multipart/form-data. Thumbnails can’t be reused and can be
                only uploaded as a new file, so you can pass
                “attach://<file_attach_name>” if the thumbnail was uploaded
                using multipart/form-data under <file_attach_name>. More
                info on Sending Files »

        *title* This parameter type is String and is optional.

                Track name

    sendChatAction( %PARAMETERS )
        Use this method when you need to tell the user that something is
        happening on the bot's side. The status is set for 5 seconds or less
        (when a message arrives from your bot, Telegram clients clear its
        typing status). Returns True on success.We only recommend using this
        method when a response from the bot will take a noticeable amount of
        time to arrive.

        Reference: <https://core.telegram.org/bots/api#sendchataction>

        This methods takes the following parameters:

        *action*
                This parameter type is String and is required.

                Type of action to broadcast. Choose one, depending on what
                the user is about to receive: typing for text messages,
                upload_photo for photos, record_video or upload_video for
                videos, record_audio or upload_audio for audio files,
                upload_document for general files, find_location for
                location data, record_video_note or upload_video_note for
                video notes.

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

    sendContact( %PARAMETERS )
        Use this method to send phone contacts. On success, the sent Message
        is returned.

        Reference: <https://core.telegram.org/bots/api#sendcontact>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

        *disable_notification*
                This parameter type is Boolean and is optional.

                Sends the message silently. Users will receive a
                notification with no sound.

        *first_name*
                This parameter type is String and is required.

                Contact's first name

        *last_name*
                This parameter type is String and is optional.

                Contact's last name

        *phone_number*
                This parameter type is String and is required.

                Contact's phone number

        *reply_markup*
                This parameter type is one of the following
                InlineKeyboardMarkup or ReplyKeyboardMarkup or
                ReplyKeyboardRemove or ForceReply and is optional.
                Additional interface options. A JSON-serialized object for
                an inline keyboard, custom reply keyboard, instructions to
                remove keyboard or to force a reply from the user.

        *reply_to_message_id*
                This parameter type is Integer and is optional.

                If the message is a reply, ID of the original message

        *vcard* This parameter type is String and is optional.

                Additional data about the contact in the form of a vCard,
                0-2048 bytes

    sendDocument( %PARAMETERS )
        Use this method to send general files. On success, the sent Message
        is returned. Bots can currently send files of any type of up to 50
        MB in size, this limit may be changed in the future.

        Reference: <https://core.telegram.org/bots/api#senddocument>

        This methods takes the following parameters:

        *caption*
                This parameter type is String and is optional.

                Document caption (may also be used when resending documents
                by file_id), 0-1024 characters

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

        *disable_notification*
                This parameter type is Boolean and is optional.

                Sends the message silently. Users will receive a
                notification with no sound.

        *document*
                This parameter type is one of the following InputFile or
                String and is required. File to send. Pass a file_id as
                String to send a file that exists on the Telegram servers
                (recommended), pass an HTTP URL as a String for Telegram to
                get a file from the Internet, or upload a new one using
                multipart/form-data. More info on Sending Files »

        *parse_mode*
                This parameter type is String and is optional.

                Send Markdown or HTML, if you want Telegram apps to show
                bold, italic, fixed-width text or inline URLs in the media
                caption.

        *reply_markup*
                This parameter type is one of the following
                InlineKeyboardMarkup or ReplyKeyboardMarkup or
                ReplyKeyboardRemove or ForceReply and is optional.
                Additional interface options. A JSON-serialized object for
                an inline keyboard, custom reply keyboard, instructions to
                remove reply keyboard or to force a reply from the user.

        *reply_to_message_id*
                This parameter type is Integer and is optional.

                If the message is a reply, ID of the original message

        *thumb* This parameter type is one of the following InputFile or
                String and is optional. Thumbnail of the file sent; can be
                ignored if thumbnail generation for the file is supported
                server-side. The thumbnail should be in JPEG format and less
                than 200 kB in size. A thumbnail‘s width and height should
                not exceed 320. Ignored if the file is not uploaded using
                multipart/form-data. Thumbnails can’t be reused and can be
                only uploaded as a new file, so you can pass
                “attach://<file_attach_name>” if the thumbnail was uploaded
                using multipart/form-data under <file_attach_name>. More
                info on Sending Files »

    sendGame( %PARAMETERS )
        Use this method to send a game. On success, the sent Message is
        returned.

        Reference: <https://core.telegram.org/bots/api#sendgame>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is Integer and is required.

                Unique identifier for the target chat

        *disable_notification*
                This parameter type is Boolean and is optional.

                Sends the message silently. Users will receive a
                notification with no sound.

        *game_short_name*
                This parameter type is String and is required.

                Short name of the game, serves as the unique identifier for
                the game. Set up your games via Botfather.

        *reply_markup*
                This parameter type is an object
                Net::API::Telegram::InlineKeyboardMarkup and is optional. A
                JSON-serialized object for an inline keyboard. If empty, one
                ‘Play game_title’ button will be shown. If not empty, the
                first button must launch the game.

        *reply_to_message_id*
                This parameter type is Integer and is optional.

                If the message is a reply, ID of the original message

    sendInvoice( %PARAMETERS )
        Use this method to send invoices. On success, the sent Message is
        returned.

        Reference: <https://core.telegram.org/bots/api#sendinvoice>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is Integer and is required.

                Unique identifier for the target private chat

        *currency*
                This parameter type is String and is required.

                Three-letter ISO 4217 currency code, see more on currencies

        *description*
                This parameter type is String and is required.

                Product description, 1-255 characters

        *disable_notification*
                This parameter type is Boolean and is optional.

                Sends the message silently. Users will receive a
                notification with no sound.

        *is_flexible*
                This parameter type is Boolean and is optional.

                Pass True, if the final price depends on the shipping method

        *need_email*
                This parameter type is Boolean and is optional.

                Pass True, if you require the user's email address to
                complete the order

        *need_name*
                This parameter type is Boolean and is optional.

                Pass True, if you require the user's full name to complete
                the order

        *need_phone_number*
                This parameter type is Boolean and is optional.

                Pass True, if you require the user's phone number to
                complete the order

        *need_shipping_address*
                This parameter type is Boolean and is optional.

                Pass True, if you require the user's shipping address to
                complete the order

        *payload*
                This parameter type is String and is required.

                Bot-defined invoice payload, 1-128 bytes. This will not be
                displayed to the user, use for your internal processes.

        *photo_height*
                This parameter type is Integer and is optional.

                Photo height

        *photo_size*
                This parameter type is Integer and is optional.

                Photo size

        *photo_url*
                This parameter type is String and is optional.

                URL of the product photo for the invoice. Can be a photo of
                the goods or a marketing image for a service. People like it
                better when they see what they are paying for.

        *photo_width*
                This parameter type is Integer and is optional.

                Photo width

        *prices*
                This parameter type is an array of
                Net::API::Telegram::LabeledPrice and is required. Price
                breakdown, a list of components (e.g. product price, tax,
                discount, delivery cost, delivery tax, bonus, etc.)

        *provider_data*
                This parameter type is String and is optional.

                JSON-encoded data about the invoice, which will be shared
                with the payment provider. A detailed description of
                required fields should be provided by the payment provider.

        *provider_token*
                This parameter type is String and is required.

                Payments provider token, obtained via Botfather

        *reply_markup*
                This parameter type is an object
                Net::API::Telegram::InlineKeyboardMarkup and is optional. A
                JSON-serialized object for an inline keyboard. If empty, one
                'Pay total price' button will be shown. If not empty, the
                first button must be a Pay button.

        *reply_to_message_id*
                This parameter type is Integer and is optional.

                If the message is a reply, ID of the original message

        *send_email_to_provider*
                This parameter type is Boolean and is optional.

                Pass True, if user's email address should be sent to
                provider

        *send_phone_number_to_provider*
                This parameter type is Boolean and is optional.

                Pass True, if user's phone number should be sent to provider

        *start_parameter*
                This parameter type is String and is required.

                Unique deep-linking parameter that can be used to generate
                this invoice when used as a start parameter

        *title* This parameter type is String and is required.

                Product name, 1-32 characters

    sendLocation( %PARAMETERS )
        Use this method to send point on the map. On success, the sent
        Message is returned.

        Reference: <https://core.telegram.org/bots/api#sendlocation>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

        *disable_notification*
                This parameter type is Boolean and is optional.

                Sends the message silently. Users will receive a
                notification with no sound.

        *latitude*
                This parameter type is Float number and is required.

                Latitude of the location

        *live_period*
                This parameter type is Integer and is optional.

                Period in seconds for which the location will be updated
                (see Live Locations, should be between 60 and 86400.

        *longitude*
                This parameter type is Float number and is required.

                Longitude of the location

        *reply_markup*
                This parameter type is one of the following
                InlineKeyboardMarkup or ReplyKeyboardMarkup or
                ReplyKeyboardRemove or ForceReply and is optional.
                Additional interface options. A JSON-serialized object for
                an inline keyboard, custom reply keyboard, instructions to
                remove reply keyboard or to force a reply from the user.

        *reply_to_message_id*
                This parameter type is Integer and is optional.

                If the message is a reply, ID of the original message

    sendMediaGroup( %PARAMETERS )
        Use this method to send a group of photos or videos as an album. On
        success, an array of the sent Messages is returned.

        Reference: <https://core.telegram.org/bots/api#sendmediagroup>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

        *disable_notification*
                This parameter type is Boolean and is optional.

                Sends the messages silently. Users will receive a
                notification with no sound.

        *media* This parameter type is an array of
                Net::API::Telegram::InputMediaPhoto and
                Net::API::Telegram::InputMediaVideo and is required. A
                JSON-serialized array describing photos and videos to be
                sent, must include 2–10 items

        *reply_to_message_id*
                This parameter type is Integer and is optional.

                If the messages are a reply, ID of the original message

    sendMessage( %PARAMETERS )
        Use this method to send text messages. On success, the sent Message
        is returned.

        Reference: <https://core.telegram.org/bots/api#sendmessage>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

        *disable_notification*
                This parameter type is Boolean and is optional.

                Sends the message silently. Users will receive a
                notification with no sound.

        *disable_web_page_preview*
                This parameter type is Boolean and is optional.

                Disables link previews for links in this message

        *parse_mode*
                This parameter type is String and is optional.

                Send Markdown or HTML, if you want Telegram apps to show
                bold, italic, fixed-width text or inline URLs in your bot's
                message.

        *reply_markup*
                This parameter type is one of the following
                InlineKeyboardMarkup or ReplyKeyboardMarkup or
                ReplyKeyboardRemove or ForceReply and is optional.
                Additional interface options. A JSON-serialized object for
                an inline keyboard, custom reply keyboard, instructions to
                remove reply keyboard or to force a reply from the user.

        *reply_to_message_id*
                This parameter type is Integer and is optional.

                If the message is a reply, ID of the original message

        *text*  This parameter type is String and is required.

                Text of the message to be sent

    sendPhoto( %PARAMETERS )
        Use this method to send photos. On success, the sent Message is
        returned.

        Reference: <https://core.telegram.org/bots/api#sendphoto>

        This methods takes the following parameters:

        *caption*
                This parameter type is String and is optional.

                Photo caption (may also be used when resending photos by
                file_id), 0-1024 characters

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

        *disable_notification*
                This parameter type is Boolean and is optional.

                Sends the message silently. Users will receive a
                notification with no sound.

        *parse_mode*
                This parameter type is String and is optional.

                Send Markdown or HTML, if you want Telegram apps to show
                bold, italic, fixed-width text or inline URLs in the media
                caption.

        *photo* This parameter type is one of the following InputFile or
                String and is required. Photo to send. Pass a file_id as
                String to send a photo that exists on the Telegram servers
                (recommended), pass an HTTP URL as a String for Telegram to
                get a photo from the Internet, or upload a new photo using
                multipart/form-data. More info on Sending Files »

        *reply_markup*
                This parameter type is one of the following
                InlineKeyboardMarkup or ReplyKeyboardMarkup or
                ReplyKeyboardRemove or ForceReply and is optional.
                Additional interface options. A JSON-serialized object for
                an inline keyboard, custom reply keyboard, instructions to
                remove reply keyboard or to force a reply from the user.

        *reply_to_message_id*
                This parameter type is Integer and is optional.

                If the message is a reply, ID of the original message

    sendPoll( %PARAMETERS )
        Use this method to send a native poll. A native poll can't be sent
        to a private chat. On success, the sent Message is returned.

        Reference: <https://core.telegram.org/bots/api#sendpoll>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername). A native poll can't be sent to a private
                chat.

        *disable_notification*
                This parameter type is Boolean and is optional.

                Sends the message silently. Users will receive a
                notification with no sound.

        *options*
                This parameter type is an array of and is required. List of
                answer options, 2-10 strings 1-100 characters each

        *question*
                This parameter type is String and is required.

                Poll question, 1-255 characters

        *reply_markup*
                This parameter type is one of the following
                InlineKeyboardMarkup or ReplyKeyboardMarkup or
                ReplyKeyboardRemove or ForceReply and is optional.
                Additional interface options. A JSON-serialized object for
                an inline keyboard, custom reply keyboard, instructions to
                remove reply keyboard or to force a reply from the user.

        *reply_to_message_id*
                This parameter type is Integer and is optional.

                If the message is a reply, ID of the original message

    sendSticker( %PARAMETERS )
        Use this method to send static .WEBP or animated .TGS stickers. On
        success, the sent Message is returned.

        Reference: <https://core.telegram.org/bots/api#sendsticker>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

        *disable_notification*
                This parameter type is Boolean and is optional.

                Sends the message silently. Users will receive a
                notification with no sound.

        *reply_markup*
                This parameter type is one of the following
                InlineKeyboardMarkup or ReplyKeyboardMarkup or
                ReplyKeyboardRemove or ForceReply and is optional.
                Additional interface options. A JSON-serialized object for
                an inline keyboard, custom reply keyboard, instructions to
                remove reply keyboard or to force a reply from the user.

        *reply_to_message_id*
                This parameter type is Integer and is optional.

                If the message is a reply, ID of the original message

        *sticker*
                This parameter type is one of the following InputFile or
                String and is required. Sticker to send. Pass a file_id as
                String to send a file that exists on the Telegram servers
                (recommended), pass an HTTP URL as a String for Telegram to
                get a .webp file from the Internet, or upload a new one
                using multipart/form-data. More info on Sending Files »

    sendVenue( %PARAMETERS )
        Use this method to send information about a venue. On success, the
        sent Message is returned.

        Reference: <https://core.telegram.org/bots/api#sendvenue>

        This methods takes the following parameters:

        *address*
                This parameter type is String and is required.

                Address of the venue

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

        *disable_notification*
                This parameter type is Boolean and is optional.

                Sends the message silently. Users will receive a
                notification with no sound.

        *foursquare_id*
                This parameter type is String and is optional.

                Foursquare identifier of the venue

        *foursquare_type*
                This parameter type is String and is optional.

                Foursquare type of the venue, if known. (For example,
                “arts_entertainment/default”, “arts_entertainment/aquarium”
                or “food/icecream”.)

        *latitude*
                This parameter type is Float number and is required.

                Latitude of the venue

        *longitude*
                This parameter type is Float number and is required.

                Longitude of the venue

        *reply_markup*
                This parameter type is one of the following
                InlineKeyboardMarkup or ReplyKeyboardMarkup or
                ReplyKeyboardRemove or ForceReply and is optional.
                Additional interface options. A JSON-serialized object for
                an inline keyboard, custom reply keyboard, instructions to
                remove reply keyboard or to force a reply from the user.

        *reply_to_message_id*
                This parameter type is Integer and is optional.

                If the message is a reply, ID of the original message

        *title* This parameter type is String and is required.

                Name of the venue

    sendVideo( %PARAMETERS )
        Use this method to send video files, Telegram clients support mp4
        videos (other formats may be sent as Document). On success, the sent
        Message is returned. Bots can currently send video files of up to 50
        MB in size, this limit may be changed in the future.

        Reference: <https://core.telegram.org/bots/api#sendvideo>

        This methods takes the following parameters:

        *caption*
                This parameter type is String and is optional.

                Video caption (may also be used when resending videos by
                file_id), 0-1024 characters

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

        *disable_notification*
                This parameter type is Boolean and is optional.

                Sends the message silently. Users will receive a
                notification with no sound.

        *duration*
                This parameter type is Integer and is optional.

                Duration of sent video in seconds

        *height*
                This parameter type is Integer and is optional.

                Video height

        *parse_mode*
                This parameter type is String and is optional.

                Send Markdown or HTML, if you want Telegram apps to show
                bold, italic, fixed-width text or inline URLs in the media
                caption.

        *reply_markup*
                This parameter type is one of the following
                InlineKeyboardMarkup or ReplyKeyboardMarkup or
                ReplyKeyboardRemove or ForceReply and is optional.
                Additional interface options. A JSON-serialized object for
                an inline keyboard, custom reply keyboard, instructions to
                remove reply keyboard or to force a reply from the user.

        *reply_to_message_id*
                This parameter type is Integer and is optional.

                If the message is a reply, ID of the original message

        *supports_streaming*
                This parameter type is Boolean and is optional.

                Pass True, if the uploaded video is suitable for streaming

        *thumb* This parameter type is one of the following InputFile or
                String and is optional. Thumbnail of the file sent; can be
                ignored if thumbnail generation for the file is supported
                server-side. The thumbnail should be in JPEG format and less
                than 200 kB in size. A thumbnail‘s width and height should
                not exceed 320. Ignored if the file is not uploaded using
                multipart/form-data. Thumbnails can’t be reused and can be
                only uploaded as a new file, so you can pass
                “attach://<file_attach_name>” if the thumbnail was uploaded
                using multipart/form-data under <file_attach_name>. More
                info on Sending Files »

        *video* This parameter type is one of the following InputFile or
                String and is required. Video to send. Pass a file_id as
                String to send a video that exists on the Telegram servers
                (recommended), pass an HTTP URL as a String for Telegram to
                get a video from the Internet, or upload a new video using
                multipart/form-data. More info on Sending Files »

        *width* This parameter type is Integer and is optional.

                Video width

    sendVideoNote( %PARAMETERS )
        As of v.4.0, Telegram clients support rounded square mp4 videos of
        up to 1 minute long. Use this method to send video messages. On
        success, the sent Message is returned.

        Reference: <https://core.telegram.org/bots/api#sendvideonote>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

        *disable_notification*
                This parameter type is Boolean and is optional.

                Sends the message silently. Users will receive a
                notification with no sound.

        *duration*
                This parameter type is Integer and is optional.

                Duration of sent video in seconds

        *length*
                This parameter type is Integer and is optional.

                Video width and height, i.e. diameter of the video message

        *reply_markup*
                This parameter type is one of the following
                InlineKeyboardMarkup or ReplyKeyboardMarkup or
                ReplyKeyboardRemove or ForceReply and is optional.
                Additional interface options. A JSON-serialized object for
                an inline keyboard, custom reply keyboard, instructions to
                remove reply keyboard or to force a reply from the user.

        *reply_to_message_id*
                This parameter type is Integer and is optional.

                If the message is a reply, ID of the original message

        *thumb* This parameter type is one of the following InputFile or
                String and is optional. Thumbnail of the file sent; can be
                ignored if thumbnail generation for the file is supported
                server-side. The thumbnail should be in JPEG format and less
                than 200 kB in size. A thumbnail‘s width and height should
                not exceed 320. Ignored if the file is not uploaded using
                multipart/form-data. Thumbnails can’t be reused and can be
                only uploaded as a new file, so you can pass
                “attach://<file_attach_name>” if the thumbnail was uploaded
                using multipart/form-data under <file_attach_name>. More
                info on Sending Files »

        *video_note*
                This parameter type is one of the following InputFile or
                String and is required. Video note to send. Pass a file_id
                as String to send a video note that exists on the Telegram
                servers (recommended) or upload a new video using
                multipart/form-data. More info on Sending Files ». Sending
                video notes by a URL is currently unsupported

    sendVoice( %PARAMETERS )
        Use this method to send audio files, if you want Telegram clients to
        display the file as a playable voice message. For this to work, your
        audio must be in an .ogg file encoded with OPUS (other formats may
        be sent as Audio or Document). On success, the sent Message is
        returned. Bots can currently send voice messages of up to 50 MB in
        size, this limit may be changed in the future.

        Reference: <https://core.telegram.org/bots/api#sendvoice>

        This methods takes the following parameters:

        *caption*
                This parameter type is String and is optional.

                Voice message caption, 0-1024 characters

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

        *disable_notification*
                This parameter type is Boolean and is optional.

                Sends the message silently. Users will receive a
                notification with no sound.

        *duration*
                This parameter type is Integer and is optional.

                Duration of the voice message in seconds

        *parse_mode*
                This parameter type is String and is optional.

                Send Markdown or HTML, if you want Telegram apps to show
                bold, italic, fixed-width text or inline URLs in the media
                caption.

        *reply_markup*
                This parameter type is one of the following
                InlineKeyboardMarkup or ReplyKeyboardMarkup or
                ReplyKeyboardRemove or ForceReply and is optional.
                Additional interface options. A JSON-serialized object for
                an inline keyboard, custom reply keyboard, instructions to
                remove reply keyboard or to force a reply from the user.

        *reply_to_message_id*
                This parameter type is Integer and is optional.

                If the message is a reply, ID of the original message

        *voice* This parameter type is one of the following InputFile or
                String and is required. Audio file to send. Pass a file_id
                as String to send a file that exists on the Telegram servers
                (recommended), pass an HTTP URL as a String for Telegram to
                get a file from the Internet, or upload a new one using
                multipart/form-data. More info on Sending Files »

    setChatDescription( %PARAMETERS )
        Use this method to change the description of a group, a supergroup
        or a channel. The bot must be an administrator in the chat for this
        to work and must have the appropriate admin rights. Returns True on
        success.

        Reference: <https://core.telegram.org/bots/api#setchatdescription>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

        *description*
                This parameter type is String and is optional.

                New chat description, 0-255 characters

    setChatPermissions( %PARAMETERS )
        Use this method to set default chat permissions for all members. The
        bot must be an administrator in the group or a supergroup for this
        to work and must have the can_restrict_members admin rights. Returns
        True on success.

        Reference: <https://core.telegram.org/bots/api#setchatpermissions>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target supergroup (in the format
                @supergroupusername)

        *permissions*
                This parameter type is an object
                Net::API::Telegram::ChatPermissions and is required. New
                default chat permissions

    setChatPhoto( %PARAMETERS )
        Use this method to set a new profile photo for the chat. Photos
        can't be changed for private chats. The bot must be an administrator
        in the chat for this to work and must have the appropriate admin
        rights. Returns True on success.

        Reference: <https://core.telegram.org/bots/api#setchatphoto>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

        *photo* This parameter type is an object
                Net::API::Telegram::InputFile and is required. New chat
                photo, uploaded using multipart/form-data

    setChatStickerSet( %PARAMETERS )
        Use this method to set a new group sticker set for a supergroup. The
        bot must be an administrator in the chat for this to work and must
        have the appropriate admin rights. Use the field can_set_sticker_set
        optionally returned in getChat requests to check if the bot can use
        this method. Returns True on success.

        Reference: <https://core.telegram.org/bots/api#setchatstickerset>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target supergroup (in the format
                @supergroupusername)

        *sticker_set_name*
                This parameter type is String and is required.

                Name of the sticker set to be set as the group sticker set

    setChatTitle( %PARAMETERS )
        Use this method to change the title of a chat. Titles can't be
        changed for private chats. The bot must be an administrator in the
        chat for this to work and must have the appropriate admin rights.
        Returns True on success.

        Reference: <https://core.telegram.org/bots/api#setchattitle>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

        *title* This parameter type is String and is required.

                New chat title, 1-255 characters

    setGameScore( %PARAMETERS )
        Use this method to set the score of the specified user in a game. On
        success, if the message was sent by the bot, returns the edited
        Message, otherwise returns True. Returns an error, if the new score
        is not greater than the user's current score in the chat and force
        is False.

        Reference: <https://core.telegram.org/bots/api#setgamescore>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is Integer and is optional.

                Required if inline_message_id is not specified. Unique
                identifier for the target chat

        *disable_edit_message*
                This parameter type is Boolean and is optional.

                Pass True, if the game message should not be automatically
                edited to include the current scoreboard

        *force* This parameter type is Boolean and is optional.

                Pass True, if the high score is allowed to decrease. This
                can be useful when fixing mistakes or banning cheaters

        *inline_message_id*
                This parameter type is String and is optional.

                Required if chat_id and message_id are not specified.
                Identifier of the inline message

        *message_id*
                This parameter type is Integer and is optional.

                Required if inline_message_id is not specified. Identifier
                of the sent message

        *score* This parameter type is Integer and is required.

                New score, must be non-negative

        *user_id*
                This parameter type is Integer and is required.

                User identifier

    setPassportDataErrors( %PARAMETERS )
        Informs a user that some of the Telegram Passport elements they
        provided contains errors. The user will not be able to re-submit
        their Passport to you until the errors are fixed (the contents of
        the field for which you returned the error must change). Returns
        True on success.Use this if the data submitted by the user doesn't
        satisfy the standards your service requires for any reason. For
        example, if a birthday date seems invalid, a submitted document is
        blurry, a scan shows evidence of tampering, etc. Supply some details
        in the error message to make sure the user knows how to correct the
        issues.

        Reference:
        <https://core.telegram.org/bots/api#setpassportdataerrors>

        This methods takes the following parameters:

        *errors*
                This parameter type is an array of
                Net::API::Telegram::PassportElementError and is required. A
                JSON-serialized array describing the errors

        *user_id*
                This parameter type is Integer and is required.

                User identifier

    setWebhook( %PARAMETERS )
        Use this method to specify a url and receive incoming updates via an
        outgoing webhook. Whenever there is an update for the bot, we will
        send an HTTPS POST request to the specified url, containing a
        JSON-serialized Update. In case of an unsuccessful request, we will
        give up after a reasonable amount of attempts. Returns True on
        success.If you'd like to make sure that the Webhook request comes
        from Telegram, we recommend using a secret path in the URL, e.g.
        https://www.example.com/. Since nobody else knows your bot‘s token,
        you can be pretty sure it’s us.

        Reference: <https://core.telegram.org/bots/api#setwebhook>

        This methods takes the following parameters:

        *allowed_updates*
                This parameter type is an array of and is optional. List the
                types of updates you want your bot to receive. For example,
                specify [“message”, “edited_channel_post”, “callback_query”]
                to only receive updates of these types. See Update for a
                complete list of available update types. Specify an empty
                list to receive all updates regardless of type (default). If
                not specified, the previous setting will be used.Please note
                that this parameter doesn't affect updates created before
                the call to the setWebhook, so unwanted updates may be
                received for a short period of time.

        *certificate*
                This parameter type is an object
                Net::API::Telegram::InputFile and is optional. Upload your
                public key certificate so that the root certificate in use
                can be checked. See our self-signed guide for details.

        *max_connections*
                This parameter type is Integer and is optional.

                Maximum allowed number of simultaneous HTTPS connections to
                the webhook for update delivery, 1-100. Defaults to 40. Use
                lower values to limit the load on your bot‘s server, and
                higher values to increase your bot’s throughput.

        *url*   This parameter type is String and is required.

                HTTPS url to send updates to. Use an empty string to remove
                webhook integration

    stopMessageLiveLocation( %PARAMETERS )
        Use this method to stop updating a live location message before
        live_period expires. On success, if the message was sent by the bot,
        the sent Message is returned, otherwise True is returned.

        Reference:
        <https://core.telegram.org/bots/api#stopmessagelivelocation>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is optional. Required if inline_message_id is not
                specified. Unique identifier for the target chat or username
                of the target channel (in the format @channelusername)

        *inline_message_id*
                This parameter type is String and is optional.

                Required if chat_id and message_id are not specified.
                Identifier of the inline message

        *message_id*
                This parameter type is Integer and is optional.

                Required if inline_message_id is not specified. Identifier
                of the message with live location to stop

        *reply_markup*
                This parameter type is an object
                Net::API::Telegram::InlineKeyboardMarkup and is optional. A
                JSON-serialized object for a new inline keyboard.

    stopPoll( %PARAMETERS )
        Use this method to stop a poll which was sent by the bot. On
        success, the stopped Poll with the final results is returned.

        Reference: <https://core.telegram.org/bots/api#stoppoll>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

        *message_id*
                This parameter type is Integer and is required.

                Identifier of the original message with the poll

        *reply_markup*
                This parameter type is an object
                Net::API::Telegram::InlineKeyboardMarkup and is optional. A
                JSON-serialized object for a new message inline keyboard.

    unbanChatMember( %PARAMETERS )
        Use this method to unban a previously kicked user in a supergroup or
        channel. The user will not return to the group or channel
        automatically, but will be able to join via link, etc. The bot must
        be an administrator for this to work. Returns True on success.

        Reference: <https://core.telegram.org/bots/api#unbanchatmember>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                group or username of the target supergroup or channel (in
                the format @username)

        *user_id*
                This parameter type is Integer and is required.

                Unique identifier of the target user

    unpinChatMessage( %PARAMETERS )
        Use this method to unpin a message in a group, a supergroup, or a
        channel. The bot must be an administrator in the chat for this to
        work and must have the ‘can_pin_messages’ admin right in the
        supergroup or ‘can_edit_messages’ admin right in the channel.
        Returns True on success.

        Reference: <https://core.telegram.org/bots/api#unpinchatmessage>

        This methods takes the following parameters:

        *chat_id*
                This parameter type is one of the following Integer or
                String and is required. Unique identifier for the target
                chat or username of the target channel (in the format
                @channelusername)

    uploadStickerFile( %PARAMETERS )
        Use this method to upload a .png file with a sticker for later use
        in createNewStickerSet and addStickerToSet methods (can be used
        multiple times). Returns the uploaded File on success.

        Reference: <https://core.telegram.org/bots/api#uploadstickerfile>

        This methods takes the following parameters:

        *png_sticker*
                This parameter type is an object
                Net::API::Telegram::InputFile and is required. Png image
                with the sticker, must be up to 512 kilobytes in size,
                dimensions must not exceed 512px, and either width or height
                must be exactly 512px. More info on Sending Files »

        *user_id*
                This parameter type is Integer and is required.

                User identifier of sticker file owner

COPYRIGHT
    Copyright (c) 2000-2019 DEGUEST Pte. Ltd.

AUTHOR
    Jacques Deguest <jack@deguest.jp>

SEE ALSO
    Net::API::Telegram

COPYRIGHT & LICENSE
    Copyright (c) 2018-2019 DEGUEST Pte. Ltd.

    You can use, copy, modify and redistribute this package and associated
    files under the same terms as Perl itself.

