=encoding utf8

=for comment POD_DERIVED_INDEX_GENERATED
The following documentation is automatically generated.  Please do not edit
this file, but rather the original, inline with Net::Async::Trello
at lib/Net/Async/Trello.pm
(on the system that originally ran this).
If you do edit this file, and don't want your changes to be removed, make
sure you change the first line.

=cut

=head1 NAME

Net::Async::Trello - low-level Trello API access

=head1 DESCRIPTION

Provides a basic interface for interacting with the L<Trello|https://trello.com> webservice.

It's currently a very crude implementation, implementing a small subset of the available API
features.

=head2 me

Returns profile information for the current user.

=head2 boards

Returns a L<Ryu::Source> representing the available boards.

=head2 board

Resolves to the board with the corresponding ID.

Takes the following named parameters:

=over 4

=item * id - the board ID to request

=back

Returns a L<Future>.

=head2 card

Returns information about a specific card.

Takes the following named parameters:

=over 4

=item * C<id> - the card ID to retrieve

=back

Resolves to a L<Net::Async::Trello::Card> instance.

=head2 member

Returns information about a specific person (board/card member).

Takes the following named parameters:

=over 4

=item * C<id> - the ID to retrieve

=back

Resolves to a L<Net::Async::Trello::Member> instance.

=head2 search

Performs a search for Trello objects by string, see L<https://developers.trello.com/reference/#search>
for details on search options available.

Example:

 my (%result) = await $trello->search(
  card_fields => [ qw(name url dateLastActivity) ],
  query       => 'Shopping List',
 );
 # print the url of the first card returned.
 my $card = $result{cards}->[0];
 # This should be a Net::Async::Trello::Card instance, so we have a ->url method:
 printf "Card %s url\n", $card->url;

Takes the arguments as shown in the Trello API documentation as named parameters.

The only compulsory argument is C<query>, the text string to search for.

Returns a L<Future> which resolves to a list of key-value pairs.
The value will be an instance of the appropriate
type, with the exception of C<options> which is a plain hashref.

=head1 METHODS - Internal

None of these are likely to be stable or of much use to external callers.

=head2 endpoints

=head2 endpoint

=head1 INHERITED METHODS

=over 4

=item L<IO::Async::Notifier>

L<add_child|IO::Async::Notifier/add_child>, L<adopt_future|IO::Async::Notifier/adopt_future>, L<adopted_futures|IO::Async::Notifier/adopted_futures>, L<can_event|IO::Async::Notifier/can_event>, L<children|IO::Async::Notifier/children>, L<configure_unknown|IO::Async::Notifier/configure_unknown>, L<debug_printf|IO::Async::Notifier/debug_printf>, L<get_loop|IO::Async::Notifier/get_loop>, L<invoke_error|IO::Async::Notifier/invoke_error>, L<invoke_event|IO::Async::Notifier/invoke_event>, L<loop|IO::Async::Notifier/loop>, L<make_event_cb|IO::Async::Notifier/make_event_cb>, L<maybe_invoke_event|IO::Async::Notifier/maybe_invoke_event>, L<maybe_make_event_cb|IO::Async::Notifier/maybe_make_event_cb>, L<new|IO::Async::Notifier/new>, L<notifier_name|IO::Async::Notifier/notifier_name>, L<parent|IO::Async::Notifier/parent>, L<remove_child|IO::Async::Notifier/remove_child>, L<remove_from_parent|IO::Async::Notifier/remove_from_parent>

=back

=head1 AUTHOR

Tom Molesworth <TEAM@cpan.org> with contributions from C<@michaelmueller-binary>.

=head1 LICENSE

Copyright Tom Molesworth 2014-2020. Licensed under the same terms as Perl itself.

