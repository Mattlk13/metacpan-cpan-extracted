#!perl

# Note: This script is a CLI interface to Riap function /Org/To/VCF/org_to_vcf
# and generated automatically using App::GenPericmdScript version 0.13

our $DATE = '2015-09-03'; # DATE
our $DIST = 'Org-To-VCF'; # DIST
our $VERSION = '0.08'; # VERSION

use 5.010001;
use strict;
use warnings;

use Perinci::CmdLine::Any;

Perinci::CmdLine::Any->new(
    url => "/Org/To/VCF/org_to_vcf",
)->run;

# ABSTRACT: Export contacts in Org document to VCF (vCard addressbook)
# PODNAME: org-to-vcf

__END__

=pod

=encoding UTF-8

=head1 NAME

org-to-vcf - Export contacts in Org document to VCF (vCard addressbook)

=head1 VERSION

This document describes version 0.08 of org-to-vcf (from Perl distribution Org-To-VCF), released on 2015-09-03.

=head1 SYNOPSIS

Usage:

 % org-to-vcf [options]

=head1 COMPLETION

This script has shell tab completion capability with support for several
shells.

=head2 bash

To activate bash completion for this script, put:

 complete -C org-to-vcf org-to-vcf

in your bash startup (e.g. C<~/.bashrc>). Your next shell session will then
recognize tab completion for the command. Or, you can also directly execute the
line above in your shell to activate immediately.

It is recommended, however, that you install L<shcompgen> which allows you to
activate completion scripts for several kinds of scripts on multiple shells.
Some CPAN distributions (those that are built with
L<Dist::Zilla::Plugin::GenShellCompletion>) will even automatically enable shell
completion for their included scripts (using C<shcompgen>) at installation time,
so you can immadiately have tab completion.

=head2 tcsh

To activate tcsh completion for this script, put:

 complete org-to-vcf 'p/*/`org-to-vcf`/'

in your tcsh startup (e.g. C<~/.tcshrc>). Your next shell session will then
recognize tab completion for the command. Or, you can also directly execute the
line above in your shell to activate immediately.

It is also recommended to install C<shcompgen> (see above).

=head2 other shells

For fish and zsh, install C<shcompgen> as described above.

=head1 ENVIRONMENT

=head2 ORG_TO_VCF_OPT => str

Specify additional command-line options

=head1 CONFIGURATION FILE

This script can read configuration file, which by default is searched at C<~/.config/org-to-vcf.conf>, C<~/org-to-vcf.conf> or C</etc/org-to-vcf.conf> (can be changed by specifying C<--config-path>). All found files will be read and merged.

To disable searching for configuration files, pass C<--no-config>.

Configuration file is in the format of L<IOD>, which is basically INI with some extra features. 

You can put multiple profiles in a single file by using section names like C<[profile=SOMENAME]>. Those sections will only be read if you specify the matching C<--config-profile SOMENAME>.

List of available configuration parameters:

 default_country (see --default-country)
 exclude_tags (see --exclude-tags)
 export_notes (see --no-export-notes)
 format (see --format)
 include_tags (see --include-tags)
 naked_res (see --naked-res)
 source_file (see --source-file)
 source_str (see --source-str)
 target_file (see --target-file)

=head1 FILES

~/.config/org-to-vcf.conf

~/org-to-vcf.conf

/etc/org-to-vcf.conf

=head1 HOMEPAGE

Please visit the project's homepage at L<https://metacpan.org/release/Org-To-VCF>.

=head1 SOURCE

Source repository is at L<https://github.com/perlancar/perl-Org-To-VCF>.

=head1 BUGS

Please report any bugs or feature requests on the bugtracker website L<https://rt.cpan.org/Public/Dist/Display.html?Name=Org-To-VCF>

When submitting a bug or request, please include a test-file or a
patch to an existing test-file that illustrates the bug or desired
feature.

=head1 AUTHOR

perlancar <perlancar@cpan.org>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2015 by perlancar@cpan.org.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=head1 OPTIONS

C<*> marks required options.

=head2 Configuration options

=over

=item B<--config-path>=I<filename>

Set path to configuration file.

Can be specified multiple times.

=item B<--config-profile>=I<s>

Set configuration profile to use.

=item B<--no-config>

Do not use any configuration file.

=back

=head2 Environment options

=over

=item B<--no-env>

Do not read environment for default options.

=back

=head2 Output options

=over

=item B<--format>=I<s>

Choose output format, e.g. json, text.

Default value:

 undef

=item B<--json>

Set output format to json.

=item B<--naked-res>

When outputing as JSON, strip result envelope.

Default value:

 0

By default, when outputing as JSON, the full enveloped result is returned, e.g.:

    [200,"OK",[1,2,3],{"func.extra"=>4}]

The reason is so you can get the status (1st element), status message (2nd
element) as well as result metadata/extra result (4th element) instead of just
the result (3rd element). However, sometimes you want just the result, e.g. when
you want to pipe the result for more post-processing. In this case you can use
`--naked-res` so you just get:

    [1,2,3]


=back

=head2 Other options

=over

=item B<--default-country>=I<s>

Specify default country code.

Free-form phone numbers on phone fields are formatted by this function, e.g.
`081 123 4567` becomes `0811234567`. If default country is specified (e.g.
"ID"), the number will be formatted as `+62811234567`. Setting this option is
recommended so the phone numbers are nicely formatted as international number.


=item B<--exclude-tags-json>=I<s>

Exclude trees that carry one of these tags (JSON-encoded).

See C<--exclude-tags>.

=item B<--exclude-tags>=I<s@>

Exclude trees that carry one of these tags.

If the whole document doesn't have any of these tags, then the whole document
will be exported. Otherwise, trees that do not carry one of these tags will be
excluded. If a selected tree is a subtree, the heading hierarchy above it will
also be selected for export, but not the text below those headings.

exclude_tags is evaluated after include_tags.


Can be specified multiple times.

=item B<--help>, B<-h>, B<-?>

Display help message and exit.

=item B<--include-tags-json>=I<s>

Include trees that carry one of these tags (JSON-encoded).

See C<--include-tags>.

=item B<--include-tags>=I<s@>

Include trees that carry one of these tags.

Works like Org's 'org-export-select-tags' variable. If the whole document
doesn't have any of these tags, then the whole document will be exported.
Otherwise, trees that do not carry one of these tags will be excluded. If a
selected tree is a subtree, the heading hierarchy above it will also be selected
for export, but not the text below those headings.


Can be specified multiple times.

=item B<--no-export-notes>

=item B<--source-file>=I<s>

Source Org file to export.

=item B<--source-str>=I<s>

Alternatively you can specify Org string directly.

=item B<--target-file>=I<s>

VCF file to write to.

If not specified, VCF output string will be returned instead.


=item B<--version>, B<-v>

Display program's version and exit.

=back

=cut
