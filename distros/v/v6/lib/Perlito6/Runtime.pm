# Do not edit this file - Generated by Perlito6 9.0
use v5;
use utf8;
use strict;
use warnings;
no warnings ('redefine', 'once', 'void', 'uninitialized', 'misc', 'recursion');
use Perlito6::Perl5::Runtime;
use Perlito6::Perl5::Prelude;
our $MATCH = Perlito6::Match->new();
{
package GLOBAL;
    sub new { shift; bless { @_ }, "GLOBAL" }
    {
    package Main;
        sub new { shift; bless { @_ }, "Main" }
        sub _replace {
            my $s = $_[0];
            my $old = $_[1];
            my $new = $_[2];
            ((my  $p) = index($s, $old));
            (($p >= 0) ? (substr($s, 0, $p) . $new . _replace(substr($s, ($p + Main::chars($old, ))), $old, $new)) : $s)
        };
        sub to_lisp_identifier {
            my $ident = $_[0];
            return scalar (('sv-' . $ident))
        };
        sub lisp_escape_string {
            my $s = $_[0];
            _replace($s, (chr(92)), (chr(92) . chr(92)))
        };
        sub to_javascript_namespace {
            my $s = $_[0];
            _replace($s, ('::'), chr(36))
        };
        sub to_lisp_namespace {
            my $s = $_[0];
            _replace($s, ('::'), ('-'))
        };
        sub to_go_namespace {
            my $s = $_[0];
            _replace($s, ('::'), ('__'))
        }
    }


}

1;
