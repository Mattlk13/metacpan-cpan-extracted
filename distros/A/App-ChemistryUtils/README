NAME
    App::ChemistryUtils - Utilities related to chemistry

VERSION
    This document describes version 0.001 of App::ChemistryUtils (from Perl
    distribution App-ChemistryUtils), released on 2023-02-12.

DESCRIPTION
    This distributions provides the following command-line utilities:

    *   list-chemical-elements

FUNCTIONS
  list_chemical_elements
    Usage:

     list_chemical_elements(%args) -> [$status_code, $reason, $payload, \%result_meta]

    List chemical elements.

    REPLACE ME

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   abundance_in_earth_crust => *str*

        Only return records where the 'abundance_in_earth_crust' field
        equals specified value.

    *   abundance_in_earth_crust.contains => *str*

        Only return records where the 'abundance_in_earth_crust' field
        contains specified text.

    *   abundance_in_earth_crust.in => *array[str]*

        Only return records where the 'abundance_in_earth_crust' field is in
        the specified values.

    *   abundance_in_earth_crust.is => *str*

        Only return records where the 'abundance_in_earth_crust' field
        equals specified value.

    *   abundance_in_earth_crust.isnt => *str*

        Only return records where the 'abundance_in_earth_crust' field does
        not equal specified value.

    *   abundance_in_earth_crust.max => *str*

        Only return records where the 'abundance_in_earth_crust' field is
        less than or equal to specified value.

    *   abundance_in_earth_crust.min => *str*

        Only return records where the 'abundance_in_earth_crust' field is
        greater than or equal to specified value.

    *   abundance_in_earth_crust.not_contains => *str*

        Only return records where the 'abundance_in_earth_crust' field does
        not contain specified text.

    *   abundance_in_earth_crust.not_in => *array[str]*

        Only return records where the 'abundance_in_earth_crust' field is
        not in the specified values.

    *   abundance_in_earth_crust.xmax => *str*

        Only return records where the 'abundance_in_earth_crust' field is
        less than specified value.

    *   abundance_in_earth_crust.xmin => *str*

        Only return records where the 'abundance_in_earth_crust' field is
        greater than specified value.

    *   atomic_number => *int*

        Only return records where the 'atomic_number' field equals specified
        value.

    *   atomic_number.in => *array[int]*

        Only return records where the 'atomic_number' field is in the
        specified values.

    *   atomic_number.is => *int*

        Only return records where the 'atomic_number' field equals specified
        value.

    *   atomic_number.isnt => *int*

        Only return records where the 'atomic_number' field does not equal
        specified value.

    *   atomic_number.max => *int*

        Only return records where the 'atomic_number' field is less than or
        equal to specified value.

    *   atomic_number.min => *int*

        Only return records where the 'atomic_number' field is greater than
        or equal to specified value.

    *   atomic_number.not_in => *array[int]*

        Only return records where the 'atomic_number' field is not in the
        specified values.

    *   atomic_number.xmax => *int*

        Only return records where the 'atomic_number' field is less than
        specified value.

    *   atomic_number.xmin => *int*

        Only return records where the 'atomic_number' field is greater than
        specified value.

    *   block => *str*

        Only return records where the 'block' field equals specified value.

    *   block.contains => *str*

        Only return records where the 'block' field contains specified text.

    *   block.in => *array[str]*

        Only return records where the 'block' field is in the specified
        values.

    *   block.is => *str*

        Only return records where the 'block' field equals specified value.

    *   block.isnt => *str*

        Only return records where the 'block' field does not equal specified
        value.

    *   block.max => *str*

        Only return records where the 'block' field is less than or equal to
        specified value.

    *   block.min => *str*

        Only return records where the 'block' field is greater than or equal
        to specified value.

    *   block.not_contains => *str*

        Only return records where the 'block' field does not contain
        specified text.

    *   block.not_in => *array[str]*

        Only return records where the 'block' field is not in the specified
        values.

    *   block.xmax => *str*

        Only return records where the 'block' field is less than specified
        value.

    *   block.xmin => *str*

        Only return records where the 'block' field is greater than
        specified value.

    *   boiling_point => *float*

        Only return records where the 'boiling_point' field equals specified
        value.

    *   boiling_point.in => *array[float]*

        Only return records where the 'boiling_point' field is in the
        specified values.

    *   boiling_point.is => *float*

        Only return records where the 'boiling_point' field equals specified
        value.

    *   boiling_point.isnt => *float*

        Only return records where the 'boiling_point' field does not equal
        specified value.

    *   boiling_point.max => *float*

        Only return records where the 'boiling_point' field is less than or
        equal to specified value.

    *   boiling_point.min => *float*

        Only return records where the 'boiling_point' field is greater than
        or equal to specified value.

    *   boiling_point.not_in => *array[float]*

        Only return records where the 'boiling_point' field is not in the
        specified values.

    *   boiling_point.xmax => *float*

        Only return records where the 'boiling_point' field is less than
        specified value.

    *   boiling_point.xmin => *float*

        Only return records where the 'boiling_point' field is greater than
        specified value.

    *   density => *float*

        Only return records where the 'density' field equals specified
        value.

    *   density.in => *array[float]*

        Only return records where the 'density' field is in the specified
        values.

    *   density.is => *float*

        Only return records where the 'density' field equals specified
        value.

    *   density.isnt => *float*

        Only return records where the 'density' field does not equal
        specified value.

    *   density.max => *float*

        Only return records where the 'density' field is less than or equal
        to specified value.

    *   density.min => *float*

        Only return records where the 'density' field is greater than or
        equal to specified value.

    *   density.not_in => *array[float]*

        Only return records where the 'density' field is not in the
        specified values.

    *   density.xmax => *float*

        Only return records where the 'density' field is less than specified
        value.

    *   density.xmin => *float*

        Only return records where the 'density' field is greater than
        specified value.

    *   detail => *bool* (default: 0)

        Return array of full records instead of just ID fields.

        By default, only the key (ID) field is returned per result entry.

    *   electronegativity => *float*

        Only return records where the 'electronegativity' field equals
        specified value.

    *   electronegativity.in => *array[float]*

        Only return records where the 'electronegativity' field is in the
        specified values.

    *   electronegativity.is => *float*

        Only return records where the 'electronegativity' field equals
        specified value.

    *   electronegativity.isnt => *float*

        Only return records where the 'electronegativity' field does not
        equal specified value.

    *   electronegativity.max => *float*

        Only return records where the 'electronegativity' field is less than
        or equal to specified value.

    *   electronegativity.min => *float*

        Only return records where the 'electronegativity' field is greater
        than or equal to specified value.

    *   electronegativity.not_in => *array[float]*

        Only return records where the 'electronegativity' field is not in
        the specified values.

    *   electronegativity.xmax => *float*

        Only return records where the 'electronegativity' field is less than
        specified value.

    *   electronegativity.xmin => *float*

        Only return records where the 'electronegativity' field is greater
        than specified value.

    *   eng_name => *str*

        Only return records where the 'eng_name' field equals specified
        value.

    *   eng_name.contains => *str*

        Only return records where the 'eng_name' field contains specified
        text.

    *   eng_name.in => *array[str]*

        Only return records where the 'eng_name' field is in the specified
        values.

    *   eng_name.is => *str*

        Only return records where the 'eng_name' field equals specified
        value.

    *   eng_name.isnt => *str*

        Only return records where the 'eng_name' field does not equal
        specified value.

    *   eng_name.max => *str*

        Only return records where the 'eng_name' field is less than or equal
        to specified value.

    *   eng_name.min => *str*

        Only return records where the 'eng_name' field is greater than or
        equal to specified value.

    *   eng_name.not_contains => *str*

        Only return records where the 'eng_name' field does not contain
        specified text.

    *   eng_name.not_in => *array[str]*

        Only return records where the 'eng_name' field is not in the
        specified values.

    *   eng_name.xmax => *str*

        Only return records where the 'eng_name' field is less than
        specified value.

    *   eng_name.xmin => *str*

        Only return records where the 'eng_name' field is greater than
        specified value.

    *   exclude_fields => *array[str]*

        Select fields to return.

    *   fields => *array[str]*

        Select fields to return.

    *   group => *str*

        Only return records where the 'group' field equals specified value.

    *   group.contains => *str*

        Only return records where the 'group' field contains specified text.

    *   group.in => *array[str]*

        Only return records where the 'group' field is in the specified
        values.

    *   group.is => *str*

        Only return records where the 'group' field equals specified value.

    *   group.isnt => *str*

        Only return records where the 'group' field does not equal specified
        value.

    *   group.max => *str*

        Only return records where the 'group' field is less than or equal to
        specified value.

    *   group.min => *str*

        Only return records where the 'group' field is greater than or equal
        to specified value.

    *   group.not_contains => *str*

        Only return records where the 'group' field does not contain
        specified text.

    *   group.not_in => *array[str]*

        Only return records where the 'group' field is not in the specified
        values.

    *   group.xmax => *str*

        Only return records where the 'group' field is less than specified
        value.

    *   group.xmin => *str*

        Only return records where the 'group' field is greater than
        specified value.

    *   ind_name => *str*

        Only return records where the 'ind_name' field equals specified
        value.

    *   ind_name.contains => *str*

        Only return records where the 'ind_name' field contains specified
        text.

    *   ind_name.in => *array[str]*

        Only return records where the 'ind_name' field is in the specified
        values.

    *   ind_name.is => *str*

        Only return records where the 'ind_name' field equals specified
        value.

    *   ind_name.isnt => *str*

        Only return records where the 'ind_name' field does not equal
        specified value.

    *   ind_name.max => *str*

        Only return records where the 'ind_name' field is less than or equal
        to specified value.

    *   ind_name.min => *str*

        Only return records where the 'ind_name' field is greater than or
        equal to specified value.

    *   ind_name.not_contains => *str*

        Only return records where the 'ind_name' field does not contain
        specified text.

    *   ind_name.not_in => *array[str]*

        Only return records where the 'ind_name' field is not in the
        specified values.

    *   ind_name.xmax => *str*

        Only return records where the 'ind_name' field is less than
        specified value.

    *   ind_name.xmin => *str*

        Only return records where the 'ind_name' field is greater than
        specified value.

    *   melting_point => *float*

        Only return records where the 'melting_point' field equals specified
        value.

    *   melting_point.in => *array[float]*

        Only return records where the 'melting_point' field is in the
        specified values.

    *   melting_point.is => *float*

        Only return records where the 'melting_point' field equals specified
        value.

    *   melting_point.isnt => *float*

        Only return records where the 'melting_point' field does not equal
        specified value.

    *   melting_point.max => *float*

        Only return records where the 'melting_point' field is less than or
        equal to specified value.

    *   melting_point.min => *float*

        Only return records where the 'melting_point' field is greater than
        or equal to specified value.

    *   melting_point.not_in => *array[float]*

        Only return records where the 'melting_point' field is not in the
        specified values.

    *   melting_point.xmax => *float*

        Only return records where the 'melting_point' field is less than
        specified value.

    *   melting_point.xmin => *float*

        Only return records where the 'melting_point' field is greater than
        specified value.

    *   name_origin => *str*

        Only return records where the 'name_origin' field equals specified
        value.

    *   name_origin.contains => *str*

        Only return records where the 'name_origin' field contains specified
        text.

    *   name_origin.in => *array[str]*

        Only return records where the 'name_origin' field is in the
        specified values.

    *   name_origin.is => *str*

        Only return records where the 'name_origin' field equals specified
        value.

    *   name_origin.isnt => *str*

        Only return records where the 'name_origin' field does not equal
        specified value.

    *   name_origin.max => *str*

        Only return records where the 'name_origin' field is less than or
        equal to specified value.

    *   name_origin.min => *str*

        Only return records where the 'name_origin' field is greater than or
        equal to specified value.

    *   name_origin.not_contains => *str*

        Only return records where the 'name_origin' field does not contain
        specified text.

    *   name_origin.not_in => *array[str]*

        Only return records where the 'name_origin' field is not in the
        specified values.

    *   name_origin.xmax => *str*

        Only return records where the 'name_origin' field is less than
        specified value.

    *   name_origin.xmin => *str*

        Only return records where the 'name_origin' field is greater than
        specified value.

    *   origin => *str*

        Only return records where the 'origin' field equals specified value.

    *   origin.contains => *str*

        Only return records where the 'origin' field contains specified
        text.

    *   origin.in => *array[str]*

        Only return records where the 'origin' field is in the specified
        values.

    *   origin.is => *str*

        Only return records where the 'origin' field equals specified value.

    *   origin.isnt => *str*

        Only return records where the 'origin' field does not equal
        specified value.

    *   origin.max => *str*

        Only return records where the 'origin' field is less than or equal
        to specified value.

    *   origin.min => *str*

        Only return records where the 'origin' field is greater than or
        equal to specified value.

    *   origin.not_contains => *str*

        Only return records where the 'origin' field does not contain
        specified text.

    *   origin.not_in => *array[str]*

        Only return records where the 'origin' field is not in the specified
        values.

    *   origin.xmax => *str*

        Only return records where the 'origin' field is less than specified
        value.

    *   origin.xmin => *str*

        Only return records where the 'origin' field is greater than
        specified value.

    *   period => *str*

        Only return records where the 'period' field equals specified value.

    *   period.contains => *str*

        Only return records where the 'period' field contains specified
        text.

    *   period.in => *array[str]*

        Only return records where the 'period' field is in the specified
        values.

    *   period.is => *str*

        Only return records where the 'period' field equals specified value.

    *   period.isnt => *str*

        Only return records where the 'period' field does not equal
        specified value.

    *   period.max => *str*

        Only return records where the 'period' field is less than or equal
        to specified value.

    *   period.min => *str*

        Only return records where the 'period' field is greater than or
        equal to specified value.

    *   period.not_contains => *str*

        Only return records where the 'period' field does not contain
        specified text.

    *   period.not_in => *array[str]*

        Only return records where the 'period' field is not in the specified
        values.

    *   period.xmax => *str*

        Only return records where the 'period' field is less than specified
        value.

    *   period.xmin => *str*

        Only return records where the 'period' field is greater than
        specified value.

    *   phase_at_rt => *str*

        Only return records where the 'phase_at_rt' field equals specified
        value.

    *   phase_at_rt.contains => *str*

        Only return records where the 'phase_at_rt' field contains specified
        text.

    *   phase_at_rt.in => *array[str]*

        Only return records where the 'phase_at_rt' field is in the
        specified values.

    *   phase_at_rt.is => *str*

        Only return records where the 'phase_at_rt' field equals specified
        value.

    *   phase_at_rt.isnt => *str*

        Only return records where the 'phase_at_rt' field does not equal
        specified value.

    *   phase_at_rt.max => *str*

        Only return records where the 'phase_at_rt' field is less than or
        equal to specified value.

    *   phase_at_rt.min => *str*

        Only return records where the 'phase_at_rt' field is greater than or
        equal to specified value.

    *   phase_at_rt.not_contains => *str*

        Only return records where the 'phase_at_rt' field does not contain
        specified text.

    *   phase_at_rt.not_in => *array[str]*

        Only return records where the 'phase_at_rt' field is not in the
        specified values.

    *   phase_at_rt.xmax => *str*

        Only return records where the 'phase_at_rt' field is less than
        specified value.

    *   phase_at_rt.xmin => *str*

        Only return records where the 'phase_at_rt' field is greater than
        specified value.

    *   queries => *array[str]*

        Search.

        This will search all searchable fields with one or more specified
        queries. Each query can be in the form of "-FOO" (dash prefix
        notation) to require that the fields do not contain specified
        string, or "/FOO/" to use regular expression. All queries must match
        if the "query_boolean" option is set to "and"; only one query should
        match if the "query_boolean" option is set to "or".

    *   query_boolean => *str* (default: "and")

        Whether records must match all search queries ('and') or just one
        ('or').

        If set to "and", all queries must match; if set to "or", only one
        query should match. See the "queries" option for more details on
        searching.

    *   random => *bool* (default: 0)

        Return records in random order.

    *   result_limit => *int*

        Only return a certain number of records.

    *   result_start => *int* (default: 1)

        Only return starting from the n'th record.

    *   sort => *array[str]*

        Order records according to certain field(s).

        A list of field names separated by comma. Each field can be prefixed
        with '-' to specify descending order instead of the default
        ascending.

    *   specific_heat_capacity => *float*

        Only return records where the 'specific_heat_capacity' field equals
        specified value.

    *   specific_heat_capacity.in => *array[float]*

        Only return records where the 'specific_heat_capacity' field is in
        the specified values.

    *   specific_heat_capacity.is => *float*

        Only return records where the 'specific_heat_capacity' field equals
        specified value.

    *   specific_heat_capacity.isnt => *float*

        Only return records where the 'specific_heat_capacity' field does
        not equal specified value.

    *   specific_heat_capacity.max => *float*

        Only return records where the 'specific_heat_capacity' field is less
        than or equal to specified value.

    *   specific_heat_capacity.min => *float*

        Only return records where the 'specific_heat_capacity' field is
        greater than or equal to specified value.

    *   specific_heat_capacity.not_in => *array[float]*

        Only return records where the 'specific_heat_capacity' field is not
        in the specified values.

    *   specific_heat_capacity.xmax => *float*

        Only return records where the 'specific_heat_capacity' field is less
        than specified value.

    *   specific_heat_capacity.xmin => *float*

        Only return records where the 'specific_heat_capacity' field is
        greater than specified value.

    *   standard_atomic_weight => *float*

        Only return records where the 'standard_atomic_weight' field equals
        specified value.

    *   standard_atomic_weight.in => *array[float]*

        Only return records where the 'standard_atomic_weight' field is in
        the specified values.

    *   standard_atomic_weight.is => *float*

        Only return records where the 'standard_atomic_weight' field equals
        specified value.

    *   standard_atomic_weight.isnt => *float*

        Only return records where the 'standard_atomic_weight' field does
        not equal specified value.

    *   standard_atomic_weight.max => *float*

        Only return records where the 'standard_atomic_weight' field is less
        than or equal to specified value.

    *   standard_atomic_weight.min => *float*

        Only return records where the 'standard_atomic_weight' field is
        greater than or equal to specified value.

    *   standard_atomic_weight.not_in => *array[float]*

        Only return records where the 'standard_atomic_weight' field is not
        in the specified values.

    *   standard_atomic_weight.xmax => *float*

        Only return records where the 'standard_atomic_weight' field is less
        than specified value.

    *   standard_atomic_weight.xmin => *float*

        Only return records where the 'standard_atomic_weight' field is
        greater than specified value.

    *   symbol => *str*

        Only return records where the 'symbol' field equals specified value.

    *   symbol.contains => *str*

        Only return records where the 'symbol' field contains specified
        text.

    *   symbol.in => *array[str]*

        Only return records where the 'symbol' field is in the specified
        values.

    *   symbol.is => *str*

        Only return records where the 'symbol' field equals specified value.

    *   symbol.isnt => *str*

        Only return records where the 'symbol' field does not equal
        specified value.

    *   symbol.max => *str*

        Only return records where the 'symbol' field is less than or equal
        to specified value.

    *   symbol.min => *str*

        Only return records where the 'symbol' field is greater than or
        equal to specified value.

    *   symbol.not_contains => *str*

        Only return records where the 'symbol' field does not contain
        specified text.

    *   symbol.not_in => *array[str]*

        Only return records where the 'symbol' field is not in the specified
        values.

    *   symbol.xmax => *str*

        Only return records where the 'symbol' field is less than specified
        value.

    *   symbol.xmin => *str*

        Only return records where the 'symbol' field is greater than
        specified value.

    *   with_field_names => *bool*

        Return field names in each record (as hash/associative array).

        When enabled, function will return each record as hash/associative
        array (field name => value pairs). Otherwise, function will return
        each record as list/array (field value, field value, ...).

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-ChemistryUtils>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-App-ChemistryUtils>.

SEE ALSO
AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR,
    Pod::Weaver::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla- and/or Pod::Weaver plugins. Any additional steps
    required beyond that are considered a bug and can be reported to me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2023 by perlancar <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-ChemistryUtils>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

