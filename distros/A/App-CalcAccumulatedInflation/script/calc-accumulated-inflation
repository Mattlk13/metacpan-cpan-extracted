#!perl

# Note: This script is a CLI for Riap function /App/CalcAccumulatedInflation/calc_accumulated_inflation
# and generated automatically using Perinci::CmdLine::Gen version 0.499

our $AUTHORITY = 'cpan:PERLANCAR'; # AUTHORITY
our $DATE = '2021-07-17'; # DATE
our $DIST = 'App-CalcAccumulatedInflation'; # DIST
our $VERSION = '0.052'; # VERSION

use 5.010001;
use strict;
use warnings;

use Perinci::CmdLine::Any;

my $cmdline = Perinci::CmdLine::Any->new(
    url => "/App/CalcAccumulatedInflation/calc_accumulated_inflation",
    program_name => "calc-accumulated-inflation",
);

$cmdline->run;

# ABSTRACT: Calculate accumulated inflation (or savings rate, etc) over the years
# PODNAME: calc-accumulated-inflation

__END__

=pod

=encoding UTF-8

=head1 NAME

calc-accumulated-inflation - Calculate accumulated inflation (or savings rate, etc) over the years

=head1 VERSION

This document describes version 0.052 of calc-accumulated-inflation (from Perl distribution App-CalcAccumulatedInflation), released on 2021-07-17.

=head1 SYNOPSIS

Usage:

% B<calc-accumulated-inflation> [B<--base-index>=I<float>] [B<--base-year>=I<float>] [B<--config-path>=I<path>|B<-c>|B<--no-config>|B<-C>] [B<--config-profile>=I<profile>|B<-P>] [B<--format>=I<name>|B<--json>] [B<--(no)naked-res>] [B<--no-env>] [B<--page-result>[=I<program>]|B<--view-result>[=I<program>]] [(B<--rates>=I<float>)+] [B<--yearly-rate>=I<float>] [B<--years>=I<int>] [B<--rates-json>=I<json>] [B<-y>=I<float>]

Examples:

See accumulated 6%/year inflation for 10 years:

 % calc-accumulated-inflation --yearly-rate 6
 +--------+------+
 | index  | year |
 +--------+------+
 | 1      | 0    |
 | 1.0600 | 1    |
 | 1.1236 | 2    |
 | 1.1910 | 3    |
 | 1.2625 | 4    |
 | 1.3382 | 5    |
 | 1.4185 | 6    |
 | 1.5036 | 7    |
 | 1.5938 | 8    |
 | 1.6895 | 9    |
 | 1.7908 | 10   |
 +--------+------+

See accumulated 5.5%/year inflation for 7 years:

 % calc-accumulated-inflation --yearly-rate 5.5 --years 7
 +--------+------+
 | index  | year |
 +--------+------+
 | 1      | 0    |
 | 1.0550 | 1    |
 | 1.1130 | 2    |
 | 1.1742 | 3    |
 | 1.2388 | 4    |
 | 1.3070 | 5    |
 | 1.3788 | 6    |
 | 1.4547 | 7    |
 +--------+------+

Indonesia's inflation rate for 2003-2014:

 % calc-accumulated-inflation --rates 5.16,6.4,17.11,6.6,6.59,11.06,2.78,6.96,3.79,4.3,8.38,8.36
 +--------+--------+------+
 | index  | rate   | year |
 +--------+--------+------+
 | 1      |        | 0    |
 | 1.0516 | 5.16%  | 1    |
 | 1.1189 | 6.40%  | 2    |
 | 1.3103 | 17.11% | 3    |
 | 1.3968 | 6.60%  | 4    |
 | 1.4889 | 6.59%  | 5    |
 | 1.6536 | 11.06% | 6    |
 | 1.6995 | 2.78%  | 7    |
 | 1.8178 | 6.96%  | 8    |
 | 1.8867 | 3.79%  | 9    |
 | 1.9678 | 4.30%  | 10   |
 | 2.1327 | 8.38%  | 11   |
 | 2.3110 | 8.36%  | 12   |
 +--------+--------+------+

How much will your $100,000 grow over the next 10 years, if the savings rate is 4%; assuming this year is 2021:

 % calc-accumulated-inflation --base-index 100000 --base-year 2021 --yearly-rate 4 --years 10
 +-------------+------+
 | index       | year |
 +-------------+------+
 | 100000      | 2021 |
 | 104000.0000 | 2022 |
 | 108160.0000 | 2023 |
 | 112486.4000 | 2024 |
 | 116985.8560 | 2025 |
 | 121665.2902 | 2026 |
 | 126531.9018 | 2027 |
 | 131593.1779 | 2028 |
 | 136856.9050 | 2029 |
 | 142331.1812 | 2030 |
 | 148024.4285 | 2031 |
 +-------------+------+

=head1 DESCRIPTION

This routine generates a table of accumulated inflation over a period of several
years. You can either specify a fixed rate for every years (C<yearly_rate>), or
specify each year's rates (C<rates>). You can also optionally set base index
(default to 1) and base year (default to 0).

=head1 OPTIONS

C<*> marks required options.

=head2 Main options

=over

=item B<--base-index>=I<s>

Default value:

 1

=item B<--base-year>=I<s>

Default value:

 0

=item B<--rates-json>=I<s>

Different rates for each year, in percent (JSON-encoded).

See C<--rates>.

=item B<--rates>=I<s@>

Different rates for each year, in percent.

Can be specified multiple times.

=item B<--yearly-rate>=I<s>, B<-y>

A single rate for every year, in percent.

=item B<--years>=I<s>

Default value:

 10

=back

=head2 Configuration options

=over

=item B<--config-path>=I<s>, B<-c>

Set path to configuration file.

=item B<--config-profile>=I<s>, B<-P>

Set configuration profile to use.

=item B<--no-config>, B<-C>

Do not use any configuration file.

=back

=head2 Environment options

=over

=item B<--no-env>

Do not read environment for default options.

=back

=head2 Output options

=over

=item B<--format>=I<s>

Choose output format, e.g. json, text.

Default value:

 undef

=item B<--json>

Set output format to json.

=item B<--naked-res>

When outputing as JSON, strip result envelope.

Default value:

 0

By default, when outputing as JSON, the full enveloped result is returned, e.g.:

    [200,"OK",[1,2,3],{"func.extra"=>4}]

The reason is so you can get the status (1st element), status message (2nd
element) as well as result metadata/extra result (4th element) instead of just
the result (3rd element). However, sometimes you want just the result, e.g. when
you want to pipe the result for more post-processing. In this case you can use
`--naked-res` so you just get:

    [1,2,3]


=item B<--page-result>

Filter output through a pager.

=item B<--view-result>

View output using a viewer.

=back

=head2 Other options

=over

=item B<--help>, B<-h>, B<-?>

Display help message and exit.

=item B<--version>, B<-v>

Display program's version and exit.

=back

=head1 COMPLETION

This script has shell tab completion capability with support for several
shells.

=head2 bash

To activate bash completion for this script, put:

 complete -C calc-accumulated-inflation calc-accumulated-inflation

in your bash startup (e.g. F<~/.bashrc>). Your next shell session will then
recognize tab completion for the command. Or, you can also directly execute the
line above in your shell to activate immediately.

It is recommended, however, that you install modules using L<cpanm-shcompgen>
which can activate shell completion for scripts immediately.

=head2 tcsh

To activate tcsh completion for this script, put:

 complete calc-accumulated-inflation 'p/*/`calc-accumulated-inflation`/'

in your tcsh startup (e.g. F<~/.tcshrc>). Your next shell session will then
recognize tab completion for the command. Or, you can also directly execute the
line above in your shell to activate immediately.

It is also recommended to install L<shcompgen> (see above).

=head2 other shells

For fish and zsh, install L<shcompgen> as described above.

=head1 CONFIGURATION FILE

This script can read configuration files. Configuration files are in the format of L<IOD>, which is basically INI with some extra features.

By default, these names are searched for configuration filenames (can be changed using C<--config-path>): F<~/.config/calc-accumulated-inflation.conf>, F<~/calc-accumulated-inflation.conf>, or F</etc/calc-accumulated-inflation.conf>.

All found files will be read and merged.

To disable searching for configuration files, pass C<--no-config>.

You can put multiple profiles in a single file by using section names like C<[profile=SOMENAME]> or C<[SOMESECTION profile=SOMENAME]>. Those sections will only be read if you specify the matching C<--config-profile SOMENAME>.

You can also put configuration for multiple programs inside a single file, and use filter C<program=NAME> in section names, e.g. C<[program=NAME ...]> or C<[SOMESECTION program=NAME]>. The section will then only be used when the reading program matches.

You can also filter a section by environment variable using the filter C<env=CONDITION> in section names. For example if you only want a section to be read if a certain environment variable is true: C<[env=SOMEVAR ...]> or C<[SOMESECTION env=SOMEVAR ...]>. If you only want a section to be read when the value of an environment variable equals some string: C<[env=HOSTNAME=blink ...]> or C<[SOMESECTION env=HOSTNAME=blink ...]>. If you only want a section to be read when the value of an environment variable does not equal some string: C<[env=HOSTNAME!=blink ...]> or C<[SOMESECTION env=HOSTNAME!=blink ...]>. If you only want a section to be read when the value of an environment variable includes some string: C<[env=HOSTNAME*=server ...]> or C<[SOMESECTION env=HOSTNAME*=server ...]>. If you only want a section to be read when the value of an environment variable does not include some string: C<[env=HOSTNAME!*=server ...]> or C<[SOMESECTION env=HOSTNAME!*=server ...]>. Note that currently due to simplistic parsing, there must not be any whitespace in the value being compared because it marks the beginning of a new section filter or section name.

To load and configure plugins, you can use either the C<-plugins> parameter (e.g. C<< -plugins=DumpArgs >> or C<< -plugins=DumpArgs@before_validate_args >>), or use the C<[plugin=NAME ...]> sections, for example:

 [plugin=DumpArgs]
 -event=before_validate_args
 -prio=99
 
 [plugin=Foo]
 -event=after_validate_args
 arg1=val1
 arg2=val2

 

which is equivalent to setting C<< -plugins=-DumpArgs@before_validate_args@99,-Foo@after_validate_args,arg1,val1,arg2,val2 >>.

List of available configuration parameters:

 base_index (see --base-index)
 base_year (see --base-year)
 format (see --format)
 naked_res (see --naked-res)
 rates (see --rates)
 yearly_rate (see --yearly-rate)
 years (see --years)

=head1 ENVIRONMENT

=head2 CALC_ACCUMULATED_INFLATION_OPT => str

Specify additional command-line options.

=head1 FILES

F<~/.config/calc-accumulated-inflation.conf>

F<~/calc-accumulated-inflation.conf>

F</etc/calc-accumulated-inflation.conf>

=head1 HOMEPAGE

Please visit the project's homepage at L<https://metacpan.org/release/App-CalcAccumulatedInflation>.

=head1 SOURCE

Source repository is at L<https://github.com/perlancar/perl-App-CalcAccumulatedInflation>.

=head1 BUGS

Please report any bugs or feature requests on the bugtracker website L<https://rt.cpan.org/Public/Dist/Display.html?Name=App-CalcAccumulatedInflation>

When submitting a bug or request, please include a test-file or a
patch to an existing test-file that illustrates the bug or desired
feature.

=head1 AUTHOR

perlancar <perlancar@cpan.org>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2021, 2019, 2017, 2015 by perlancar@cpan.org.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut
