NAME
    App::cpanmodules - The Acme::CPANModules CLI

VERSION
    This document describes version 0.007 of App::cpanmodules (from Perl
    distribution App-cpanmodules), released on 2023-06-17.

SYNOPSIS
    Use the included script cpanmodules.

OBSERVED CPANMODULES PROPERTIES/ATTRIBUTES
  x.app.cpanmodules.show_entries
    Boolean. Default is true. If set to false, will not show entries in the
    generated POD's Description.

FUNCTIONS
  get_acmemod
    Usage:

     get_acmemod(%args) -> [$status_code, $reason, $payload, \%result_meta]

    Get contents of an Acme::CPANModules module.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   module* => *perl::modname*

        (No description)

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

  list_acmemods
    Usage:

     list_acmemods(%args) -> [$status_code, $reason, $payload, \%result_meta]

    List all installed Acme::CPANModules modules.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   detail => *bool*

        (No description)

    *   mentions => *perl::modname*

        (No description)

    *   module => *perl::modname*

        (No description)

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

  list_entries
    Usage:

     list_entries(%args) -> [$status_code, $reason, $payload, \%result_meta]

    List entries from an Acme::CPANModules module.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   detail => *bool*

        (No description)

    *   module* => *perl::modname*

        (No description)

    *   with_attrs => *array[str]*

        Include additional attributes from each entry.

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

  view_acmemod
    Usage:

     view_acmemod(%args) -> [$status_code, $reason, $payload, \%result_meta]

    View an Acme::CPANModules module as rendered POD.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   module* => *perl::modname*

        (No description)

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-cpanmodules>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-App-cpanmodules>.

SEE ALSO
    Acme::CPANModules

    App::CPANModulesUtils provides some other CLI's related to
    Acme::CPANModules.

    lcpan also has some subcommands (supplied by
    App::lcpan::CmdBundle::cpanmodules) to query Acme::CPANModules modules.

    App::CPANAuthorsUtils for Acme::CPANAuthors

    TableData::Acme::CPANModules

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR,
    Pod::Weaver::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla- and/or Pod::Weaver plugins. Any additional steps
    required beyond that are considered a bug and can be reported to me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2023, 2020, 2019, 2018 by perlancar
    <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-cpanmodules>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

