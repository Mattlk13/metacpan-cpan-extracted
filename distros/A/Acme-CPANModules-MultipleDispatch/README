NAME
    Acme::CPANModules::MultipleDispatch - List of modules to do smart
    matching

VERSION
    This document describes version 0.001 of
    Acme::CPANModules::MultipleDispatch (from Perl distribution
    Acme-CPANModules-MultipleDispatch), released on 2024-07-01.

DESCRIPTION
    About multiple dispatch

    Multiple dispatch is a technique where you can define /multiple/
    functions (or methods) of the same name but with different signatures
    (e.g. different type of arguments, different number of arguments) and
    the runtime will choose (/dispatch/) the correct function by matching
    the signature of the caller to that of the defined functions.

    This technique has several benefits, mostly simplifying user code
    particularly when dealing with different types/arguments, because you
    are deferring the checks to the runtime. For example, if you create a
    function to concat two strings:

     function combine(Str a, Str b) {
         a + b;
     }

    and later wants to support some other types, instead of peppering the
    original function with "if" statements, you can just supply additional
    functions with the same name but with different arguments you want to
    support:

     function combine(Num a, Num b) {
         a.as_str() + b.as_str();
     }
 
     function combine(File a, File b) {
         a.open().read() + b.open().read();
     }

    Some languages, particularly strongly-typed ones, support multiple
    dispatch: Julia, C#, Common Lisp, Groovy. Raku (Perl 6) also supports
    multiple dispatch.

    Perl 5 does not. But some modules will allow you to fake it.

    Modules

    Multi::Dispatch. By DCONWAY.

    Dios. Also by DCONWAY. An object system which supports multiple
    dispatch.

    Class::Multimethods. Older module by DCONWAY.

    Keywords

    multi dispatch, multisub, multimethod.

ACME::CPANMODULES ENTRIES
    Multi::Dispatch
        Author: DCONWAY <https://metacpan.org/author/DCONWAY>

    Dios
        Author: DCONWAY <https://metacpan.org/author/DCONWAY>

    Class::Multimethods
        Author: DCONWAY <https://metacpan.org/author/DCONWAY>

FAQ
  What is an Acme::CPANModules::* module?
    An Acme::CPANModules::* module, like this module, contains just a list
    of module names that share a common characteristics. It is a way to
    categorize modules and document CPAN. See Acme::CPANModules for more
    details.

  What are ways to use this Acme::CPANModules module?
    Aside from reading this Acme::CPANModules module's POD documentation,
    you can install all the listed modules (entries) using cpanm-cpanmodules
    script (from App::cpanm::cpanmodules distribution):

     % cpanm-cpanmodules -n MultipleDispatch

    Alternatively you can use the cpanmodules CLI (from App::cpanmodules
    distribution):

        % cpanmodules ls-entries MultipleDispatch | cpanm -n

    or Acme::CM::Get:

        % perl -MAcme::CM::Get=MultipleDispatch -E'say $_->{module} for @{ $LIST->{entries} }' | cpanm -n

    or directly:

        % perl -MAcme::CPANModules::MultipleDispatch -E'say $_->{module} for @{ $Acme::CPANModules::MultipleDispatch::LIST->{entries} }' | cpanm -n

    This Acme::CPANModules module also helps lcpan produce a more meaningful
    result for "lcpan related-mods" command when it comes to finding related
    modules for the modules listed in this Acme::CPANModules module. See
    App::lcpan::Cmd::related_mods for more details on how "related modules"
    are found.

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/Acme-CPANModules-MultipleDispatch>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-Acme-CPANModules-MultipleDispatch>.

SEE ALSO
    Bencher::ScenarioBundle::SmartMatch

    Acme::CPANModules - about the Acme::CPANModules namespace

    cpanmodules - CLI tool to let you browse/view the lists

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR,
    Pod::Weaver::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla- and/or Pod::Weaver plugins. Any additional steps
    required beyond that are considered a bug and can be reported to me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2024 by perlancar <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=Acme-CPANModules-Mult
    ipleDispatch>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

