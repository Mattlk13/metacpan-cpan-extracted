NAME
    App::pod2wp - Publish POD document to WordPress as blog post

VERSION
    This document describes version 0.005 of App::pod2wp (from Perl
    distribution App-pod2wp), released on 2021-05-25.

FUNCTIONS
  pod2wp
    Usage:

     pod2wp(%args) -> [$status_code, $reason, $payload, \%result_meta]

    Publish POD document to WordPress as blog post.

    This is like org2wp except that instead of Org as the document format,
    this program uses POD.

    To use this program, first create "~/pod2wp.conf" containing the API
    credentials, e.g.:

     proxy=https://YOURBLOGNAME.wordpress.com/xmlrpc.php
     username=YOURUSERNAME
     password=YOURPASSWORD

    You can also put multiple credentials in the configuration file using
    profile sections, e.g.:

     [profile=blog1]
     proxy=https://YOURBLOG1NAME.wordpress.com/xmlrpc.php
     username=YOURUSERNAME
     password=YOURPASSWORD
 
     [profile=blog2]
     proxy=https://YOURBLOG2NAME.wordpress.com/xmlrpc.php
     username=YOURUSERNAME
     password=YOURPASSWORD

    and specify which profile you want using command-line option e.g.
    "--config-profile blog1".

    To create a blog post, write your POD document (e.g. in "post1.pod")
    using this format:

     =for pod2wp TITLE: Blog post title
 
     =for pod2wp CATEGORY: cat1, cat2
 
     =for pod2wp TAGS: tag1,tag2,tag3
 
     =head1 Some header
 
     Text of your post ...
     ...

    then:

     % pod2wp post1.pod

    this will create a draft post. To publish directly:

     % pod2wp --publish post1.pod

    Note that this will also modify your POD file and insert this paragraph
    at the top:

     =for pod2wp POSTID: 1234

    where 1234 is the post ID retrieved from the server when creating the
    post.

    After the post is created, you can update using the same command:

     % pod2wp post1.pod

    You can use "--publish" to publish the post, or "--no-publish" to revert
    it to draft.

    To set more attributes:

     % pod2wp post1.pod --comment-status open \
         --extra-attr ping_status=closed --extra-attr sticky=1

    Another example, to schedule a post in the future:

     % pod2wp post1.pod --schedule 20301225T00:00:00

    This function is not exported.

    This function supports dry-run operation.

    Arguments ('*' denotes required arguments):

    *   comment_status => *str* (default: "closed")

        Whether to allow comments (open) or not (closed).

    *   extra_attrs => *hash*

        Set extra post attributes, e.g. ping_status, post_format, etc.

    *   filename* => *filename*

        Path to POD document to publish.

    *   password* => *str*

    *   proxy* => *str*

        Example: C<https://YOURBLOGNAME.wordpress.com/xmlrpc.php>.

    *   publish => *bool*

        Whether to publish post or make it a draft.

        Equivalent to "--extra-attr post_status=published", while
        "--no-publish" is equivalent to "--extra-attr post_status=draft".

    *   schedule => *date*

        Schedule post to be published sometime in the future.

        Equivalent to "--publish --extra-attr post_date=DATE". Note that
        WordPress accepts date in the "YYYYMMDD"T"HH:MM:SS" format, but you
        specify this option in regular ISO8601 format. Also note that time
        is in your chosen local timezone setting.

    *   username* => *str*

    Special arguments:

    *   -dry_run => *bool*

        Pass -dry_run=>1 to enable simulation mode.

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP status code
    (200 means OK, 4xx caller error, 5xx function error). Second element
    ($reason) is a string containing error message, or "OK" if status is
    200. Third element ($payload) is optional, the actual result. Fourth
    element (%result_meta) is called result metadata and is optional, a hash
    that contains extra information.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-pod2wp>.

SOURCE
    Source repository is at <https://github.com/perlancar/perl-App-pod2wp>.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-pod2wp>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

AUTHOR
    perlancar <perlancar@cpan.org>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2021, 2017, 2016 by perlancar@cpan.org.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

