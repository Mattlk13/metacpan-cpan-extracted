NAME
    App::FireDiamondUtils - Utilities related to fire diamond (NFPA 704
    standard)

VERSION
    This document describes version 0.003 of App::FireDiamondUtils (from
    Perl distribution App-FireDiamondUtils), released on 2023-03-29.

DESCRIPTION
    This distributions provides the following command-line utilities:

    *   explain-fire-diamond-text-notation

    *   parse-fire-diamond-text-notation

    *   show-fire-diamond-legends

FUNCTIONS
  explain_fire_diamond_text_notation
    Usage:

     explain_fire_diamond_text_notation(%args) -> [$status_code, $reason, $payload, \%result_meta]

    Explain fire diamond text notation in several ways.

    Examples:

    *   Show fire diamond for sulfuric acid in highlighted table style:

         explain_fire_diamond_text_notation(notation => "H3/F0/R2/W+OX"); # -> [200, undef, undef, {}]

    *   Show fire diamond for sulfuric acid in table style:

         explain_fire_diamond_text_notation(notation => "H3/F0/R2/W+OX", style => "table"); # -> [200, undef, undef, {}]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   notation* => *str*

        (No description)

    *   style => *str* (default: "highlighted-table")

        (No description)

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

  show_fire_diamond_legends
    Usage:

     show_fire_diamond_legends(%args) -> [$status_code, $reason, $payload, \%result_meta]

    Show a table that explains the meaning of each number and symbol in the
    Fire Diamond notation.

    Examples:

    *   Show the short table:

         show_fire_diamond_legends(); # -> [200, undef, undef, {}]

    *   Show the long/verbose table:

         show_fire_diamond_legends(detail => 1); # -> [200, undef, undef, {}]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   detail => *bool*

        Show the longer explanation instead of just the meaning.

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-FireDiamondUtils>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-App-FireDiamondUtils>.

SEE ALSO
AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR,
    Pod::Weaver::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla- and/or Pod::Weaver plugins. Any additional steps
    required beyond that are considered a bug and can be reported to me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2023 by perlancar <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-FireDiamondUtils>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

