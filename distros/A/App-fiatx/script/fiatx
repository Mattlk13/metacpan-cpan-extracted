#!perl

use 5.010001;
use strict;
use warnings;

our $DATE = '2018-06-27'; # DATE
our $VERSION = '0.007'; # VERSION

use Perinci::CmdLine::Any;

my $prefix = '/App/fiatx/';

Perinci::CmdLine::Any->new(
    url => $prefix,
    log => 1,
    subcommands => {
        'spot-rates'     => {url => "${prefix}spot_rates"},
        'sources'        => {url => "${prefix}sources"},
    },
)->run;

# ABSTRACT: Fiat currency exchange rate tool
# PODNAME: fiatx

__END__

=pod

=encoding UTF-8

=head1 NAME

fiatx - Fiat currency exchange rate tool

=head1 VERSION

This document describes version 0.007 of fiatx (from Perl distribution App-fiatx), released on 2018-06-27.

=head1 SYNOPSIS

First, create a MySQL database e.g. C<fiatx>. Then in F<~/.config/fiatx.conf>:

 db_name=fiatx
 ; the app can also look for passwords in my.cnf
 ; db_username=...
 ; db_password=...

To see all conversion rates for all pairs and all sources (possible huge list
and takes a long time):

 % fiatx spot-rates

To see conversion rates for all pairs from a single source e.g. C<bca> (note:
not all sources might support this):

 % fiatx spot-rates bca

To list available sources:

 % fiatx sources

To see conversion rates for a single pair and type from a single source e.g.
C<bca>:

 % fiatx spot-rates bca USD/IDR sell

By default result is cached in database for a few hours. To force fetching from
remote source again:

 % fiatx spot-rate bca USD/IDR sell --no-cache

To get another type:

 % fiatx spot-rate bca USD/IDR buy

To get highest/lowest rate of all sources:

 % fiatx spot-rate :highest USD/IDR
 % fiatx spot-rate :lowest  USD/IDR

To get rate from source with the newest/oldest update:

 % fiatx spot-rate :newest USD/IDR
 % fiatx spot-rate :oldest USD/IDR

To get rate averaged from several sources:

 % fiatx spot-rate :average USD/IDR

For more details, use C<fiatx --help> or consult documentation.

=head1 DESCRIPTION

=head1 SUBCOMMANDS

=head2 B<sources>

List available sources.

=head2 B<spot-rates>

Get spot (latest) rate(s) from a source.

=head1 OPTIONS

C<*> marks required options.

=head2 Common options

=over

=item B<--config-path>=I<filename>

Set path to configuration file.

Can be specified multiple times.

=item B<--config-profile>=I<s>

Set configuration profile to use.

=item B<--debug>

Shortcut for --log-level=debug.

=item B<--format>=I<s>

Choose output format, e.g. json, text.

Default value:

 undef

=item B<--help>, B<-h>, B<-?>

Display help message and exit.

=item B<--json>

Set output format to json.

=item B<--log-level>=I<s>

Set log level.

=item B<--naked-res>

When outputing as JSON, strip result envelope.

Default value:

 0

By default, when outputing as JSON, the full enveloped result is returned, e.g.:

    [200,"OK",[1,2,3],{"func.extra"=>4}]

The reason is so you can get the status (1st element), status message (2nd
element) as well as result metadata/extra result (4th element) instead of just
the result (3rd element). However, sometimes you want just the result, e.g. when
you want to pipe the result for more post-processing. In this case you can use
`--naked-res` so you just get:

    [1,2,3]


=item B<--no-config>

Do not use any configuration file.

=item B<--no-env>

Do not read environment for default options.

=item B<--quiet>

Shortcut for --log-level=error.

=item B<--subcommands>

List available subcommands.

=item B<--trace>

Shortcut for --log-level=trace.

=item B<--verbose>

Shortcut for --log-level=info.

=item B<--version>, B<-v>

Display program's version and exit.

=back

=head2 Options for subcommand spot-rates

=over

=item B<--db-name>=I<s>*

=item B<--db-password>=I<s>

=item B<--db-username>=I<s>

=item B<--max-age-cache>=I<s>

Above this age (in seconds), we retrieve rate from remote source again.

Default value:

 14400

=item B<--no-cache>

Alias for --max-age-cache 0.

See C<--max-age-cache>.

=item B<--pair>=I<s>

=item B<--per-type>

Return one row of result per rate type.

This allow seeing notes and different mtime per rate type, which can be
different between different types of the same source.


=item B<--source>=I<s>

Ask for a specific remote source.

Default value:

 ":all"

If you want a specific remote source, you can specify it here. The default is
':any' which is to pick the first source that returns a recent enough current
rate.

Other special values: `:highest` to return highest rate of all sources,
`:lowest` to return lowest rate of all sources, ':newest' to return rate from
source with the newest last update time, ':oldest' to return rate from source
with the oldest last update time, ':average' to return arithmetic average of all
sources.


=item B<--type>=I<s>

Which rate is wanted? e.g. sell, buy.

=back

=head1 COMPLETION

This script has shell tab completion capability with support for several
shells.

=head2 bash

To activate bash completion for this script, put:

 complete -C fiatx fiatx

in your bash startup (e.g. F<~/.bashrc>). Your next shell session will then
recognize tab completion for the command. Or, you can also directly execute the
line above in your shell to activate immediately.

It is recommended, however, that you install modules using L<cpanm-shcompgen>
which can activate shell completion for scripts immediately.

=head2 tcsh

To activate tcsh completion for this script, put:

 complete fiatx 'p/*/`fiatx`/'

in your tcsh startup (e.g. F<~/.tcshrc>). Your next shell session will then
recognize tab completion for the command. Or, you can also directly execute the
line above in your shell to activate immediately.

It is also recommended to install L<shcompgen> (see above).

=head2 other shells

For fish and zsh, install L<shcompgen> as described above.

=head1 CONFIGURATION FILE

This script can read configuration files. Configuration files are in the format of L<IOD>, which is basically INI with some extra features.

By default, these names are searched for configuration filenames (can be changed using C<--config-path>): F<~/.config/fiatx.conf>, F<~/fiatx.conf>, or F</etc/fiatx.conf>.

All found files will be read and merged.

To disable searching for configuration files, pass C<--no-config>.

To put configuration for a certain subcommand only, use a section name like C<[subcommand=NAME]> or C<[SOMESECTION subcommand=NAME]>.

You can put multiple profiles in a single file by using section names like C<[profile=SOMENAME]> or C<[SOMESECTION profile=SOMENAME]> or C<[subcommand=SUBCOMMAND_NAME profile=SOMENAME]> or C<[SOMESECTION subcommand=SUBCOMMAND_NAME profile=SOMENAME]>. Those sections will only be read if you specify the matching C<--config-profile SOMENAME>.

You can also put configuration for multiple programs inside a single file, and use filter C<program=NAME> in section names, e.g. C<[program=NAME ...]> or C<[SOMESECTION program=NAME]>. The section will then only be used when the reading program matches.

Finally, you can filter a section by environment variable using the filter C<env=CONDITION> in section names. For example if you only want a section to be read if a certain environment variable is true: C<[env=SOMEVAR ...]> or C<[SOMESECTION env=SOMEVAR ...]>. If you only want a section to be read when the value of an environment variable has value equals something: C<[env=HOSTNAME=blink ...]> or C<[SOMESECTION env=HOSTNAME=blink ...]>. If you only want a section to be read when the value of an environment variable does not equal something: C<[env=HOSTNAME!=blink ...]> or C<[SOMESECTION env=HOSTNAME!=blink ...]>. If you only want a section to be read when an environment variable contains something: C<[env=HOSTNAME*=server ...]> or C<[SOMESECTION env=HOSTNAME*=server ...]>. Note that currently due to simplistic parsing, there must not be any whitespace in the value being compared because it marks the beginning of a new section filter or section name.

List of available configuration parameters:

=head2 Common for all subcommands

 format (see --format)
 log_level (see --log-level)
 naked_res (see --naked-res)

=head2 Configuration for subcommand sources


=head2 Configuration for subcommand spot-rates

 db_name (see --db-name)
 db_password (see --db-password)
 db_username (see --db-username)
 max_age_cache (see --max-age-cache)
 pair (see --pair)
 per_type (see --per-type)
 source (see --source)
 type (see --type)

=head1 ENVIRONMENT

=head2 FIATX_OPT => str

Specify additional command-line options.

=head1 FILES

F<~/.config/fiatx.conf>

F<~/fiatx.conf>

F</etc/fiatx.conf>

=head1 HOMEPAGE

Please visit the project's homepage at L<https://metacpan.org/release/App-fiatx>.

=head1 SOURCE

Source repository is at L<https://github.com/perlancar/perl-App-fiatx>.

=head1 BUGS

Please report any bugs or feature requests on the bugtracker website L<https://rt.cpan.org/Public/Dist/Display.html?Name=App-fiatx>

When submitting a bug or request, please include a test-file or a
patch to an existing test-file that illustrates the bug or desired
feature.

=head1 AUTHOR

perlancar <perlancar@cpan.org>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2018 by perlancar@cpan.org.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut
