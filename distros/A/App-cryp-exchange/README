NAME
    App::cryp::exchange - Interact with cryptoexchanges using a common
    interface

VERSION
    This document describes version 0.009 of App::cryp::exchange (from Perl
    distribution App-cryp-exchange), released on 2018-06-13.

SYNOPSIS
    Please see included script cryp-exchange.

FUNCTIONS
  accounts
    Usage:

     accounts(%args) -> [status, msg, result, meta]

    List exchange accounts.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   detail => *bool*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  balance
    Usage:

     balance(%args) -> [status, msg, result, meta]

    List account balance.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   account* => *cryptoexchange::account*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  cancel_order
    Usage:

     cancel_order(%args) -> [status, msg, result, meta]

    Cancel an order.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   account* => *cryptoexchange::account*

    *   order_id* => *str*

    *   pair* => *str*

    *   type* => *str*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  create_limit_order
    Usage:

     create_limit_order(%args) -> [status, msg, result, meta]

    Create a limit order.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   account* => *cryptoexchange::account*

    *   base_size => *float*

        Order amount, denominated in base currency (first currency of the
        pair).

    *   pair* => *str*

    *   price* => *float*

    *   quote_size => *float*

        Order amount, denominated in quote currency (second currency of the
        pair).

    *   type* => *str*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  exchanges
    Usage:

     exchanges(%args) -> [status, msg, result, meta]

    List supported exchanges.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   detail => *bool*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  get_order
    Usage:

     get_order(%args) -> [status, msg, result, meta]

    Get information about an order.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   account* => *cryptoexchange::account*

    *   order_id* => *str*

    *   pair* => *str*

    *   type* => *str*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  open_orders
    Usage:

     open_orders(%args) -> [status, msg, result, meta]

    List open orders.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   account* => *cryptoexchange::account*

    *   pair => *str*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  orderbook
    Usage:

     orderbook(%args) -> [status, msg, result, meta]

    Get order book on an exchange.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   account* => *cryptoexchange::account*

    *   pair* => *str*

    *   type => *str*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  pairs
    Usage:

     pairs(%args) -> [status, msg, result, meta]

    List pairs supported by exchange.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   account* => *cryptoexchange::account*

    *   detail => *bool*

    *   native => *bool*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  ticker
    Usage:

     ticker(%args) -> [status, msg, result, meta]

    Get a pair's ticker (last 24h price & volume information).

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   account* => *cryptoexchange::account*

    *   pair* => *str*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-cryp-exchange>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-App-cryp-exchange>.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-cryp-exchange>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

SEE ALSO
    Other "App::cryp::*" modules.

AUTHOR
    perlancar <perlancar@cpan.org>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2018 by perlancar@cpan.org.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

