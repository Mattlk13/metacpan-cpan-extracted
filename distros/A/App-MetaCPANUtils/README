NAME
    App::MetaCPANUtils - CLI utilities related to MetaCPAN

VERSION
    This document describes version 0.006 of App::MetaCPANUtils (from Perl
    distribution App-MetaCPANUtils), released on 2022-02-24.

DESCRIPTION
    This distribution contains CLI utilities related to MetaCPAN:

    *   list-metacpan-distributions

    *   list-metacpan-releases

    *   list-recent-metacpan-releases

    *   open-metacpan-dist-page

    *   open-metacpan-module-page

FUNCTIONS
  list_metacpan_distributions
    Usage:

     list_metacpan_distributions(%args) -> [$status_code, $reason, $payload, \%result_meta]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   author => *cpan::pause_id*

    *   fields => *array[str]* (default: ["distribution"])

    *   sort => *str* (default: "distribution")

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

  list_metacpan_modules
    Usage:

     list_metacpan_modules(%args) -> [$status_code, $reason, $payload, \%result_meta]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   author => *cpan::pause_id*

    *   fields => *array[str]* (default:
        ["module","date","author","status","maturity","version","release","a
        bstract"])

    *   from_date => *date*

    *   sort => *str* (default: "module")

    *   status => *str* (default: "latest")

    *   to_date => *date*

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

  list_metacpan_releases
    Usage:

     list_metacpan_releases(%args) -> [$status_code, $reason, $payload, \%result_meta]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   author => *cpan::pause_id*

    *   date => *date*

        Select a single day, alternative to `from_date` + `to_date`.

    *   distribution => *cpan::distname*

    *   fields => *array[str]* (default:
        ["release","date","author","status","maturity","version","first","di
        stribution","abstract"])

    *   first => *bool*

    *   from_date => *date*

    *   sort => *str* (default: "-date")

    *   status => *str*

    *   to_date => *date*

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

  list_recent_metacpan_releases
    Usage:

     list_recent_metacpan_releases(%args) -> [$status_code, $reason, $payload, \%result_meta]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   fields => *array[str]* (default:
        ["release","date","author","status","maturity","version","first","di
        stribution","abstract"])

    *   n => *posint*

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

  open_metacpan_dist_page
    Usage:

     open_metacpan_dist_page(%args) -> [$status_code, $reason, $payload, \%result_meta]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   dist* => *perl::distname*

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

  open_metacpan_module_page
    Usage:

     open_metacpan_module_page(%args) -> [$status_code, $reason, $payload, \%result_meta]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   module* => *perl::modname*

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

ENVIRONMENT
  METACPANUTILS_DUMP_API_RESULT
    If set to true, will log the API result at the "trace" level.

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-MetaCPANUtils>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-App-MetaCPANUtils>.

SEE ALSO
    <https://metacpan.org>

    Other distributions providing CLIs for MetaCPAN: MetaCPAN::Clients,
    App::metacpansearch.

    MetaCPAN API Client: MetaCPAN::Client

    this-mod-on-metacpan, this-dist-on-metacpan from
    App::ThisDist::OnMetaCPAN.

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla plugin and/or Pod::Weaver::Plugin. Any additional
    steps required beyond that are considered a bug and can be reported to
    me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2022, 2021, 2020 by perlancar
    <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-MetaCPANUtils>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

