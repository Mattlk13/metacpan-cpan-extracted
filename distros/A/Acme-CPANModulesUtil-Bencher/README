NAME
    Acme::CPANModulesUtil::Bencher - Generate/extract Bencher scenario from
    information in an Acme::CPANModules::* list

VERSION
    This document describes version 0.005 of Acme::CPANModulesUtil::Bencher
    (from Perl distribution Acme-CPANModulesUtil-Bencher), released on
    2022-11-30.

FUNCTIONS
  gen_bencher_scenario
    Usage:

     gen_bencher_scenario(%args) -> [$status_code, $reason, $payload, \%result_meta]

    Generate/extract Bencher scenario from information in an
    Acme::CPANModules::* list.

    An Acme::CPANModules::* module can contain benchmark information, for
    example in Acme::CPANModules::TextTable, each entry has the following
    property:

       entries => [
           ...
           {
               module => 'Text::ANSITable',
               ...
               bench_code => sub {
                   my ($table) = @_;
                   my $t = Text::ANSITable->new(
                       use_utf8 => 0,
                       use_box_chars => 0,
                       use_color => 0,
                       columns => $table->[0],
                       border_style => 'Default::single_ascii',
                   );
                   $t->add_row($table->[$_]) for 1..@$table-1;
                   $t->draw;
               },
 
               # per-function participant
               functions => {
                   'func1' => {
                       bench_code_template => 'Text::ANSITable::func1([])',
                   },
                   ...
               },

    The list also contains information about the benchmark datasets:

     bench_datasets => [
         {name=>'tiny (1x1)'    , argv => [_make_table( 1, 1)],},
         {name=>'small (3x5)'   , argv => [_make_table( 3, 5)],},
         {name=>'wide (30x5)'   , argv => [_make_table(30, 5)],},
         {name=>'long (3x300)'  , argv => [_make_table( 3, 300)],},
         {name=>'large (30x300)', argv => [_make_table(30, 300)],},
     ],

    This routine extract those information and return a Bencher scenario
    structure.

    This function is not exported by default, but exportable.

    Arguments ('*' denotes required arguments):

    *   cpanmodule* => *perl::modname*

        Name of Acme::CPANModules::* module, without the prefix.

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/Acme-CPANModulesUtil-Bencher>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-Acme-CPANModulesUtil-Bencher>.

SEE ALSO
    Acme::CPANModules

    Bencher

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR,
    Pod::Weaver::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla- and/or Pod::Weaver plugins. Any additional steps
    required beyond that are considered a bug and can be reported to me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2022, 2021 by perlancar
    <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=Acme-CPANModulesUtil-
    Bencher>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

