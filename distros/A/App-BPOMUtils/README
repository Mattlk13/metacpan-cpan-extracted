NAME
    App::BPOMUtils - Utilities related to BPOM

VERSION
    This document describes version 0.002 of App::BPOMUtils (from Perl
    distribution App-BPOMUtils), released on 2021-08-28.

SYNOPSIS
     # Use via the included scripts

DESCRIPTION
    This distribution includes CLI utilities related to BPOM (Badan Pengawas
    Obat dan Makanan, Indonesian equivalent of Food & Drug Administration
    authority).

    *   bpom-list-jenis-pangan

FUNCTIONS
  bpom_list_jenis_pangan
    Usage:

     bpom_list_jenis_pangan(%args) -> [$status_code, $reason, $payload, \%result_meta]

    List food types in BPOM processed food division.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   code => *str*

        Only return records where the 'code' field equals specified value.

    *   code.contains => *str*

        Only return records where the 'code' field contains specified text.

    *   code.in => *array[str]*

        Only return records where the 'code' field is in the specified
        values.

    *   code.is => *str*

        Only return records where the 'code' field equals specified value.

    *   code.isnt => *str*

        Only return records where the 'code' field does not equal specified
        value.

    *   code.max => *str*

        Only return records where the 'code' field is less than or equal to
        specified value.

    *   code.min => *str*

        Only return records where the 'code' field is greater than or equal
        to specified value.

    *   code.not_contains => *str*

        Only return records where the 'code' field does not contain
        specified text.

    *   code.not_in => *array[str]*

        Only return records where the 'code' field is not in the specified
        values.

    *   code.xmax => *str*

        Only return records where the 'code' field is less than specified
        value.

    *   code.xmin => *str*

        Only return records where the 'code' field is greater than specified
        value.

    *   detail => *bool* (default: 0)

        Return array of full records instead of just ID fields.

        By default, only the key (ID) field is returned per result entry.

    *   exclude_fields => *array[str]*

        Select fields to return.

    *   fields => *array[str]*

        Select fields to return.

    *   query => *str*

        Search.

    *   random => *bool* (default: 0)

        Return records in random order.

    *   result_limit => *int*

        Only return a certain number of records.

    *   result_start => *int* (default: 1)

        Only return starting from the n'th record.

    *   sort => *array[str]*

        Order records according to certain field(s).

        A list of field names separated by comma. Each field can be prefixed
        with '-' to specify descending order instead of the default
        ascending.

    *   summary => *str*

        Only return records where the 'summary' field equals specified
        value.

    *   summary.contains => *str*

        Only return records where the 'summary' field contains specified
        text.

    *   summary.in => *array[str]*

        Only return records where the 'summary' field is in the specified
        values.

    *   summary.is => *str*

        Only return records where the 'summary' field equals specified
        value.

    *   summary.isnt => *str*

        Only return records where the 'summary' field does not equal
        specified value.

    *   summary.max => *str*

        Only return records where the 'summary' field is less than or equal
        to specified value.

    *   summary.min => *str*

        Only return records where the 'summary' field is greater than or
        equal to specified value.

    *   summary.not_contains => *str*

        Only return records where the 'summary' field does not contain
        specified text.

    *   summary.not_in => *array[str]*

        Only return records where the 'summary' field is not in the
        specified values.

    *   summary.xmax => *str*

        Only return records where the 'summary' field is less than specified
        value.

    *   summary.xmin => *str*

        Only return records where the 'summary' field is greater than
        specified value.

    *   with_field_names => *bool*

        Return field names in each record (as hash/associative array).

        When enabled, function will return each record as hash/associative
        array (field name => value pairs). Otherwise, function will return
        each record as list/array (field value, field value, ...).

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-BPOMUtils>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-App-BPOMUtils>.

SEE ALSO
    <https://pom.go.id>

    Business::ID::BPOM

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla plugin and/or Pod::Weaver::Plugin. Any additional
    steps required beyond that are considered a bug and can be reported to
    me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2021 by perlancar <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-BPOMUtils>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

