NAME
    App::sort_by_spec - Sort lines of text by spec

VERSION
    This document describes version 0.002 of App::sort_by_spec (from Perl
    distribution App-sort_by_spec), released on 2023-09-06.

FUNCTIONS
  sort_by_spec
    Usage:

     sort_by_spec(%args) -> [$status_code, $reason, $payload, \%result_meta]

    Sort lines of text by spec.

    This utility lets you sort lines of text "by spec". Sorting by spec in
    an advanced form of sorting by example. In addition to specifying
    example strings, you can also specify regexes or codes. For more
    details, see Sort::BySpec.

    To specify a regex on the command-line, use one of this form:

     /.../
     qr(...)

    and to specify Perl code on the command-line, use this form:

     sub { ... }

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   dereference_recursive => *true*

        Read all files under each directory, recursively, following all
        symbolic links, unlike -r.

    *   files => *array[filename]*

        (No description)

    *   ignore_case => *bool*

        If set to true, will search case-insensitively.

    *   recursive => *true*

        Read all files under each directory, recursively, following symbolic
        links only if they are on the command line.

    *   reverse => *bool*

        Reverse sort order.

    *   specs* => *array[str_or_re_or_code]*

        (No description)

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-sort_by_spec>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-App-sort_by_spec>.

SEE ALSO
    Sort::BySpec.

    App::sort_by_example.

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR,
    Pod::Weaver::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla- and/or Pod::Weaver plugins. Any additional steps
    required beyond that are considered a bug and can be reported to me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2023 by perlancar <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-sort_by_spec>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

