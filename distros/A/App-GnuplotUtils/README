NAME
    App::GnuplotUtils - Utilities related to plotting data using gnuplot

VERSION
    This document describes version 0.003 of App::GnuplotUtils (from Perl
    distribution App-GnuplotUtils), released on 2021-07-02.

DESCRIPTION
    This distributions provides the following command-line utilities. They
    are mostly simple/convenience wrappers for gnuplot:

    *   xyplot

FUNCTIONS
  xyplot
    Usage:

     xyplot(%args) -> [$status_code, $reason, $payload, \%result_meta]

    Plot XY dataset(s) using gnuplot.

    This utility is a wrapper for gnuplot to quickly generate a graph from
    the command-line and view it using a browser or an image viewer program.
    You can specify the dataset to plot directly from the command-line or
    specify filename to read the dataset from.

    To plot directly from the command-line:

     % xyplot --dataset-data '1,1, 2,3, 3,5.5, 4,7.9, 6,11.5' ; # whitespaces are optional

    To add more datasets, specify more "--dataset-data" options:

     % xyplot --dataset-data '1,1, 2,3, 3,5.5, 4,7.9, 6,11.5' \
              --dataset-data '1,4,2,4,3,2,4,9,5,3,6,6'

    To add a title to your chart and every dataset:

     % xyplot --chart-title "my chart" \
              --dataset-title "foo" --dataset-data '1,1, 2,3, 3,5.5, 4,7.9, 6,11.5' \
              --dataset-title "bar" --dataset-data '1,4,2,4,3,2,4,9,5,3,6,6'

    To specify dataset from a file, use "--dataset-file" option (or specify
    as arguments):

     % xyplot --dataset-file ds1.txt --dataset-file ds2.txt
     % xyplot ds1.txt ds2.txt

    "ds1.txt" contains these lines:

     1 1
     2 3
     3 5.5
     4 7.9
     6 11.5

    Keywords: xychart, XY chart, XY plot

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   chart_title => *str*

    *   dataset_datas => *array[str]*

        Dataset(s).

    *   dataset_files => *array[filename]*

        Dataset(s) from file(s).

    *   dataset_styles => *array[str]*

        Dataset plot style(s).

    *   dataset_titles => *array[str]*

        Dataset title(s).

    *   field_delimiter => *str*

        Supply field delimiter character in dataset file instead of the
        default whitespace(s) or comma(s).

    *   output_file => *filename*

    *   overwrite => *bool*

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-GnuplotUtils>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-App-GnuplotUtils>.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-GnuplotUtils>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

SEE ALSO
AUTHOR
    perlancar <perlancar@cpan.org>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2021, 2020, 2018 by perlancar@cpan.org.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

