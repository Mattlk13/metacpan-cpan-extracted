#!perl

# Note: This script is a CLI for Riap function /App/KwaliteeUtils/calc_kwalitee
# and generated automatically using Perinci::CmdLine::Gen version 0.488

our $DATE = '2019-07-03'; # DATE
our $DIST = 'App-KwaliteeUtils'; # DIST
our $VERSION = '0.002'; # VERSION

use 5.010001;
use strict;
use warnings;

use Perinci::CmdLine::Any;

my $cmdline = Perinci::CmdLine::Any->new(
    url => "/App/KwaliteeUtils/calc_kwalitee",
    program_name => "calc-kwalitee",
    read_config => 0,
    read_env => 0,
);

$cmdline->run;

# ABSTRACT: Calculate kwalitee of a local distribution
# PODNAME: calc-kwalitee

__END__

=pod

=encoding UTF-8

=head1 NAME

calc-kwalitee - Calculate kwalitee of a local distribution

=head1 VERSION

This document describes version 0.002 of calc-kwalitee (from Perl distribution App-KwaliteeUtils), released on 2019-07-03.

=head1 SYNOPSIS

Usage:

 % calc-kwalitee [options] [dist]

=head1 OPTIONS

C<*> marks required options.

=head2 Main options

=over

=item B<--dist>=I<s>

Distribution archive file (e.g. tarball) or directory.

Default value:

 "."

Although a directory (top-level directory of an extracted Perl distribution) can
be analyzed, distribution Kwalitee is supposed to be calculated on a
distribution archive file (e.g. tarball) because there are metrics like
`extractable`, `extracts_nicely`, `no_pax_headers` which can only be tested on a
distribution archive file. Running this on a directory will result in a
less-than-full score.


=item B<--raw>

=back

=head2 Output options

=over

=item B<--format>=I<s>

Choose output format, e.g. json, text.

Default value:

 undef

=item B<--json>

Set output format to json.

=item B<--naked-res>

When outputing as JSON, strip result envelope.

Default value:

 0

By default, when outputing as JSON, the full enveloped result is returned, e.g.:

    [200,"OK",[1,2,3],{"func.extra"=>4}]

The reason is so you can get the status (1st element), status message (2nd
element) as well as result metadata/extra result (4th element) instead of just
the result (3rd element). However, sometimes you want just the result, e.g. when
you want to pipe the result for more post-processing. In this case you can use
`--naked-res` so you just get:

    [1,2,3]


=back

=head2 Other options

=over

=item B<--help>, B<-h>, B<-?>

Display help message and exit.

=item B<--version>, B<-v>

Display program's version and exit.

=back

=head1 COMPLETION

This script has shell tab completion capability with support for several
shells.

=head2 bash

To activate bash completion for this script, put:

 complete -C calc-kwalitee calc-kwalitee

in your bash startup (e.g. F<~/.bashrc>). Your next shell session will then
recognize tab completion for the command. Or, you can also directly execute the
line above in your shell to activate immediately.

It is recommended, however, that you install modules using L<cpanm-shcompgen>
which can activate shell completion for scripts immediately.

=head2 tcsh

To activate tcsh completion for this script, put:

 complete calc-kwalitee 'p/*/`calc-kwalitee`/'

in your tcsh startup (e.g. F<~/.tcshrc>). Your next shell session will then
recognize tab completion for the command. Or, you can also directly execute the
line above in your shell to activate immediately.

It is also recommended to install L<shcompgen> (see above).

=head2 other shells

For fish and zsh, install L<shcompgen> as described above.

=head1 HOMEPAGE

Please visit the project's homepage at L<https://metacpan.org/release/App-KwaliteeUtils>.

=head1 SOURCE

Source repository is at L<https://github.com/perlancar/perl-App-KwaliteeUtils>.

=head1 BUGS

Please report any bugs or feature requests on the bugtracker website L<https://rt.cpan.org/Public/Dist/Display.html?Name=App-KwaliteeUtils>

When submitting a bug or request, please include a test-file or a
patch to an existing test-file that illustrates the bug or desired
feature.

=head1 AUTHOR

perlancar <perlancar@cpan.org>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2019 by perlancar@cpan.org.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut
