NAME
    App::ImageInfoUtils - Utilities related to getting (metadata)
    information from images

VERSION
    This document describes version 0.003 of App::ImageInfoUtils (from Perl
    distribution App-ImageInfoUtils), released on 2019-06-09.

FUNCTIONS
  image_info
    Usage:

     image_info(%args) -> [status, msg, payload, meta]

    Get information about image files.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   files* => *array[filename]*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (payload) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  image_is_landscape
    Usage:

     image_is_landscape(%args) -> [status, msg, payload, meta]

    Return exit code 0 if image is landscape.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   file* => *filename*

    *   quiet => *true*

        Don't output anything on command-line, just return appropriate exit
        code.

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (payload) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  image_is_portrait
    Usage:

     image_is_portrait(%args) -> [status, msg, payload, meta]

    Return exit code 0 if image is portrait.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   file* => *filename*

    *   quiet => *true*

        Don't output anything on command-line, just return appropriate exit
        code.

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (payload) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  image_orientation
    Usage:

     image_orientation(%args) -> [status, msg, payload, meta]

    Return orientation of image.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   file* => *filename*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (payload) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-ImageInfoUtils>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-App-ImageInfoUtils>.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-ImageInfoUtils>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

AUTHOR
    perlancar <perlancar@cpan.org>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2019 by perlancar@cpan.org.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

