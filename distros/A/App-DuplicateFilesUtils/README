NAME
    App::DuplicateFilesUtils - CLI utilities related to duplicate files

VERSION
    This document describes version 0.005 of App::DuplicateFilesUtils (from
    Perl distribution App-DuplicateFilesUtils), released on 2022-08-19.

DESCRIPTION
    This distributions provides the following command-line utilities:

    *   move-duplicate-files-to

    *   show-duplicate-files

FUNCTIONS
  move_duplicate_files_to
    Usage:

     move_duplicate_files_to(%args) -> [$status_code, $reason, $payload, \%result_meta]

    Move duplicate files (except one copy) to a directory.

    This utility will find all duplicate sets of files and move all of the
    duplicates (except one) for each set to a directory of your choosing.

    See also: show-duplicate-files which lets you manually select which
    copies of the duplicate sets you want to move/delete.

    This function is not exported.

    This function supports dry-run operation.

    Arguments ('*' denotes required arguments):

    *   dir* => *dirname*

        Directory to move duplicate files into.

    Special arguments:

    *   -dry_run => *bool*

        Pass -dry_run=>1 to enable simulation mode.

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

  show_duplicate_files
    Usage:

     show_duplicate_files() -> [$status_code, $reason, $payload, \%result_meta]

    Show duplicate files.

    This is actually a shortcut for:

     % uniq-files -a --show-count --show-size --group-by-digest -R .

    Sample output:

     % show-duplicate-files
     +------------------------------+---------+-------+
     | file                         | size    | count |
     +------------------------------+---------+-------+
     | ./tmp/P_20161001_112707.jpg  | 1430261 | 2     |
     | ./tmp2/P_20161001_112707.jpg | 1430261 | 2     |
     |                              |         |       |
     | ./20160420/IMG_3430-(95).JPG | 1633463 | 2     |
     | ./tmp/IMG_3430-(95).JPG      | 1633463 | 2     |
     |                              |         |       |
     | ./tmp/P_20161009_081735.jpg  | 1722586 | 2     |
     | ./tmp2/P_20161009_081735.jpg | 1722586 | 2     |
     |                              |         |       |
     | ./20160420/IMG_3430-(98).JPG | 1847543 | 3     |
     | ./tmp/IMG_3430-(98).JPG      | 1847543 | 3     |
     | ./tmp2/IMG_3430-(98).JPG     | 1847543 | 3     |
     |                              |         |       |
     | ./20160420/IMG_3430-(97).JPG | 1878472 | 2     |
     | ./tmp/IMG_3430-(97).JPG      | 1878472 | 2     |
     |                              |         |       |
     | ./20160420/IMG_3430-(99).JPG | 1960652 | 3     |
     | ./tmp/IMG_3430-(99).JPG      | 1960652 | 3     |
     | ./tmp2/IMG_3430-(99).JPG     | 1960652 | 3     |
     |                              |         |       |
     | ./20160420/IMG_3430-(96).JPG | 2042952 | 2     |
     | ./tmp/IMG_3430-(96).JPG      | 2042952 | 2     |
     |                              |         |       |
     | ./20160420/IMG_3430-(92).JPG | 2049127 | 2     |
     | ./tmp/IMG_3430-(92).JPG      | 2049127 | 2     |
     |                              |         |       |
     | ./20160420/IMG_3430-(94).JPG | 2109852 | 2     |
     | ./tmp/IMG_3430-(94).JPG      | 2109852 | 2     |
     |                              |         |       |
     | ./20160420/IMG_3430-(91).JPG | 2138724 | 2     |
     | ./tmp/IMG_3430-(91).JPG      | 2138724 | 2     |
     |                              |         |       |
     | ./20160420/IMG_3430-(93).JPG | 2190379 | 2     |
     | ./tmp/IMG_3430-(93).JPG      | 2190379 | 2     |
     +------------------------------+---------+-------+

    You can then delete or move the duplicates manually, if you want. But
    there's also move-duplicate-files-to to automatically move all the
    duplicates (but one, for each set) to a directory of your choice.

    To perform other actions on the duplicate copies, for example delete
    them, you can use uniq-files directly e.g. (in bash):

     % uniq-files -R -D * | while read f; do rm "$p"; done

    This function is not exported.

    No arguments.

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-DuplicateFilesUtils>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-App-DuplicateFilesUtils>.

SEE ALSO
    uniq-files and dupe-files from App::UniqFiles

    find-duplicate-filenames from App::FindUtils

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR,
    Pod::Weaver::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla- and/or Pod::Weaver plugins. Any additional steps
    required beyond that are considered a bug and can be reported to me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2022, 2020 by perlancar
    <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-DuplicateFilesUti
    ls>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

