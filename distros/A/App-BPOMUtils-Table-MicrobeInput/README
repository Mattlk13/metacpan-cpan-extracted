NAME
    App::BPOMUtils::Table::MicrobeInput - List of microbe specification in
    BPOM processed food division

VERSION
    This document describes version 0.017 of
    App::BPOMUtils::Table::MicrobeInput (from Perl distribution
    App-BPOMUtils-Table-MicrobeInput), released on 2023-02-13.

DESCRIPTION
    This distribution contains the following CLIs:

    *   bpom-daftar-cemaran-mikroba-pangan

    *   bpom-list-food-microbe-inputs

FUNCTIONS
  bpom_list_food_microbe_inputs
    Usage:

     bpom_list_food_microbe_inputs(%args) -> [$status_code, $reason, $payload, \%result_meta]

    List of microbe specification in BPOM processed food division.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   category => *str*

        Only return records where the 'category' field equals specified
        value.

    *   category.contains => *str*

        Only return records where the 'category' field contains specified
        text.

    *   category.in => *array[str]*

        Only return records where the 'category' field is in the specified
        values.

    *   category.is => *str*

        Only return records where the 'category' field equals specified
        value.

    *   category.isnt => *str*

        Only return records where the 'category' field does not equal
        specified value.

    *   category.matches => *str*

        Only return records where the 'category' field matches specified
        regular expression pattern.

    *   category.max => *str*

        Only return records where the 'category' field is less than or equal
        to specified value.

    *   category.min => *str*

        Only return records where the 'category' field is greater than or
        equal to specified value.

    *   category.not_contains => *str*

        Only return records where the 'category' field does not contain
        specified text.

    *   category.not_in => *array[str]*

        Only return records where the 'category' field is not in the
        specified values.

    *   category.not_matches => *str*

        Only return records where the 'category' field does not match
        specified regular expression.

    *   category.xmax => *str*

        Only return records where the 'category' field is less than
        specified value.

    *   category.xmin => *str*

        Only return records where the 'category' field is greater than
        specified value.

    *   characteristic => *str*

        Only return records where the 'characteristic' field equals
        specified value.

    *   characteristic.contains => *str*

        Only return records where the 'characteristic' field contains
        specified text.

    *   characteristic.in => *array[str]*

        Only return records where the 'characteristic' field is in the
        specified values.

    *   characteristic.is => *str*

        Only return records where the 'characteristic' field equals
        specified value.

    *   characteristic.isnt => *str*

        Only return records where the 'characteristic' field does not equal
        specified value.

    *   characteristic.matches => *str*

        Only return records where the 'characteristic' field matches
        specified regular expression pattern.

    *   characteristic.max => *str*

        Only return records where the 'characteristic' field is less than or
        equal to specified value.

    *   characteristic.min => *str*

        Only return records where the 'characteristic' field is greater than
        or equal to specified value.

    *   characteristic.not_contains => *str*

        Only return records where the 'characteristic' field does not
        contain specified text.

    *   characteristic.not_in => *array[str]*

        Only return records where the 'characteristic' field is not in the
        specified values.

    *   characteristic.not_matches => *str*

        Only return records where the 'characteristic' field does not match
        specified regular expression.

    *   characteristic.xmax => *str*

        Only return records where the 'characteristic' field is less than
        specified value.

    *   characteristic.xmin => *str*

        Only return records where the 'characteristic' field is greater than
        specified value.

    *   detail => *bool* (default: 0)

        Return array of full records instead of just ID fields.

        By default, only the key (ID) field is returned per result entry.

    *   exclude_fields => *array[str]*

        Select fields to return.

    *   fields => *array[str]*

        Select fields to return.

    *   id => *int*

        Only return records where the 'id' field equals specified value.

    *   id.in => *array[int]*

        Only return records where the 'id' field is in the specified values.

    *   id.is => *int*

        Only return records where the 'id' field equals specified value.

    *   id.isnt => *int*

        Only return records where the 'id' field does not equal specified
        value.

    *   id.max => *int*

        Only return records where the 'id' field is less than or equal to
        specified value.

    *   id.min => *int*

        Only return records where the 'id' field is greater than or equal to
        specified value.

    *   id.not_in => *array[int]*

        Only return records where the 'id' field is not in the specified
        values.

    *   id.xmax => *int*

        Only return records where the 'id' field is less than specified
        value.

    *   id.xmin => *int*

        Only return records where the 'id' field is greater than specified
        value.

    *   lower_limit => *str*

        Only return records where the 'lower_limit' field equals specified
        value.

    *   lower_limit.contains => *str*

        Only return records where the 'lower_limit' field contains specified
        text.

    *   lower_limit.in => *array[str]*

        Only return records where the 'lower_limit' field is in the
        specified values.

    *   lower_limit.is => *str*

        Only return records where the 'lower_limit' field equals specified
        value.

    *   lower_limit.isnt => *str*

        Only return records where the 'lower_limit' field does not equal
        specified value.

    *   lower_limit.matches => *str*

        Only return records where the 'lower_limit' field matches specified
        regular expression pattern.

    *   lower_limit.max => *str*

        Only return records where the 'lower_limit' field is less than or
        equal to specified value.

    *   lower_limit.min => *str*

        Only return records where the 'lower_limit' field is greater than or
        equal to specified value.

    *   lower_limit.not_contains => *str*

        Only return records where the 'lower_limit' field does not contain
        specified text.

    *   lower_limit.not_in => *array[str]*

        Only return records where the 'lower_limit' field is not in the
        specified values.

    *   lower_limit.not_matches => *str*

        Only return records where the 'lower_limit' field does not match
        specified regular expression.

    *   lower_limit.xmax => *str*

        Only return records where the 'lower_limit' field is less than
        specified value.

    *   lower_limit.xmin => *str*

        Only return records where the 'lower_limit' field is greater than
        specified value.

    *   queries => *array[str]*

        Search.

        This will search all searchable fields with one or more specified
        queries. Each query can be in the form of "-FOO" (dash prefix
        notation) to require that the fields do not contain specified
        string, or "/FOO/" to use regular expression. All queries must match
        if the "query_boolean" option is set to "and"; only one query should
        match if the "query_boolean" option is set to "or".

    *   query_boolean => *str* (default: "and")

        Whether records must match all search queries ('and') or just one
        ('or').

        If set to "and", all queries must match; if set to "or", only one
        query should match. See the "queries" option for more details on
        searching.

    *   random => *bool* (default: 0)

        Return records in random order.

    *   result_limit => *int*

        Only return a certain number of records.

    *   result_start => *int* (default: 1)

        Only return starting from the n'th record.

    *   sort => *array[str]*

        Order records according to certain field(s).

        A list of field names separated by comma. Each field can be prefixed
        with '-' to specify descending order instead of the default
        ascending.

    *   upper_limit => *str*

        Only return records where the 'upper_limit' field equals specified
        value.

    *   upper_limit.contains => *str*

        Only return records where the 'upper_limit' field contains specified
        text.

    *   upper_limit.in => *array[str]*

        Only return records where the 'upper_limit' field is in the
        specified values.

    *   upper_limit.is => *str*

        Only return records where the 'upper_limit' field equals specified
        value.

    *   upper_limit.isnt => *str*

        Only return records where the 'upper_limit' field does not equal
        specified value.

    *   upper_limit.matches => *str*

        Only return records where the 'upper_limit' field matches specified
        regular expression pattern.

    *   upper_limit.max => *str*

        Only return records where the 'upper_limit' field is less than or
        equal to specified value.

    *   upper_limit.min => *str*

        Only return records where the 'upper_limit' field is greater than or
        equal to specified value.

    *   upper_limit.not_contains => *str*

        Only return records where the 'upper_limit' field does not contain
        specified text.

    *   upper_limit.not_in => *array[str]*

        Only return records where the 'upper_limit' field is not in the
        specified values.

    *   upper_limit.not_matches => *str*

        Only return records where the 'upper_limit' field does not match
        specified regular expression.

    *   upper_limit.xmax => *str*

        Only return records where the 'upper_limit' field is less than
        specified value.

    *   upper_limit.xmin => *str*

        Only return records where the 'upper_limit' field is greater than
        specified value.

    *   with_field_names => *bool*

        Return field names in each record (as hash/associative array).

        When enabled, function will return each record as hash/associative
        array (field name => value pairs). Otherwise, function will return
        each record as list/array (field value, field value, ...).

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-BPOMUtils-Table-MicrobeInput>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-App-BPOMUtils-Table-MicrobeInput>.

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR,
    Pod::Weaver::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla- and/or Pod::Weaver plugins. Any additional steps
    required beyond that are considered a bug and can be reported to me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2023 by perlancar <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-BPOMUtils-Table-M
    icrobeInput>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

