#!perl

# Note: This script is a CLI for Riap function /App/FirefoxMultiAccountContainersUtils/firefox_mua_sort_containers
# and generated automatically using Perinci::CmdLine::Gen version 0.496

our $AUTHORITY = 'cpan:PERLANCAR'; # AUTHORITY
our $DATE = '2020-06-03'; # DATE
our $DIST = 'App-FirefoxMultiAccountContainersUtils'; # DIST
our $VERSION = '0.006'; # VERSION

use 5.010001;
use strict;
use warnings;
use Log::ger;

use Perinci::CmdLine::Any;

my $cmdline = Perinci::CmdLine::Any->new(
    url => "/App/FirefoxMultiAccountContainersUtils/firefox_mua_sort_containers",
    program_name => "firefox-mua-sort-containers",
    log => 1,
    log_level => "info",
    read_config => 0,
    read_env => 0,
);

$cmdline->run;

# ABSTRACT: Sort Firefox Multi-Account Containers add-on's containers
# PODNAME: firefox-mua-sort-containers

__END__

=pod

=encoding UTF-8

=head1 NAME

firefox-mua-sort-containers - Sort Firefox Multi-Account Containers add-on's containers

=head1 VERSION

This document describes version 0.006 of firefox-mua-sort-containers (from Perl distribution App-FirefoxMultiAccountContainersUtils), released on 2020-06-03.

=head1 SYNOPSIS

Usage:

 % firefox-mua-sort-containers [-A=s+] [-S=s] [--debug] [--dry-run]
     [--format=name] [--json] [--log-level=level] [--(no)naked-res]
     [--page-result[=program]] [--quiet] [--sort-arg=s+]
     [--sort-args-json=s] [--sort-sub=s] [--trace] [--verbose]
     [--view-result[=program]] <profile>

=head1 DESCRIPTION

At the time of this writing, the UI does not provide a way to sort the
containers. Thus this utility.

=head1 OPTIONS

C<*> marks required options.

=head2 Main options

=over

=item B<--profile>=I<s>*

=item B<--sort-arg>=I<s@>, B<-A>

Arguments to pass to the Sort::Sub::* routine.

Can be specified multiple times.

=item B<--sort-args-json>=I<s>

Arguments to pass to the Sort::Sub::* routine (JSON-encoded).

See C<--sort-arg>.

=item B<--sort-sub>=I<s>, B<-S>

Name of a Sort::Sub::* module (without the prefix).

=back

=head2 Logging options

=over

=item B<--debug>

Shortcut for --log-level=debug.

=item B<--log-level>=I<s>

Set log level.

=item B<--quiet>

Shortcut for --log-level=error.

=item B<--trace>

Shortcut for --log-level=trace.

=item B<--verbose>

Shortcut for --log-level=info.

=back

=head2 Output options

=over

=item B<--format>=I<s>

Choose output format, e.g. json, text.

Default value:

 undef

=item B<--json>

Set output format to json.

=item B<--naked-res>

When outputing as JSON, strip result envelope.

Default value:

 0

By default, when outputing as JSON, the full enveloped result is returned, e.g.:

    [200,"OK",[1,2,3],{"func.extra"=>4}]

The reason is so you can get the status (1st element), status message (2nd
element) as well as result metadata/extra result (4th element) instead of just
the result (3rd element). However, sometimes you want just the result, e.g. when
you want to pipe the result for more post-processing. In this case you can use
`--naked-res` so you just get:

    [1,2,3]


=item B<--page-result>

Filter output through a pager.

=item B<--view-result>

View output using a viewer.

=back

=head2 Other options

=over

=item B<--dry-run>

Run in simulation mode (also via DRY_RUN=1).

Default value:

 ""

=item B<--help>, B<-h>, B<-?>

Display help message and exit.

=item B<--version>, B<-v>

Display program's version and exit.

=back

=head1 COMPLETION

This script has shell tab completion capability with support for several
shells.

=head2 bash

To activate bash completion for this script, put:

 complete -C firefox-mua-sort-containers firefox-mua-sort-containers

in your bash startup (e.g. F<~/.bashrc>). Your next shell session will then
recognize tab completion for the command. Or, you can also directly execute the
line above in your shell to activate immediately.

It is recommended, however, that you install modules using L<cpanm-shcompgen>
which can activate shell completion for scripts immediately.

=head2 tcsh

To activate tcsh completion for this script, put:

 complete firefox-mua-sort-containers 'p/*/`firefox-mua-sort-containers`/'

in your tcsh startup (e.g. F<~/.tcshrc>). Your next shell session will then
recognize tab completion for the command. Or, you can also directly execute the
line above in your shell to activate immediately.

It is also recommended to install L<shcompgen> (see above).

=head2 other shells

For fish and zsh, install L<shcompgen> as described above.

=head1 HOMEPAGE

Please visit the project's homepage at L<https://metacpan.org/release/App-FirefoxMultiAccountContainersUtils>.

=head1 SOURCE

Source repository is at L<https://github.com/perlancar/perl-App-FirefoxMultiAccountContainersUtils>.

=head1 BUGS

Please report any bugs or feature requests on the bugtracker website L<https://rt.cpan.org/Public/Dist/Display.html?Name=App-FirefoxMultiAccountContainersUtils>

When submitting a bug or request, please include a test-file or a
patch to an existing test-file that illustrates the bug or desired
feature.

=head1 AUTHOR

perlancar <perlancar@cpan.org>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2020 by perlancar@cpan.org.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut
