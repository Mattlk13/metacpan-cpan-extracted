NAME
    App::UnixUIDUtils - Utilities related to Unix UID/GID

VERSION
    This document describes version 0.002 of App::UnixUIDUtils (from Perl
    distribution App-UnixUIDUtils), released on 2022-07-24.

DESCRIPTION
    This distributions provides the following command-line utilities:

    *   gid-to-groupname

    *   groupname-to-gid

    *   uid-to-username

    *   username-to-uid

FUNCTIONS
  gid_to_groupname
    Usage:

     gid_to_groupname(%args) -> [$status_code, $reason, $payload, \%result_meta]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   group* => *unix::groupname::exists*

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

  groupname_to_gid
    Usage:

     groupname_to_gid(%args) -> [$status_code, $reason, $payload, \%result_meta]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   group* => *unix::gid::exists*

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

  uid_to_username
    Usage:

     uid_to_username(%args) -> [$status_code, $reason, $payload, \%result_meta]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   user* => *unix::username::exists*

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

  username_to_uid
    Usage:

     username_to_uid(%args) -> [$status_code, $reason, $payload, \%result_meta]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   user* => *unix::uid::exists*

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-UnixUIDUtils>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-App-UnixUIDUtils>.

SEE ALSO
AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla plugin and/or Pod::Weaver::Plugin. Any additional
    steps required beyond that are considered a bug and can be reported to
    me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2022 by perlancar <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-UnixUIDUtils>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

