NAME
    Acme::CPANModules::StructuredDATA - List of modules that give some
    structure to DATA

VERSION
    This document describes version 0.002 of
    Acme::CPANModules::StructuredDATA (from Perl distribution
    Acme-CPANModules-StructuredDATA), released on 2022-03-18.

DESCRIPTION
    The DATA file handle is a convenient feature provided by Perl to let
    scripts access its own source code (specifically the part after END or
    DATA). Scripts can usually put some data so they can run without
    additional data files.

    Instead of just a stream of bytes, some modules allow you to access the
    DATA as some kind of structured storage.

ACME::CPANMODULES ENTRIES
    *   Data::Section - read multiple hunks of data out of your DATA section

        Author: RJBS <https://metacpan.org/author/RJBS>

        With this module, you can put several strings in your DATA section,
        each prepended with a header line containing the label for each. For
        example:

         __[ content1 ]__
         content for content1.
 
         __[ content2 ]__
         content
         for
         content2

        and access each string by referring to its label.

    *   Data::Section::Seekable - Read and write parts from data section

        Author: PERLANCAR <https://metacpan.org/author/PERLANCAR>

        This module is similar to Data::Section in letting you put several
        multipart content in DATA with the exception that it writes a table
        of content (TOC) of all parts at the beginning of DATA, e.g.:

         __DATA__
         Data::Section::Seekable v1
         part1,0,14
         part2,14,17,important
 
         This is part1
         This is part
         two

        The first paragraph after DATA is called the TOC which lists all the
        parts along with their offsets and lengths. It is therefore possible
        to locate any part just from reading the TOC instead of scanning for
        headers on the whole data. It is useful when the amount of data is
        quite large and you need quick access to random parts.

    *   Inline::Files - Multiple virtual files at the end of your code

        Author: AMBS <https://metacpan.org/author/AMBS>

        This is a prior art for Data::Section but more magical (using source
        filters) and allows writing in addition to reading your parts. It
        completely replaces DATA with an unlimited number of LABEL's. I'd be
        wary in using it, and the module itself gives such warning.

FAQ
  What is an Acme::CPANModules::* module?
    An Acme::CPANModules::* module, like this module, contains just a list
    of module names that share a common characteristics. It is a way to
    categorize modules and document CPAN. See Acme::CPANModules for more
    details.

  What are ways to use this Acme::CPANModules module?
    Aside from reading this Acme::CPANModules module's POD documentation,
    you can install all the listed modules (entries) using cpanm-cpanmodules
    script (from App::cpanm::cpanmodules distribution):

     % cpanm-cpanmodules -n StructuredDATA

    Alternatively you can use the cpanmodules CLI (from App::cpanmodules
    distribution):

        % cpanmodules ls-entries StructuredDATA | cpanm -n

    or Acme::CM::Get:

        % perl -MAcme::CM::Get=StructuredDATA -E'say $_->{module} for @{ $LIST->{entries} }' | cpanm -n

    or directly:

        % perl -MAcme::CPANModules::StructuredDATA -E'say $_->{module} for @{ $Acme::CPANModules::StructuredDATA::LIST->{entries} }' | cpanm -n

    This Acme::CPANModules module also helps lcpan produce a more meaningful
    result for "lcpan related-mods" command when it comes to finding related
    modules for the modules listed in this Acme::CPANModules module. See
    App::lcpan::Cmd::related_mods for more details on how "related modules"
    are found.

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/Acme-CPANModules-StructuredDATA>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-Acme-CPANModules-StructuredDATA>.

SEE ALSO
    Acme::CPANModules - about the Acme::CPANModules namespace

    cpanmodules - CLI tool to let you browse/view the lists

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla plugin and/or Pod::Weaver::Plugin. Any additional
    steps required beyond that are considered a bug and can be reported to
    me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2022, 2019 by perlancar
    <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=Acme-CPANModules-Stru
    cturedDATA>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

