NAME
    App::metasyn - Alternative front-end to Acme::MetaSyntactic

VERSION
    This document describes version 0.006 of App::metasyn (from Perl
    distribution App-metasyn), released on 2021-02-21.

SYNOPSIS
    Use the included script metasyn.

FUNCTIONS
  metasyn
    Usage:

     metasyn(%args) -> [status, msg, payload, meta]

    Alternative front-end to Acme::MetaSyntactic.

    Examples:

    *   List all installed themes:

         metasyn( action => "list-themes");

        Result:

         [
           200,
           "OK",
           [
             "abba",
             "afke",
             "alice",
             "alphabet",
         # ...snipped 137 lines for brevity...
             "viclones",
             "wales_towns",
             "weekdays",
             "yapc",
             "zodiac",
           ],
           {},
         ]

    *   List 3 random themes:

         metasyn( action => "list-themes", number => 3, shuffle => 1);

        Result:

         [
           200,
           "OK",
           ["display_resolution", "loremipsum", "jabberwocky"],
           {},
         ]

    *   List all installed themes, along with all their categories:

         metasyn( action => "list-themes", categories => 1);

        Result:

         [
           200,
           "OK",
           [
             "abba",
             "afke",
             "alice",
             "alphabet/en",
         # ...snipped 2209 lines for brevity...
             "zodiac/Chinese",
             "zodiac/Vedic",
             "zodiac/Western",
             "zodiac/Western/Real",
             "zodiac/Western/Traditional",
           ],
           {},
         ]

    *   List all names from a theme:

         metasyn( theme => "foo");

        Result:

         [
           200,
           "OK",
           [
             "foo",
             "bar",
             "baz",
             "foobar",
         # ...snipped 37 lines for brevity...
             "weide",
             "does",
             "hok",
             "duif",
             "schapen",
           ],
           {},
         ]

    *   List all names from a theme in random order, return only 3:

         metasyn( theme => "christmas/elf", number => 3, shuffle => 1);

        Result:

         [200, "OK", ["opneslae", "minstix", "snowball"], {}]

    *   List all categories from a theme:

         metasyn( theme => "christmas", categories => 1);

        Result:

         [200, "OK", ["elf", "reindeer", "santa", "snowman"], {}]

    This script is an alternative front-end to Acme::MetaSyntactic. Compared
    to the official CLI meta, this CLI is more oriented towards listing
    names instead of giving you one or several random names.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   action => *str* (default: "list-names")

    *   categories => *bool*

    *   number => *posint*

        Limit only return this number of results.

    *   shuffle => *bool*

    *   theme => *str*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (payload) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-metasyn>.

SOURCE
    Source repository is at <https://github.com/perlancar/perl-App-metasyn>.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://github.com/perlancar/perl-App-metasyn/issues>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

AUTHOR
    perlancar <perlancar@cpan.org>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2021, 2019, 2017 by perlancar@cpan.org.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

