NAME
    App::BorderStyleUtils - CLI utilities related to border styles

VERSION
    This document describes version 0.012 of App::BorderStyleUtils (from
    Perl distribution App-BorderStyleUtils), released on 2021-04-24.

DESCRIPTION
    This distribution contains the following CLI utilities:

    *   list-border-style-modules

    *   show-border-style

FUNCTIONS
  list_border_style_modules
    Usage:

     list_border_style_modules(%args) -> [status, msg, payload, meta]

    List BorderStyle modules.

    Examples:

    *   List style names:

         list_border_style_modules();

        Result:

         [
           200,
           "OK",
           [
             "ASCII::None",
             "ASCII::SingleLine",
             "ASCII::SingleLineDoubleAfterHeader",
             "ASCII::SingleLineHorizontalOnly",
             "ASCII::SingleLineInnerOnly",
             "ASCII::SingleLineOuterOnly",
             "ASCII::SingleLineVerticalOnly",
             "ASCII::Space",
             "ASCII::SpaceInnerOnly",
             "BoxChar::None",
             "BoxChar::SingleLine",
             "BoxChar::SingleLineHorizontalOnly",
             "BoxChar::SingleLineInnerOnly",
             "BoxChar::SingleLineOuterOnly",
             "BoxChar::SingleLineVerticalOnly",
             "BoxChar::Space",
             "BoxChar::SpaceInnerOnly",
             "Test::CustomChar",
             "Test::Labeled",
             "Test::Random",
             "UTF8::Brick",
             "UTF8::BrickOuterOnly",
             "UTF8::DoubleLine",
             "UTF8::None",
             "UTF8::SingleLine",
             "UTF8::SingleLineBold",
             "UTF8::SingleLineBoldHeader",
             "UTF8::SingleLineCurved",
             "UTF8::SingleLineDoubleAfterHeader",
             "UTF8::SingleLineHorizontalOnly",
             "UTF8::SingleLineInnerOnly",
             "UTF8::SingleLineOuterOnly",
             "UTF8::SingleLineVerticalOnly",
             "UTF8::Space",
             "UTF8::SpaceInnerOnly",
           ],
           {},
         ]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   detail => *bool*

        Currently does not do anything yet.

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (payload) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  show_border_style
    Usage:

     show_border_style(%args) -> [status, msg, payload, meta]

    Show example table with specified border style.

    Examples:

    *   Show the details for the ASCII::SingleLineDoubleAfterHeader border
        style:

         show_border_style(style => "ASCII::SingleLineDoubleAfterHeader");

        Result:

         [
           200,
           "OK",
           "# Positions for border character\n\n ---------------------------------------------\n y\\x  0    1    2    3    4    5    6    7\n  0  '.'  '-'  '+'  '.'                              <--- top border\n  1  '|'  '|'  '|'                                   <--- header row\n  2  '+'  '='  '+'  '+'  '+'  '+'                    <--- separator between header & data row\n  3  '|'  '|'  '|'                                   <--- data row\n  4  '+'  '-'  '+'  '+'  '+'  '+'  '+'  '+'          <--- separator between data rows\n  5  '`'  '-'  '+'  '''                              <--- bottom border\n\n  6  ''  ''  ''  ''                              <--- top border (for case when there is no header row)\n  7  ''  ''  ''  ''                              <--- bottom border (for case when there is header row but no data row)\n ---------------------------------------------\n\n.--------+--------.     #\n| header | header |     #\n+========+========+     #\n| cell   | cell   |     # Table with header row, without row/column spans\n+--------+--------+     #\n| cell   | cell   |     #\n`--------+--------'     #\n\n     #\n| cell   | cell   |     # Table without header row, with data rows\n+--------+--------+     #\n| cell   | cell   |     #\n`--------+--------'     #\n\n.--------+--------.     #\n| header | header |     # Table with header row, but without any data row\n     #\n\n.-----------+-----+-----.     #\n| header    | hea | hea |     #\n+=====+=====+=====+=====+     #\n| cel | cel | cell      |     #\n+-----+-----+-----+-----+     #\n| cell      | cel | cel |     #\n+-----------+-----+-----+     # Table with row/column spans\n| cell      | cell      |     #\n|           +-----------+     #\n|           | cell      |     #\n+-----------+           |     #\n| cell      |           |     #\n`-----------+-----------'     #\n",
           {},
         ]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   style* => *perl::borderstyle::modname_with_optional_args*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (payload) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-BorderStyleUtils>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-App-BorderStyleUtils>.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-BorderStyleUtils>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

SEE ALSO
    BorderStyle

AUTHOR
    perlancar <perlancar@cpan.org>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2021, 2020 by perlancar@cpan.org.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

