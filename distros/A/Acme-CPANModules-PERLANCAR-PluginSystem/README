NAME
    Acme::CPANModules::PERLANCAR::PluginSystem - List of my
    modules/frameworks which use a particular plugin system style

VERSION
    This document describes version 0.002 of
    Acme::CPANModules::PERLANCAR::PluginSystem (from Perl distribution
    Acme-CPANModules-PERLANCAR-PluginSystem), released on 2023-07-23.

DESCRIPTION
    This is a personal list of my modules/frameworks which use a particular
    plugin system style which I will someday extract into its own framework
    (Plugin::System). (And I am also slowly converting more of my
    plugin-supporting projects to use this style). Some of the features of
    this particular plugin style:

    *   a plugin can be installed more than once and parameterized (like in
        Dist::Zilla or Pod::Weaver) [flexibility];

    *   execution order of plugins is by priority, then by its order of
        activation;

    *   a plugin has a default priority value but the value can be overriden
        by user [flexibility];

    *   a plugin has a default event in which it participates, but user can
        overrides this [flexibility];

    *   support for repeating an event [flexibility];

    *   support for skipping (aborting) an event [flexibility];

ACME::CPANMODULES ENTRIES
    Plugin::System
        The current name of what the plugin system will be refactored into.

    ScriptX
        Author: PERLANCAR <https://metacpan.org/author/PERLANCAR>

        Started in late 2019, this is the first framework where the I
        thought out the rough feature set that I want. ScriptX was written
        to eventually replace Perinci::CmdLine: I want a framework that can
        be used to write web scripts/form handlers as well as CLI scripts,
        with more flexibility in composing behavior/functionality (i.e.
        plugin-based). But turns out I haven't had enough time to hack on
        it, and making CLI scripts are 99% of what I use Perl for; thus
        Perinci::CmdLine lives on for now (with plugins since 1.900).

    Perinci::CmdLine::Lite
        Author: PERLANCAR <https://metacpan.org/author/PERLANCAR>

        While waiting for ScriptX to get into a usable form, I implemented a
        similar system to my CLI framework, Perinci::CmdLine starting from
        1.900 (released in Oct 2020).

    Require::HookPlugin
        Another project where I implemented the same plugin system to a
        require hook framework. Require::HookPlugin (RHP) was started in
        July 2023 because I found hook ordering in Require::HookChain (RHC)
        to be fragile and error-prone. Plus, I want more customizability and
        composability than what RHC provides.

FAQ
  What is an Acme::CPANModules::* module?
    An Acme::CPANModules::* module, like this module, contains just a list
    of module names that share a common characteristics. It is a way to
    categorize modules and document CPAN. See Acme::CPANModules for more
    details.

  What are ways to use this Acme::CPANModules module?
    Aside from reading this Acme::CPANModules module's POD documentation,
    you can install all the listed modules (entries) using cpanm-cpanmodules
    script (from App::cpanm::cpanmodules distribution):

     % cpanm-cpanmodules -n PERLANCAR::PluginSystem

    Alternatively you can use the cpanmodules CLI (from App::cpanmodules
    distribution):

        % cpanmodules ls-entries PERLANCAR::PluginSystem | cpanm -n

    or Acme::CM::Get:

        % perl -MAcme::CM::Get=PERLANCAR::PluginSystem -E'say $_->{module} for @{ $LIST->{entries} }' | cpanm -n

    or directly:

        % perl -MAcme::CPANModules::PERLANCAR::PluginSystem -E'say $_->{module} for @{ $Acme::CPANModules::PERLANCAR::PluginSystem::LIST->{entries} }' | cpanm -n

    This Acme::CPANModules module also helps lcpan produce a more meaningful
    result for "lcpan related-mods" command when it comes to finding related
    modules for the modules listed in this Acme::CPANModules module. See
    App::lcpan::Cmd::related_mods for more details on how "related modules"
    are found.

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/Acme-CPANModules-PERLANCAR-PluginSystem>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-Acme-CPANModules-PERLANCAR-PluginSyst
    em>.

SEE ALSO
    Acme::CPANModules - about the Acme::CPANModules namespace

    cpanmodules - CLI tool to let you browse/view the lists

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR,
    Pod::Weaver::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla- and/or Pod::Weaver plugins. Any additional steps
    required beyond that are considered a bug and can be reported to me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2023 by perlancar <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=Acme-CPANModules-PERL
    ANCAR-PluginSystem>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

