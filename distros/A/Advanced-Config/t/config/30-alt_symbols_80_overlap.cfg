#
# File:  30-alt_symbols_80_overlap.cfg
#
# Tests out swapping back & forth between the main section
# and two other sections.  Each section defines the same values!
#
# --------------------------------------------------------------

a = "A is for Apple!"
b = B is for Bat!      # A comment
c = 'C is for Cat!'    # Another comment

# Another comment ...
d = D is for Dog!      # Comment (####) ...
e = "E is for Elephant!"
f = 'F is for Frog!"   # Unbalanced Quotes are not removed.
g = G is for Gold Fish!
g = $fooled you        # Not a variable substitution!
h_pwd = "Hello World!"    # Should't appear in fish.

[ duplicate ]
a = "A is for Apple!"
b = B is for Bat!      # A comment
c = 'C is for Cat!'    # Another comment

# Another comment ...
d = D is for Dog!      # Comment (####) ...
e = "E is for Elephant!"
f = 'F is for Frog!"   # Unbalanced Quotes are not removed.
g = G is for Gold Fish!
g = $fooled you        # Not a variable substitution!
h_pwd = "Hello World!"    # Should't appear in fish.

[ variable ]
a = ${a}
b = ${b}      # A comment
c = ${c}      # Another comment
d = ${d}      # Comment (####) ...
e = ${e}
f = ${f}      # Unbalanced Quotes are not removed.
g = ${g}
g = $fooled you        # Not a variable substitution!
h_pwd = "${h_pwd}"     # Should't appear in fish.

# --------------------------------------------------------------

[ main ]
one = ONE
two = TWO
three = THREE

[ duplicate ]
one = ONE
two = TWO
three = THREE

[ variable ]
one = ONE
two = TWO
three = THREE

# --------------------------------------------------------------

[ main ]
# All 3 evaluate to the same value ...
number 1 = "${one} ${two} ${three}"
number 2 = '${one} ${two} ${three}'
number 3 =  ${one} ${two} ${three}

# All 3 evaluate to the same value again ...
number 6 = "${one} ${two} ${three}"    # A comment ...
number 5 = '${one} ${two} ${three}'    # A comment ...
number 4 =  ${one} ${two} ${three}     # A comment ...

number 8 = ${number 1}

[ duplicate ]
number 1 = "${one} ${two} ${three}"
number 2 = '${one} ${two} ${three}'
number 3 =  ${one} ${two} ${three}
number 6 = "${one} ${two} ${three}"    # A comment ...
number 5 = '${one} ${two} ${three}'    # A comment ...
number 4 =  ${one} ${two} ${three}     # A comment ...
number 8 = ${number 1}

[ variable ]
number 1 = "${duplicate.number 1}"
number 2 = '${duplicate.number 2}'
number 3 =  ${duplicate.number 3} 
number 6 = "${duplicate.number 6}"    # A comment ...
number 5 = '${duplicate.number 5}'    # A comment ...
number 4 =  ${duplicate.number 4}     # A comment ...
number 8 = ${number 1}

# --------------------------------------------------------------

[ main ]
rule8 missing = ${undefined}    # Returns "" as it's value.

# Testing the special variables ... (Rule 0)
shft3 = "zzzzzzzzz"         # Line should be ignored!

cmt  = ${shft3}
cmt2 = ${shft33}
cmt3 = ${shft333}

[ duplicate ]
rule8 missing = ${undefined}    # Returns "" as it's value.
shft3 = "zzzzzzzzz"         # Line should be ignored!
cmt  = ${shft3}
cmt2 = ${shft33}
cmt3 = ${shft333}

[ variable ]
rule8 missing = ${undefined}    # Returns "" as it's value.
shft3 = "zzzzzzzzz"         # Line should be ignored!
cmt  = ${shft3}
cmt2 = ${shft33}
cmt3 = ${shft333}

# --------------------------------------------------------------

[ main ]
# Look up these 3 special perl variables ... (Rule 5)
rule5_pid  = ${$}          # Different per test ...
rule5_prog = ${0}
rule5_os   = ${^O}

# Look up these special variables ... (Rule 6)
rule6_host = ${hostname}
rule6_user = ${user}
rule6_pid  = ${PID}       # Should match ${rule5_pid}
rule6_ppid = ${PPID}      # Different per test ...
rule6_p    = ${program}
rule6_sep  = ${sep}       # Varies by OS

[ duplicate ]
rule5_pid  = ${$}          # Different per test ...
rule5_prog = ${0}
rule5_os   = ${^O}
rule6_host = ${hostname}
rule6_user = ${user}
rule6_pid  = ${PID}       # Should match ${rule5_pid}
rule6_ppid = ${PPID}      # Different per test ...
rule6_p    = ${program}
rule6_sep  = ${sep}       # Varies by OS

[ variable ]
rule5_pid  = ${$}          # Different per test ...
rule5_prog = ${0}
rule5_os   = ${^O}
rule6_host = ${hostname}
rule6_user = ${user}
rule6_pid  = ${PID}       # Should match ${rule5_pid}
rule6_ppid = ${PPID}      # Different per test ...
rule6_p    = ${program}
rule6_sep  = ${sep}       # Varies by OS

# --------------------------------------------------------------

[ main ]
# Here are some dates we are interested in!

# The date keywords use rule 7 ... So mixes rule 6 & 7.
log1 = t${sep}logs${sep}${program}.${today}.txt
log2 = t${sep}logs${sep}${program}.${yesterday}.txt
log3 = t${sep}logs${sep}${program}.${tomorrow}.txt

# Here are some strange variables to see what happens!
empty_1 = ${}
empty_2 = ${   }
empty_3 = abc ${} xyz
empty_4 = abc ${   } xyz

[ duplicate ]
log1 = t${sep}logs${sep}${program}.${today}.txt
log2 = t${sep}logs${sep}${program}.${yesterday}.txt
log3 = t${sep}logs${sep}${program}.${tomorrow}.txt

empty_1 = ${}
empty_2 = ${   }
empty_3 = abc ${} xyz
empty_4 = abc ${   } xyz

[ variable ]
log1 = t${sep}logs${sep}${program}.${today}.txt
log2 = t${sep}logs${sep}${program}.${yesterday}.txt
log3 = t${sep}logs${sep}${program}.${tomorrow}.txt

empty_1 = ${}
empty_2 = ${   }
empty_3 = abc ${} xyz
empty_4 = abc ${   } xyz


# -------------------------------------------------------
# Defines the variables to look up for 30-alt_symbol_control.cfg

[ control ]
main = main
duplicate = duplicate
variable = variable
