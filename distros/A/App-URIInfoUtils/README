NAME
    App::URIInfoUtils - Utilities related to URI::Info

VERSION
    This document describes version 0.003 of App::URIInfoUtils (from Perl
    distribution App-URIInfoUtils), released on 2021-11-26.

DESCRIPTION
    This distributions provides the following command-line utilities:

    *   uri-info

FUNCTIONS
  uri_info
    Usage:

     uri_info(%args) -> [$status_code, $reason, $payload, \%result_meta]

    Extract information from one or more URIs.

    Examples:

    *   Example #1:

         uri_info(
           uris => [
             "https://www.tokopedia.com/search?st=product&q=comic%20books",
           ]
         );

        Result:

         [
           200,
           "OK",
           [
             {
               host => "www.tokopedia.com",
               is_search => 1,
               search_query => "comic books",
               search_type => "product",
               url => "https://www.tokopedia.com/search?st=product&q=comic%20books",
             },
           ],
           {},
         ]

    *   Example #2:

         uri_info(
           uris => [
             "https://www.google.com/search?client=firefox-b-d&q=how+much+drink+water+everyday",
             "https://www.youtube.com/results?search_query=alkaline+water",
           ]
         );

        Result:

         [
           200,
           "OK",
           [
             {
               host => "www.google.com",
               is_search => 1,
               search_query => "how much drink water everyday",
               search_source => "google",
               search_type => "search",
               url => "https://www.google.com/search?client=firefox-b-d&q=how+much+drink+water+everyday",
             },
             {
               host => "www.youtube.com",
               url  => "https://www.youtube.com/results?search_query=alkaline+water",
             },
           ],
           {},
         ]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   uris* => *array[str]*

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-URIInfoUtils>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-App-URIInfoUtils>.

SEE ALSO
    URI::Info

    parse-search-string-from-url from App::ParseSearchStringFromURL, which
    is currently based from URI::ParseSearchString.

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla plugin and/or Pod::Weaver::Plugin. Any additional
    steps required beyond that are considered a bug and can be reported to
    me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2021 by perlancar <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-URIInfoUtils>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

