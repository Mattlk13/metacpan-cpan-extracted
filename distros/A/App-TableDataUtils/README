NAME
    App::TableDataUtils - Routines related to table data

VERSION
    This document describes version 0.052 of App::TableDataUtils (from Perl
    distribution App-TableDataUtils), released on 2023-09-23.

DESCRIPTION
    This distribution includes a few utility scripts related to table data.

    *   gen-rand-table

    *   td2csv

    *   this-tabledata-mod

FUNCTIONS
  gen_rand_aoaos
    Usage:

     gen_rand_aoaos(%args) -> [$status_code, $reason, $payload, \%result_meta]

    Generate array of (array of scalars) with random values.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   num_columns => *int* (default: 3)

        Number of columns.

    *   num_rows => *int* (default: 10)

        Number of rows.

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

  gen_rand_aohos
    Usage:

     gen_rand_aohos(%args) -> [$status_code, $reason, $payload, \%result_meta]

    Generate array of (hash of scalars) with random values.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   num_columns => *int* (default: 3)

        Number of columns.

    *   num_rows => *int* (default: 10)

        Number of rows.

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

  gen_rand_aos
    Usage:

     gen_rand_aos(%args) -> [$status_code, $reason, $payload, \%result_meta]

    Generate array of scalars with random values.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   num_elems => *int* (default: 10)

        Number of elements.

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

  gen_rand_hash
    Usage:

     gen_rand_hash(%args) -> [$status_code, $reason, $payload, \%result_meta]

    Generate hash with random keys/values.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   num_keys => *int* (default: 10)

        Number of keys.

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

  td2csv
    Usage:

     td2csv() -> [$status_code, $reason, $payload, \%result_meta]

    Convert table data in STDIN to CSV.

    Actually alias for "td as-csv".

    This function is not exported.

    No arguments.

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-TableDataUtils>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-App-TableDataUtils>.

SEE ALSO
    td from App::td

    TableDef

    tabledata from App::tabledata, TableData, "TableData::*" modules.

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR,
    Pod::Weaver::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla- and/or Pod::Weaver plugins. Any additional steps
    required beyond that are considered a bug and can be reported to me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2023, 2020, 2015 by perlancar
    <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-TableDataUtils>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

