NAME
    App::BPOMUtils::Additives - Utilities related to food additives in BPOM

VERSION
    This document describes version 0.003 of App::BPOMUtils::Additives (from
    Perl distribution App-BPOMUtils-Additives), released on 2023-02-05.

DESCRIPTION
    This distributions provides the following command-line utilities:

    *   convert-benzoate-unit

FUNCTIONS
  convert_benzoate_unit
    Usage:

     convert_benzoate_unit(%args) -> [$status_code, $reason, $payload, \%result_meta]

    Convert a benzoate quantity from one unit to another.

    Examples:

    *   Show all possible conversions:

         convert_benzoate_unit(quantity => "ppm");

        Result:

         [
           200,
           "OK",
           [
             { amount => 1, unit => "ppm" },
             { amount => 0.847408229824443, unit => "ppm-as-benzoic-acid" },
             { amount => 1, unit => "ppm-as-sodium-benzoate" },
             { amount => 1, unit => "ppm-as-na-benzoate" },
             { amount => 1.04239816806606, unit => "ppm-as-potassium-benzoate" },
             { amount => 1.04239816806606, unit => "ppm-as-k-benzoate" },
             { amount => 2.31174254831314, unit => "ppm-as-calcium-benzoate" },
             { amount => 2.31174254831314, unit => "ppm-as-ca-benzoate" },
           ],
           {},
         ]

    *   Convert from ppm (as sodium benzoate) to ppm (as benzoic acid):

         convert_benzoate_unit(quantity => "250 ppm", to_unit => "ppm-as-benzoic-acid");

        Result:

         [200, "OK", 211.852057456111, {}]

    If target unit is not specified, will show all known conversions.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   quantity* => *str*

        (No description)

    *   to_unit => *str*

        (No description)

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-BPOMUtils-Additives>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-App-BPOMUtils-Additives>.

SEE ALSO
    Other "App::BPOMUtils::*" distributions.

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR,
    Pod::Weaver::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla- and/or Pod::Weaver plugins. Any additional steps
    required beyond that are considered a bug and can be reported to me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2023 by perlancar <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-BPOMUtils-Additiv
    es>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

