NAME
    App::podtohtml - Convert POD to HTML

VERSION
    This document describes version 0.010 of App::podtohtml (from Perl
    distribution App-podtohtml), released on 2022-05-14.

FUNCTIONS
  podtohtml
    Usage:

     podtohtml(%args) -> [$status_code, $reason, $payload, \%result_meta]

    Convert POD to HTML.

    Examples:

    *   Convert POD file to HTML, print result to STDOUT:

         podtohtml(infile => "some.pod");

    *   Convert POD file to HTML, show result in browser:

         podtohtml(infile => "some.pod", browser => 1);

    *   Convert POD file to HTML, show result in browser using the MetaCPAN
        template to give an idea how it will look on MetaCPAN:

         podtohtml(infile => "some.pod", browser => 1, template => "metacpan-20180911");

    *   Convert POD file to HTML, show result in browser using the sco
        template to give an idea how it will look on (now-dead)
        search.cpan.org:

         podtohtml(infile => "some.pod", browser => 1, template => "sco-20180123");

    *   Convert POD file to HTML, show result in browser using the
        perldoc.perl.org template to give an idea how it will look on
        perldoc.perl.org:

         podtohtml(
             infile   => "some.pod",
           browser  => 1,
           template => "perldoc_perl_org-20180911"
         );

    *   List which templates are available:

         podtohtml(list_templates => 1);

    This is a thin wrapper for Pod::Html and an alternative CLI to pod2html
    to remove some annoyances that I experience with "pod2html", e.g. the
    default cache directory being "." (so it leaves ".tmp" files around).
    This CLI also offers templates and tab completion.

    It does not yet offer as many options as "pod2html".

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   browser => *true*

        Instead of outputing HTML to STDOUT/file, view it in browser.

    *   infile => *perl::pod_or_pm_filename* (default: "-")

        Input file (POD).

        If not found, will search in for .pod or .pm files in @INC.

    *   list_templates => *true*

        List available templates.

    *   outfile => *filename*

    *   template => *str*

        Pick a template to use, only relevant with --browser.

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

  podtohtml_metacpan
    Usage:

     podtohtml_metacpan(%args) -> [$status_code, $reason, $payload, \%result_meta]

    Show POD documentation roughly like how MetaCPAN would display it.

    This is a shortcut for:

     % podtohtml --template metacpan-20180911 --browser <infile>
     % podtohtml --metacpan <infile>

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   infile => *perl::pod_or_pm_filename* (default: "-")

        Input file (POD).

        If not found, will search in for .pod or .pm files in @INC.

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-podtohtml>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-App-podtohtml>.

SEE ALSO
    pod2html, Pod::Html

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla plugin and/or Pod::Weaver::Plugin. Any additional
    steps required beyond that are considered a bug and can be reported to
    me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2022, 2021, 2019, 2018, 2017 by perlancar
    <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-podtohtml>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

