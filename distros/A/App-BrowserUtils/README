NAME
    App::BrowserUtils - Utilities related to browsers, particularly modern
    GUI ones

VERSION
    This document describes version 0.004 of App::BrowserUtils (from Perl
    distribution App-BrowserUtils), released on 2020-04-11.

SYNOPSIS
DESCRIPTION
    This distribution includes several utilities related to browsers:

    *   browsers-are-paused

    *   kill-browsers

    *   pause-browsers

    *   ps-browsers

    *   terminate-browsers

    *   unpause-browsers

    Supported browsers: Firefox on Linux, Opera on Linux, Chrome on Linux,
    and Vivaldi on Linux.

FUNCTIONS
  browsers_are_paused
    Usage:

     browsers_are_paused(%args) -> [status, msg, payload, meta]

    Check whether browsers are paused.

    Browser is defined as paused if *all* of its processes are in 'stop'
    state.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   quiet => *true*

    *   users => *array[unix::local_uid]*

        Kill browser processes that belong to certain user(s) only.

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (payload) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  pause_browsers
    Usage:

     pause_browsers(%args) -> [status, msg, payload, meta]

    Pause (kill -STOP) browsers.

    A modern browser now runs complex web pages and applications. Despite
    browser's power management feature, these pages/tabs on the browser
    often still eat considerable CPU cycles even though they only run in the
    background. Stopping (kill -STOP) the browser processes is a simple and
    effective way to stop CPU eating on Unix. It can be performed whenever
    you are not using your browsers for a little while, e.g. when you are
    typing on an editor or watching a movie. When you want to use your
    browser again, simply unpause it.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   users => *array[unix::local_uid]*

        Kill browser processes that belong to certain user(s) only.

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (payload) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  ps_browsers
    Usage:

     ps_browsers(%args) -> [status, msg, payload, meta]

    List browser processes.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   users => *array[unix::local_uid]*

        Kill browser processes that belong to certain user(s) only.

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (payload) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  terminate_browsers
    Usage:

     terminate_browsers(%args) -> [status, msg, payload, meta]

    Terminate (kill -KILL) browsers.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   users => *array[unix::local_uid]*

        Kill browser processes that belong to certain user(s) only.

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (payload) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  unpause_browsers
    Usage:

     unpause_browsers(%args) -> [status, msg, payload, meta]

    Unpause (resume, continue, kill -CONT) browsers.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   users => *array[unix::local_uid]*

        Kill browser processes that belong to certain user(s) only.

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (payload) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-BrowserUtils>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-App-BrowserUtils>.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-BrowserUtils>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

SEE ALSO
    Utilities using this distribution: App::FirefoxUtils, App::ChromeUtils,
    App::OperaUtils, App::VivaldiUtils

    App::BrowserOpenUtils

AUTHOR
    perlancar <perlancar@cpan.org>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2020, 2019 by perlancar@cpan.org.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

