NAME
    App::CalendarDatesUtils - Utilities related to Calendar::Dates

VERSION
    This document describes version 0.011 of App::CalendarDatesUtils (from
    Perl distribution App-CalendarDatesUtils), released on 2019-12-11.

DESCRIPTION
    This distributions provides the following command-line utilities:

    *   list-calendar-dates

    *   list-calendar-dates-modules

FUNCTIONS
  list_calendar_dates
    Usage:

     list_calendar_dates(%args) -> [status, msg, payload, meta]

    List dates from one or more Calendar::Dates::* modules.

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   action => *str* (default: "list-dates")

    *   all_entries => *true*

        Return all entries (include low-priority ones).

        By default, low-priority entries (entries tagged "low-priority") are
        not included. This option will include those entries.

        When combined with --all-years, this option will also cause all very
        early years and all years far into the future to be included also.

    *   all_modules => *true*

        Use all installed Calendar::Dates::* modules.

    *   all_years => *true*

        List dates from all available years instead of a single year.

        Note that by default, following common usage pattern, dates with
        years that are too old (< 10 years ago) or that are too far into the
        future (> 10 years from now) are not included, unless you combine
        this option with --all-entries (-A).

    *   day => *int*

    *   detail => *bool*

        Whether to show detailed record for each date.

    *   exclude_tags => *array[str]*

    *   include_tags => *array[str]*

    *   max_year => *int*

    *   min_year => *int*

    *   modules => *array[perl::modname]*

        Name(s) of Calendar::Dates::* module (without the prefix).

    *   month => *int*

    *   params => *hash*

        Specify parameters.

    *   past => *bool*

        Only show entries that are less than (at least) today's date.

    *   year => *int*

        Specify year of dates to list.

        The default is to list dates in the current year. You can specify
        all_years instead to list dates from all available years.

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (payload) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  list_calendar_dates_modules
    Usage:

     list_calendar_dates_modules() -> [status, msg, payload, meta]

    List Calendar::Dates::* modules, without the prefix.

    This function is not exported.

    No arguments.

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (payload) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/App-CalendarDatesUtils>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-App-CalendarDatesUtils>.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=App-CalendarDatesUtil
    s>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

SEE ALSO
AUTHOR
    perlancar <perlancar@cpan.org>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2019 by perlancar@cpan.org.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

