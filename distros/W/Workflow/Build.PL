
# This file was automatically generated by Dist::Zilla::Plugin::ModuleBuild v6.012.
use strict;
use warnings;

use Module::Build 0.30;


my %module_build_args = (
  "build_requires" => {
    "Module::Build" => "0.30"
  },
  "configure_requires" => {
    "ExtUtils::MakeMaker" => 0,
    "Module::Build" => "0.30"
  },
  "dist_abstract" => "Simple, flexible system to implement workflows",
  "dist_author" => [
    "Chris Winters <chris\@cwinters.com>"
  ],
  "dist_name" => "Workflow",
  "dist_version" => "1.48",
  "license" => "perl",
  "module_name" => "Workflow",
  "recommends" => {
    "SPOPS" => 0
  },
  "recursive_test_files" => 1,
  "requires" => {
    "Carp" => 0,
    "Class::Accessor" => "0.18",
    "Class::Factory" => "1.00",
    "Class::Observable" => "1.04",
    "DBI" => 0,
    "Data::Dumper" => 0,
    "Data::UUID" => 0,
    "DateTime" => "0.15",
    "DateTime::Format::Strptime" => "1.00",
    "Exception::Class" => "1.10",
    "File::Slurp" => 0,
    "Log::Dispatch" => "2.00",
    "Log::Log4perl" => "0.34",
    "Safe" => 0,
    "XML::Simple" => "2.00",
    "perl" => "5.006"
  },
  "test_requires" => {
    "DBD::Mock" => "0.10",
    "File::Spec" => 0,
    "IO::Handle" => 0,
    "IPC::Open3" => 0,
    "List::MoreUtils" => 0,
    "Pod::Coverage::TrustPod" => 0,
    "Test::Exception" => 0,
    "Test::Kwalitee" => "1.21",
    "Test::More" => "0.88",
    "Test::Pod" => "1.41",
    "Test::Pod::Coverage" => "1.08"
  }
);


my %fallback_build_requires = (
  "DBD::Mock" => "0.10",
  "File::Spec" => 0,
  "IO::Handle" => 0,
  "IPC::Open3" => 0,
  "List::MoreUtils" => 0,
  "Module::Build" => "0.30",
  "Pod::Coverage::TrustPod" => 0,
  "Test::Exception" => 0,
  "Test::Kwalitee" => "1.21",
  "Test::More" => "0.88",
  "Test::Pod" => "1.41",
  "Test::Pod::Coverage" => "1.08"
);


unless ( eval { Module::Build->VERSION(0.4004) } ) {
  delete $module_build_args{test_requires};
  $module_build_args{build_requires} = \%fallback_build_requires;
}

my $build = Module::Build->new(%module_build_args);


$build->create_build_script;
