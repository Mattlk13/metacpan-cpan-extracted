{"digest":"37efc68932484e38cfddc04503c174f4","statement":[5,5,5,6,6,6,8,8,8,9,9,9,10,10,10,11,11,11,12,12,12,13,13,13,14,14,14,15,15,15,16,16,16,17,17,17,18,18,18,19,19,19,223,223,223,53,57,61,63,64,70,71,72,72,75,76,76,77,81,83,82,85,84,86,86,90,94,93,96,96,101,102,107,109,111,112,114,115,118,121,122,123,124,130,131,137,135,136,142,143,149,147,148,153,154,160,158,159,164,165,172,169,170,176,177,181,180,180,185,187,190,190,194,198,197,201,201,203,209,214,219,221,222,227,226,231,230,233,238,235,236,237,239],"start":{"153":{"atmost":[{"subroutine":31,"pod":9,"time":null,"condition":3,"branch":8,"statement":93}]},"130":{"times":[{"statement":83,"pod":7,"branch":6,"subroutine":27,"time":null,"condition":3}]},"5":{"BEGIN":[{"statement":null,"subroutine":null,"time":null,"condition":null,"branch":null,"pod":null}]},"90":{"throws":[{"pod":4,"branch":3,"time":null,"condition":null,"subroutine":22,"statement":65}]},"219":{"class_mock":[{"statement":120,"pod":16,"condition":4,"branch":12,"subroutine":40,"time":null}]},"53":{"mock":[{"condition":null,"subroutine":15,"pod":null,"time":null,"branch":null,"statement":45}]},"214":{"SlurpyHash":[{"branch":12,"pod":15,"subroutine":39,"condition":4,"time":null,"statement":119}]},"185":{"inspect_all":[{"pod":12,"branch":10,"condition":3,"subroutine":36,"time":null,"statement":108}]},"9":{"BEGIN":[{"condition":null,"subroutine":3,"time":null,"branch":null,"pod":null,"statement":9}]},"96":{"__ANON__":[{"subroutine":24,"branch":4,"pod":5,"time":null,"condition":1,"statement":70}]},"93":{"__ANON__":[{"time":null,"subroutine":23,"condition":1,"branch":4,"pod":5,"statement":70}]},"169":{"__ANON__":[{"condition":3,"subroutine":34,"time":null,"branch":10,"pod":11,"statement":103}]},"158":{"__ANON__":[{"statement":98,"pod":10,"time":null,"branch":9,"subroutine":32,"condition":3}]},"8":{"BEGIN":[{"branch":null,"pod":null,"condition":null,"subroutine":2,"time":null,"statement":6}]},"236":{"__ANON__":[{"statement":133,"time":null,"pod":17,"branch":14,"subroutine":41,"condition":4}]},"82":{"__ANON__":[{"statement":65,"condition":null,"pod":4,"branch":3,"subroutine":19,"time":null}]},"57":{"spy":[{"time":null,"condition":null,"pod":1,"subroutine":16,"branch":null,"statement":46}]},"147":{"__ANON__":[{"subroutine":30,"time":null,"condition":3,"pod":9,"branch":8,"statement":93}]},"-1":{"__COVER__":[{"condition":4,"time":null,"branch":14,"subroutine":42,"pod":17,"statement":133}]},"12":{"BEGIN":[{"subroutine":6,"condition":null,"time":null,"pod":null,"branch":null,"statement":18}]},"84":{"__ANON__":[{"subroutine":20,"branch":3,"condition":null,"time":null,"pod":4,"statement":65}]},"101":{"executes":[{"time":null,"condition":1,"pod":5,"subroutine":25,"branch":4,"statement":70}]},"15":{"BEGIN":[{"statement":27,"branch":null,"subroutine":9,"pod":null,"time":null,"condition":null}]},"18":{"BEGIN":[{"statement":36,"subroutine":12,"time":null,"pod":null,"condition":null,"branch":null}]},"6":{"BEGIN":[{"branch":null,"condition":null,"time":null,"subroutine":1,"pod":null,"statement":3}]},"223":{"BEGIN":[{"subroutine":14,"pod":null,"time":null,"condition":null,"branch":null,"statement":42}]},"17":{"BEGIN":[{"branch":null,"subroutine":11,"pod":null,"condition":null,"time":null,"statement":33}]},"19":{"BEGIN":[{"time":null,"pod":null,"branch":null,"subroutine":13,"condition":null,"statement":39}]},"81":{"returns":[{"statement":58,"condition":null,"time":null,"pod":3,"subroutine":18,"branch":1}]},"135":{"__ANON__":[{"condition":3,"time":null,"pod":8,"subroutine":28,"branch":7,"statement":88}]},"107":{"called_ok":[{"time":null,"pod":6,"condition":1,"subroutine":26,"branch":4,"statement":72}]},"142":{"atleast":[{"condition":3,"subroutine":29,"time":null,"branch":7,"pod":8,"statement":88}]},"10":{"BEGIN":[{"statement":12,"branch":null,"subroutine":4,"time":null,"condition":null,"pod":null}]},"61":{"stub":[{"statement":47,"pod":2,"branch":null,"subroutine":17,"time":null,"condition":null}]},"86":{"__ANON__":[{"statement":65,"time":null,"branch":3,"pod":4,"condition":null,"subroutine":21}]},"16":{"BEGIN":[{"statement":30,"subroutine":10,"condition":null,"time":null,"branch":null,"pod":null}]},"11":{"BEGIN":[{"statement":15,"condition":null,"time":null,"branch":null,"subroutine":5,"pod":null}]},"13":{"BEGIN":[{"statement":21,"condition":null,"subroutine":7,"time":null,"pod":null,"branch":null}]},"176":{"inspect":[{"subroutine":35,"time":null,"condition":3,"branch":10,"pod":11,"statement":103}]},"14":{"BEGIN":[{"statement":24,"branch":null,"pod":null,"time":null,"subroutine":8,"condition":null}]},"164":{"between":[{"statement":98,"condition":3,"pod":10,"branch":9,"time":null,"subroutine":33}]},"209":{"SlurpyArray":[{"statement":118,"condition":4,"time":null,"pod":14,"subroutine":38,"branch":12}]},"194":{"clear":[{"pod":13,"branch":11,"time":null,"condition":3,"subroutine":37,"statement":112}]}},"subroutine":[[5,"BEGIN"],[6,"BEGIN"],[8,"BEGIN"],[9,"BEGIN"],[10,"BEGIN"],[11,"BEGIN"],[12,"BEGIN"],[13,"BEGIN"],[14,"BEGIN"],[15,"BEGIN"],[16,"BEGIN"],[17,"BEGIN"],[18,"BEGIN"],[19,"BEGIN"],[223,"BEGIN"],[53,"mock"],[57,"spy"],[61,"stub"],[81,"returns"],[82,"__ANON__"],[84,"__ANON__"],[86,"__ANON__"],[90,"throws"],[93,"__ANON__"],[96,"__ANON__"],[101,"executes"],[107,"called_ok"],[130,"times"],[135,"__ANON__"],[142,"atleast"],[147,"__ANON__"],[153,"atmost"],[158,"__ANON__"],[164,"between"],[169,"__ANON__"],[176,"inspect"],[185,"inspect_all"],[194,"clear"],[209,"SlurpyArray"],[214,"SlurpyHash"],[219,"class_mock"],[236,"__ANON__"]],"pod":[[53,"mock"],[57,"spy"],[61,"stub"],[81,"returns"],[90,"throws"],[101,"executes"],[107,"called_ok"],[130,"times"],[142,"atleast"],[153,"atmost"],[164,"between"],[176,"inspect"],[185,"inspect_all"],[194,"clear"],[209,"SlurpyArray"],[214,"SlurpyHash"],[219,"class_mock"]],"branch":[[64,{"text":"if ref $_ ne 'CODE'"}],[83,{"text":"if @return_values == 1"}],[85,{"text":"if @return_values > 1"}],[94,{"text":"if blessed($exception[0]) and $exception[0]->can('throw')"}],[111,{"text":"if (@_ > 0 and ref $_[0] eq 'CODE')"}],[114,{"text":"if (@_ > 0)"}],[131,{"text":"unless Num->check($n)"}],[143,{"text":"unless Num->check($n)"}],[154,{"text":"unless Num->check($n)"}],[165,{"text":"unless NumRange->check([$lower, $upper])"}],[187,{"text":"unless MockType->check($mock)"}],[198,{"text":"if not @mocks or grep {not MockType->check($_);} @mocks"}],[227,{"text":"if defined ${$caller_pkg . '::INC';}{$module_file}"}],[231,{"text":"if defined *{$mocked_class . '::AUTOLOAD';}{'CODE'}"}]],"condition":[[94,{"type":"and_3","right":"$exception[0]->can('throw')","op":"and","left":"blessed($exception[0])"}],[111,{"right":"ref $_[0] eq 'CODE'","op":"and","left":"@_ > 0","type":"and_3"}],[122,{"right":"&times(1)","left":"$called_ok","op":"||=","type":"or_3"}],[198,{"type":"or_3","left":"not @mocks","op":"or","right":"grep {not MockType->check($_);} @mocks"}]],"file":"blib/lib/Test/Mocha.pm"}