NAME

    Task::BeLike::KWAKWA - Be more like KWAKWA!

TASK CONTENTS

 Apps

  App::Ack

        # search Perl related files (.pl, .pm, .t)
        $ ack --perl foo
    
        # search Perl files except .t
        $ echo "--type-add=plpm=.pl,.pm" >> ~/.ackrc
        $ ack --plpm foo

  App::ForkProve

  Module::Version for mversion

        $ mversion Mojolicious
        7.61

 DateTime manipulation

  DateTime::Format::ISO8601

        my $dt = DateTime::Format::ISO8601->parse_datetime('2018-01-01T00:00:00Z');

 Filesystem

 File::chdir more sensible way to change directories

 Module management

  Pod::Readme

 Testing

    Testing is hard to get right. Consider when writing tests which
    category the test falls under and test and organise appropriately.
    Typically they can be categorized as integration tests (how major parts
    of a system work together), unit tests (exercising modules),
    functional/user acceptance tests (use case scenarios, BDD).

    Avoid using if statements. If your tests have branches, your tests need
    tests.

  Test::BDD::Cucumber

  Test::MockTime

  Test::Mojo can be used to test Dancer2 apps too.

  Test2::Suite use Test2::V0

  Test2::Tools::Exception

 Web

  Catalyst

  Dancer2

  Mojolicious

AUTHOR

    Paul Williams <kwakwa@cpan.org>

COPYRIGHT

    Copyright 2018- Paul Williams

LICENSE

    This library is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

SEE ALSO

    Task::BeLike::DAGOLDEN, Task::BeLike::RJBS.

