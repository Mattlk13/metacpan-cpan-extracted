   _____         _           _____                    
  |_   _|____  _| |_   _ _  |  ___|   _ _________   _ 
    | |/ _ \ \/ / __| (_|_) | |_ | | | |_  /_  / | | |
    | |  __/>  <| |_   _ _  |  _|| |_| |/ / / /| |_| |
    |_|\___/_/\_\\__| (_|_) |_|   \__,_/___/___|\__, |
                                                |___/ 


This is the README for Text::Fuzzy version 0.29.

Text::Fuzzy is a "module" for the Perl computer programming language, a
library of computer code to install on a computer.  This document contains
four sections:

1. About - what the module does

2. Documentation - how to learn more about the module

3. Installation - how to install this module on a computer

4. Help - what to do if you get stuck

-----------------------------------------------------------------------------

1. ABOUT

Text::Fuzzy - Partial string matching using edit distances

This module calculates edit distances between words, and searches
arrays and files to find the nearest entry by edit distance. It
handles both byte strings and character strings (strings containing
Unicode), treating each Unicode character as a single entity.

    
    use Text::Fuzzy;
    use utf8;
    my $tf = Text::Fuzzy->new ('あいうえお☺');
    print $tf->distance ('うえお☺'), "\n";

produces output

    2

(This example is included as "unicode.pl" in the distribution.)

The default edit distance is the Levenshtein one, which counts each
addition ("cat" -> "cart"), substitution ("cat" -> "cut"), and
deletion ("carp" -> "cap") as one unit. The Damerau-Levenshtein edit
distance, which also allows transpositions ("salt" -> "slat") may
also be selected with the "transpositions_ok" method or the
"trans" option.

This module is particularly suited to searching for the nearest match
to a term over a list of words, using the "nearestv" or "nearest"
methods. It studies the target string to be matched (the first
argument to "new") to build information to rapidly reject mismatches
in a list. Since computing the Levenshtein and Damerau-Levenshtein
edit distances with the Wagner-Fischer algorithm is computationally
expensive, the module offers a boost in performance for searching for
a string in a list of words.

-----------------------------------------------------------------------------

2. DOCUMENTATION

You can read the documentation for the module online at the following
website:

    * http://metacpan.org/release/Text-Fuzzy

(This link goes to the latest version of the module.)

After installing the module, you can read the documentation on your
computer using

    perldoc Text::Fuzzy

-----------------------------------------------------------------------------

3. INSTALLATION

This module requires Perl version 5.8.1 or later.

To install the module from CPAN, use

    cpan Text::Fuzzy

If you have the App::cpanminus installer, you may prefer

    cpanm Text::Fuzzy

To install the module from the source file, Text-Fuzzy-0.29.tar.gz, follow
this sequence of commands:

    tar xfz Text-Fuzzy-0.29.tar.gz
    cd Text-Fuzzy-0.29
    perl Makefile.PL
    make
    make install

If you want to test the module before installing it, use "make test" after
"make" and before "make install".

-----------------------------------------------------------------------------

4. HELP

To get help with the module, you can email the author, Ben Bullock, at
<bkb@cpan.org>. If you think there is a problem in the module, you can
report a bug at 

<https://github.com/benkasminbullock/Text-Fuzzy/issues>,

or if you want to alter the source code of Text::Fuzzy, try the public
repository on github at 

<https://github.com/benkasminbullock/Text-Fuzzy>. 

-----------------------------------------------------------------------------

This README was written on Thu Dec 10 14:38:54 2020.

-----------------------------------------------------------------------------
