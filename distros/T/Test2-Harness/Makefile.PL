# This file was automatically generated by Dist::Zilla::Plugin::MakeMaker v6.008.
use strict;
use warnings;

use 5.008001;

use ExtUtils::MakeMaker;

my %WriteMakefileArgs = (
  "ABSTRACT" => "Test2 based test harness.",
  "AUTHOR" => "Chad Granum <exodist\@cpan.org>",
  "CONFIGURE_REQUIRES" => {
    "ExtUtils::MakeMaker" => 0
  },
  "DISTNAME" => "Test2-Harness",
  "EXE_FILES" => [
    "scripts/yath"
  ],
  "LICENSE" => "perl",
  "MIN_PERL_VERSION" => "5.008001",
  "NAME" => "Test2::Harness",
  "PREREQ_PM" => {
    "Carp" => 0,
    "File::Find" => 0,
    "File::Temp" => 0,
    "Getopt::Long" => "2.36",
    "IO::Handle" => "1.27",
    "IPC::Open3" => 0,
    "JSON::PP" => 0,
    "List::Util" => 0,
    "POSIX" => 0,
    "Scalar::Util" => 0,
    "Symbol" => 0,
    "Term::ANSIColor" => 0,
    "Test2" => "1.302071",
    "Test2::AsyncSubtest" => "0.000013",
    "Test2::Bundle::Extended" => "0.000063",
    "Time::HiRes" => 0
  },
  "VERSION" => "0.000013",
  "test" => {
    "TESTS" => "t/*.t t/units/*.t t/units/Formatter/*.t t/units/Harness/*.t t/units/Harness/Parser/*.t t/units/Harness/Renderer/*.t"
  }
);


my %FallbackPrereqs = (
  "Carp" => 0,
  "File::Find" => 0,
  "File::Temp" => 0,
  "Getopt::Long" => "2.36",
  "IO::Handle" => "1.27",
  "IPC::Open3" => 0,
  "JSON::PP" => 0,
  "List::Util" => 0,
  "POSIX" => 0,
  "Scalar::Util" => 0,
  "Symbol" => 0,
  "Term::ANSIColor" => 0,
  "Test2" => "1.302071",
  "Test2::AsyncSubtest" => "0.000013",
  "Test2::Bundle::Extended" => "0.000063",
  "Time::HiRes" => 0
);

# inserted by Dist::Zilla::Plugin::DynamicPrereqs 0.032
if ($^O eq 'MSWin32') {
requires('Win32::Console::ANSI','0');
}



unless ( eval { ExtUtils::MakeMaker->VERSION(6.63_03) } ) {
  delete $WriteMakefileArgs{TEST_REQUIRES};
  delete $WriteMakefileArgs{BUILD_REQUIRES};
  $WriteMakefileArgs{PREREQ_PM} = \%FallbackPrereqs;
}

delete $WriteMakefileArgs{CONFIGURE_REQUIRES}
  unless eval { ExtUtils::MakeMaker->VERSION(6.52) };

WriteMakefile(%WriteMakefileArgs);

# inserted by Dist::Zilla::Plugin::DynamicPrereqs 0.032
sub _add_prereq {
  my ($mm_key, $module, $version_or_range) = @_;
  $version_or_range ||= 0;
  warn "$module already exists in $mm_key -- need to do a sane metamerge!"
    if exists $WriteMakefileArgs{$mm_key}{$module}
      and $WriteMakefileArgs{$mm_key}{$module} ne '0'
      and $WriteMakefileArgs{$mm_key}{$module} ne $version_or_range;
  warn "$module already exists in FallbackPrereqs -- need to do a sane metamerge!"
    if exists $FallbackPrereqs{$module} and $FallbackPrereqs{$module} ne '0'
        and $FallbackPrereqs{$module} ne $version_or_range;
  $WriteMakefileArgs{$mm_key}{$module} = $FallbackPrereqs{$module} = $version_or_range;
  return;
}

sub requires { goto &runtime_requires }

sub runtime_requires {
  my ($module, $version_or_range) = @_;
  _add_prereq(PREREQ_PM => $module, $version_or_range);
}
