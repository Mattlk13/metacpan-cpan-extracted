.# Title: Condition that is a directive - top level & in sub
.# NewOpt: PipeOK 1
.#
.# This needs to be tested several ways due to implementation subtleties:
.# In line and in a sub
.# .if vs .unless vs .elseif
.# .while vs .until vs .for
.# .sub vs the built in directives: .include .read .test
.# Nested vs top level loops & straight ifs
.# In various combinations.
.#
.#
.include -s echo | echo The man in the moon
.if .read -s echo line
.echo Read line: '\v{line}' - EOF = \v{_EOF}
.else
Error: did not read line
.fi
After if

.if .read -s echo line
Unexpected Read line: \v{line}
.else
.echo Expected read EOF - \v{_EOF}
.fi
.#
.close -s echo
.#
.#
9 1752
.include -s cal |cal 9 1752
.#
.while .read -s cal line
.echo Read line '\v{line}'
.done
.close -s cal
.#
.#
3 1955
.include -s cal |cal 3 1955
.#
.for ;; .read -s cal line ;;
.echo Read line '\v{line}'
.done
.close -s cal
.#
.#
.sub a
8 2016
.include -s cal |cal 8 2016
.#
.while .read -s cal line
.echo Read line '\v{line}'
.done
.close -s cal
.#
.#
1 2000
.include -s cal |cal 1 2000
.#
.for ;; .read -s cal line ;;
.echo Read line '\v{line}'
.done
.close -s cal
.#
.done
.#
Defined .a
.#
.a
.#
EOF
