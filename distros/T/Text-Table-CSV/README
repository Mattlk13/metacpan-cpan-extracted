SYNOPSIS

     use Text::Table::CSV;
    
     my $rows = [
         # header row
         ['Name', 'Rank', 'Serial'],
         # rows
         ['alice', 'pvt', '123456'],
         ['bob',   'cpl', '98765321'],
         ['carol', 'brig gen', '8745'],
     ];
     print Text::Table::CSV::table(rows => $rows, header_row => 1);

DESCRIPTION

    This module provides a single function, table, which formats a
    two-dimensional array of data as CSV. This is basically a way to
    generate CSV using the same interface as that of Text::Table::Tiny
    (v0.03) or Text::Table::Org.

    The example shown in the SYNOPSIS generates the following table:

     "Name","Rank","Serial"
     "alice","pvt","123456"
     "bob","cpl","98765321"
     "carol","brig gen","8745"

FUNCTIONS

 table(%params) => str

 OPTIONS

    The table function understands these arguments, which are passed as a
    hash.

      * rows (aoaos)

      Takes an array reference which should contain one or more rows of
      data, where each row is an array reference.

SEE ALSO

    The de-facto module for handling CSV in Perl: Text::CSV, Text::CSV_XS.

    See also Bencher::Scenario::TextTableModules.

