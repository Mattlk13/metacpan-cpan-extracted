# This file was automatically generated by Dist::Zilla::Plugin::MakeMaker v6.020.
use strict;
use warnings;

use 5.013002;

use ExtUtils::MakeMaker;

use File::ShareDir::Install;
$File::ShareDir::Install::INCLUDE_DOTFILES = 1;
$File::ShareDir::Install::INCLUDE_DOTDIRS = 1;
install_share dist => "share";


my %WriteMakefileArgs = (
  "ABSTRACT" => "FFI bindings for libtcod",
  "AUTHOR" => "Jos\x{e9} Joaqu\x{ed}n Atria <jjatria\@cpan.org>",
  "CONFIGURE_REQUIRES" => {
    "ExtUtils::MakeMaker" => 0,
    "FFI::Build::MM" => "0.83",
    "File::ShareDir::Install" => "0.06"
  },
  "DISTNAME" => "TCOD",
  "LICENSE" => "perl",
  "MIN_PERL_VERSION" => "5.013002",
  "NAME" => "TCOD",
  "PREREQ_PM" => {
    "Encode" => 0,
    "FFI::C" => 0,
    "FFI::Platypus" => 0,
    "Import::Into" => 0,
    "Ref::Util" => 0,
    "Role::Tiny" => 0,
    "Sub::Util" => "1.40"
  },
  "TEST_REQUIRES" => {
    "ExtUtils::MakeMaker" => 0,
    "File::Spec" => 0,
    "Test2::Suite" => 0,
    "Test::More" => 0
  },
  "VERSION" => "0.009",
  "test" => {
    "TESTS" => "t/*.t"
  }
);


my %FallbackPrereqs = (
  "Encode" => 0,
  "ExtUtils::MakeMaker" => 0,
  "FFI::C" => 0,
  "FFI::Platypus" => 0,
  "File::Spec" => 0,
  "Import::Into" => 0,
  "Ref::Util" => 0,
  "Role::Tiny" => 0,
  "Sub::Util" => "1.40",
  "Test2::Suite" => 0,
  "Test::More" => 0
);


# BEGIN code inserted by Dist::Zilla::Plugin::FFI::Build
use FFI::Build::MM 0.83;
my $fbmm = FFI::Build::MM->new;
%WriteMakefileArgs = $fbmm->mm_args(%WriteMakefileArgs);
# END code inserted by Dist::Zilla::Plugin::FFI::Build


unless ( eval { ExtUtils::MakeMaker->VERSION(6.63_03) } ) {
  delete $WriteMakefileArgs{TEST_REQUIRES};
  delete $WriteMakefileArgs{BUILD_REQUIRES};
  $WriteMakefileArgs{PREREQ_PM} = \%FallbackPrereqs;
}

delete $WriteMakefileArgs{CONFIGURE_REQUIRES}
  unless eval { ExtUtils::MakeMaker->VERSION(6.52) };

WriteMakefile(%WriteMakefileArgs);

{
package
MY;
use File::ShareDir::Install qw(postamble);
}


# BEGIN code inserted by Dist::Zilla::Plugin::FFI::Build
BEGIN {
  # append to any existing postamble.
  if(my $old = MY->can('postamble'))
  {
    no warnings 'redefine';
    *MY::postamble = sub {
      $old->(@_) .
      "\n" .
      $fbmm->mm_postamble;
    };
  }
  else
  {
    *MY::postamble = sub {
      $fbmm->mm_postamble;
    };
  }
}
# END code inserted by Dist::Zilla::Plugin::FFI::Build

