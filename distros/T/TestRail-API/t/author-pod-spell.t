
BEGIN {
  unless ($ENV{AUTHOR_TESTING}) {
    print qq{1..0 # SKIP these tests are for testing by the author\n};
    exit
  }
}

use strict;
use warnings;
use Test::More;

# generated by Dist::Zilla::Plugin::Test::PodSpelling 2.007005
use Test::Spelling 0.12;
use Pod::Wordlist;


add_stopwords(<DATA>);
all_pod_files_spelling_ok( qw( bin lib ) );
__DATA__
API
Andy
Anwar
App
Baugh
Bowers
EOFCallback
Find
GETTERS
George
Harness
Koston
Lock
Matthew
Mohammad
Neil
Nick
POSTs
Parser
Plugin
Prove
Rail
Results
Rinaldo
Ryan
Sherer
Spahr
TESTSUITE
TODO
Test
TestRail
TestSuite
Todd
Utils
addCaseField
admin
api
apiurl
assignedto
assignee
autoclose
bailoutCallback
bin
buildStepResults
bulkAddResults
cPanel
cachefile
closePlan
closeRun
commentCallback
createMilestone
createPlan
createProject
createRun
createRunInPlan
createTestResults
createTestSuite
csv
deleteCase
deleteMilestone
deletePlan
deleteProject
deleteRun
deleteSection
deleteTestSuite
doge
downrange
findResults
findRuns
findTests
george
getCaseByID
getCaseByName
getCaseFields
getCaseTypeByName
getCaseTypes
getCases
getChildRunByName
getChildRuns
getChildSections
getConfigurationGroups
getConfigurations
getMilestoneByID
getMilestoneByName
getMilestones
getPlanByID
getPlanByName
getPlanSummary
getPlans
getPlansPaginated
getPossibleTestStatuses
getPriorityByName
getProjectByID
getProjectByName
getProjects
getReports
getRunByID
getRunByName
getRunInformation
getRunSummary
getRuns
getRunsPaginated
getSectionByID
getSectionByName
getSections
getTestByID
getTestByName
getTestResults
getTestSuiteByID
getTestSuiteByName
getTestSuites
getTests
getUsers
ipsa
judgements
lib
lifo
lockTest
lockname
loquiter
matthew
milesort
mohammad
mpspahr
neil
nick
parseConfig
perfile
pl
planCallback
pm
runReport
ryan
stepResult
teodesian
testCallback
testrail
testrailrc
testsuite
testsuites
thomas
toddr
unknownCallback
userInput
