NAME
    StreamFinder - Fetch actual raw streamable URLs from various
    radio-station websites.

INSTALLATION
            To install this module, run the following commands:

            perl Makefile.PL

            make

            make test

            make install

AUTHOR
    This module is Copyright (C) 2017-2019 by

    Jim Turner, "<turnerjw784 at yahoo.com>"

    Email: turnerjw784@yahoo.com

    All rights reserved.

    You may distribute this module under the terms of either the GNU General
    Public License or the Artistic License, as specified in the Perl README
    file.

SYNOPSIS
            use strict;

            use StreamFinder;

            my $station = new StreamFinder(<url>);

            die "Invalid URL or no streams found!\n"  unless ($station);

            my $firstStream = $station->get();

            print "First Stream URL=$firstStream\n";

            my $url = $station->getURL();

            print "Stream URL=$url\n";

            my $stationTitle = $station->getTitle();
        
            print "Title=$stationTitle\n";
        
            my $stationID = $station->getID();

            print "Station ID=$stationID\n";
        
            my $icon_url = $station->getIconURL();

            if ($icon_url) {   #SAVE THE ICON TO A TEMP. FILE:

                    my ($image_ext, $icon_image) = $station->getIconData();

                    if ($icon_image && open IMGOUT, ">/tmp/${stationID}.$image_ext") {

                            binmode IMGOUT;

                            print IMGOUT $icon_image;

                            close IMGOUT;

                    }

            }

            my $stream_count = $station->count();

            print "--Stream count=$stream_count=\n";

            my @streams = $station->get();

            foreach my $s (@streams) {

                    print "------ stream URL=$s=\n";

            }

DESCRIPTION
    StreamFinder accepts a valid radio station URL on supported websites and
    returns the actual stream URL(s), title, and cover art icon for that
    station. The purpose is that one needs one of these URLs in order to
    have the option to stream the station/video in one's own choice of audio
    player software rather than using their web browser and accepting any /
    all flash, ads, javascript, cookies, trackers, web-bugs, and other
    crapware that can come with that method of playing. The author uses his
    own custom all-purpose media player called "fauxdacious" (his custom
    hacked version of the open-source "audacious" audio player).
    "fauxdacious" incorporates this module to decode and play streams. The
    currently-supported websites are: radionomy.com, iheartradio.com,
    reciva.com, radio.net, facebook, banned.video, and youtube / vimeo /
    brighteon, et. al. We are again supporting tunein.com, but it may not
    work for all stations!

    Each site is supported by a separate subpackage
    (StreamFinder::*Package*), which is determined and selected based on the
    url when the StreamFinder object is created. The methods are overloaded
    by the selected subpackage's methods.

    One or more playable streams can be returned for each station.

SUBROUTINES/METHODS
    new(*url* [, *options* ])
        Accepts a URL and creates and returns a new station object, or
        *undef* if the URL is not a valid station or no streams are found.

        *options* can vary depending on the type of stream (site) that is
        being queried. One option common to all sites is *-debug*, which
        turns on debugging output. A numeric option can follow specifying
        the level (0, 1, or 2). 0 is none, 1 is basic, 2 is detailed.
        Default: 1 (if *-debug* is specified).

    $station->get()
        Returns an array of strings representing all stream urls found.

    $station->getURL([*options*])
        Similar to get() except it only returns a single stream representing
        the first valid stream found.

        Current options are: *-random* and *-noplaylists*. By default, the
        first ("best"?) stream is returned. If *-random* is specified, then
        a random one is selected from the list of streams found. If
        *-noplaylists* is specified, and the stream to be returned is a
        "playlist" (.pls extension), it is first fetched and the first entry
        in the playlist is returned. This is needed by Fauxdacious
        Mediaplayer.

    $station->count()
        Returns the number of streams found for the station.

    $station->getStationID()
        Returns the station's ID.

    $station->getTitle()
        Returns the station's title (description).

    $station->getIconURL()
        Returns the url for the station's "cover art" icon image, if any.

    $station->getIconData()
        Returns a two-element array consisting of the extension (ie. "png",
        "gif", "jpeg", etc. and the actual icon image (binary data), if any.

    $station->getImageURL()
        Returns the url for the station's "cover art" banner image, if any.

    $station->getImageData()
        Returns a two-element array consisting of the extension (ie. "png",
        "gif", "jpeg", etc. and the actual station's banner image (binary
        data).

CONFIGURATION FILES
    ~/.config/StreamFinder/config
        Optional text file for specifying various configuration options.
        Each option is specified on a separate line in the format below:

        'option' => 'value' [,]

        and the options are loaded into a hash used by all sites
        (submodules) that support them. Valid options include *-debug* =>
        [0|1|2], and most of the LWP::UserAgent options. Blank lines and
        lines starting with a "#" sign are ignored.

    ~/.config/StreamFinder/submodule/config
        Optional text file for specifying various configuration options for
        a specific site (submodule). Each option is specified on a separate
        line in the format below:

        'option' => 'value' [,]

        and the options are loaded into a hash used only by the specific
        (submodule) specified. Valid options include *-debug* => [0|1|2],
        and most of the LWP::UserAgent options.

        Options specified here override any specified in
        *~/.config/StreamFinder/config*.

    NOTE: Options specified in the options parameter list will override
    those corresponding options specified in these files.

DEPENDENCIES
    LWP::UserAgent

RECCOMENDS
    URI::Escape; (Youtube)

    WWW::YouTube::Download; (Youtube)

    youtube-dl (Youtube, Facebook, Tunein)

    wget (Reciva, Youtube, BannedVideo)

BUGS
    Please report any bugs or feature requests to "bug-streamFinder at
    rt.cpan.org", or through the web interface at
    <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=StreamFinder>. I will be
    notified, and then you'll automatically be notified of progress on your
    bug as I make changes.

SUPPORT
    You can find documentation for this module with the perldoc command.

        perldoc StreamFinder

    You can also look for information at:

SEE ALSO
    Fauxdacious media player -
    (<https://wildstar84.wordpress.com/fauxdacious>)

    *   RT: CPAN's request tracker (report bugs here)

        <http://rt.cpan.org/NoAuth/Bugs.html?Dist=StreamFinder>

    *   AnnoCPAN: Annotated CPAN documentation

        <http://annocpan.org/dist/StreamFinder>

    *   CPAN Ratings

        <http://cpanratings.perl.org/d/StreamFinder>

    *   Search CPAN

        <http://search.cpan.org/dist/StreamFinder/>

LICENSE AND COPYRIGHT
    Copyright 2017-2019 Jim Turner.

    This program is free software; you can redistribute it and/or modify it
    under the terms of the the Artistic License (2.0). You may obtain a copy
    of the full license at:

    <http://www.perlfoundation.org/artistic_license_2_0>

    Any use, modification, and distribution of the Standard or Modified
    Versions is governed by this Artistic License. By using, modifying or
    distributing the Package, you accept this license. Do not use, modify,
    or distribute the Package, if you do not accept this license.

    If your Modified Version has been derived from a Modified Version made
    by someone other than you, you are nevertheless required to ensure that
    your Modified Version complies with the requirements of this license.

    This license does not grant you the right to use any trademark, service
    mark, tradename, or logo of the Copyright Holder.

    This license includes the non-exclusive, worldwide, free-of-charge
    patent license to make, have made, use, offer to sell, sell, import and
    otherwise transfer the Package with respect to any patent claims
    licensable by the Copyright Holder that are necessarily infringed by the
    Package. If you institute patent litigation (including a cross-claim or
    counterclaim) against any party alleging that the Package constitutes
    direct or contributory patent infringement, then this Artistic License
    to you shall terminate on the date that such litigation is filed.

    Disclaimer of Warranty: THE PACKAGE IS PROVIDED BY THE COPYRIGHT HOLDER
    AND CONTRIBUTORS "AS IS' AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.
    THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
    PURPOSE, OR NON-INFRINGEMENT ARE DISCLAIMED TO THE EXTENT PERMITTED BY
    YOUR LOCAL LAW. UNLESS REQUIRED BY LAW, NO COPYRIGHT HOLDER OR
    CONTRIBUTOR WILL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, OR
    CONSEQUENTIAL DAMAGES ARISING IN ANY WAY OUT OF THE USE OF THE PACKAGE,
    EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

