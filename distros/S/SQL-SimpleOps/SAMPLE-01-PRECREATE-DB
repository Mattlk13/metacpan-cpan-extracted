###############################################################################
## use th following command to setup the database test
## this README shown how to get the database commands to create de tables
###############################################################################

## Start

############################################################
## step-01 create database for the tests

## you dont need expor all envs
## export only required engine for your test.

## common envs for each database, mandatory.

# export SQL_SIMPLE_DB_TEST_CREATE_ALLOWED=
# export SQL_SIMPLE_DB_TEST_SKIP_CREATE=
# export SQL_SIMPLE_DB_SHOW_CREATE="1"

## envs to setup the MySQL test instances, required for this engine

# export SQL_SIMPLE_MYSQL="1"
# export SQL_SIMPLE_MYSQL_DB="test_db"
# export SQL_SIMPLE_MYSQL_USER="user_update"
# export SQL_SIMPLE_MYSQL_PASSWORD="password_update"

## envs to setup the Postgres test instances, required for this engine
#
# export SQL_SIMPLE_PG="1"
# export SQL_SIMPLE_PG_DB="test_db"
# export SQL_SIMPLE_PG_SCHEMA="test_db"
# export SQL_SIMPLE_PG_USER="user_update"
# export SQL_SIMPLE_PG_PASSWORD="password_update"

## envs to setup the SQLite test instances, required for this engine

# export SQL_SIMPLE_SQLITE="1"

############################################################
## step-02 show the sql commands for iteractive creation

## you must copy/paste the commands in your prefered database.
## this sample show all sql command for each supported database.

# perl t/testDB.t

# see:	SAMPLE-01-PRECREATE-DB-MYSQL
#	SAMPLE-01-PRECREATE-DB-PG
#	SAMPLE-01-PRECREATE-DB-SQLITE

## Ended

