
package Shipment::FedEx::WSDL::TrackElements::SendNotificationsReply;
$Shipment::FedEx::WSDL::TrackElements::SendNotificationsReply::VERSION = '3.09';
use strict;
use warnings;

{ # BLOCK to scope variables

sub get_xmlns { 'http://fedex.com/ws/track/v9' }

__PACKAGE__->__set_name('SendNotificationsReply');
__PACKAGE__->__set_nillable();
__PACKAGE__->__set_minOccurs();
__PACKAGE__->__set_maxOccurs();
__PACKAGE__->__set_ref();
use base qw(
    SOAP::WSDL::XSD::Typelib::Element
    Shipment::FedEx::WSDL::TrackTypes::SendNotificationsReply
);

}

1;

__END__

=pod

=encoding UTF-8

=head1 NAME

Shipment::FedEx::WSDL::TrackElements::SendNotificationsReply

=head1 VERSION

version 3.09

=head1 DESCRIPTION

Perl data type class for the XML Schema defined element
SendNotificationsReply from the namespace http://fedex.com/ws/track/v9.

=head1 NAME

Shipment::FedEx::WSDL::TrackElements::SendNotificationsReply

=head1 METHODS

=head2 new

 my $element = Shipment::FedEx::WSDL::TrackElements::SendNotificationsReply->new($data);

Constructor. The following data structure may be passed to new():

 { # Shipment::FedEx::WSDL::TrackTypes::SendNotificationsReply
   HighestSeverity => $some_value, # NotificationSeverityType
   Notifications =>  { # Shipment::FedEx::WSDL::TrackTypes::Notification
     Severity => $some_value, # NotificationSeverityType
     Source =>  $some_value, # string
     Code =>  $some_value, # string
     Message =>  $some_value, # string
     LocalizedMessage =>  $some_value, # string
     MessageParameters =>  { # Shipment::FedEx::WSDL::TrackTypes::NotificationParameter
       Id =>  $some_value, # string
       Value =>  $some_value, # string
     },
   },
   TransactionDetail =>  { # Shipment::FedEx::WSDL::TrackTypes::TransactionDetail
     CustomerTransactionId =>  $some_value, # string
     Localization =>  { # Shipment::FedEx::WSDL::TrackTypes::Localization
       LanguageCode =>  $some_value, # string
       LocaleCode =>  $some_value, # string
     },
   },
   Version =>  { # Shipment::FedEx::WSDL::TrackTypes::VersionId
     ServiceId =>  $some_value, # string
     Major =>  $some_value, # int
     Intermediate =>  $some_value, # int
     Minor =>  $some_value, # int
   },
   DuplicateWaybill =>  $some_value, # boolean
   MoreDataAvailable =>  $some_value, # boolean
   PagingToken =>  $some_value, # string
   Packages =>  { # Shipment::FedEx::WSDL::TrackTypes::TrackNotificationPackage
     TrackingNumber =>  $some_value, # string
     TrackingNumberUniqueIdentifiers =>  $some_value, # string
     CarrierCode => $some_value, # CarrierCodeType
     ShipDate =>  $some_value, # date
     Destination =>  { # Shipment::FedEx::WSDL::TrackTypes::Address
       StreetLines =>  $some_value, # string
       City =>  $some_value, # string
       StateOrProvinceCode =>  $some_value, # string
       PostalCode =>  $some_value, # string
       UrbanizationCode =>  $some_value, # string
       CountryCode =>  $some_value, # string
       CountryName =>  $some_value, # string
       Residential =>  $some_value, # boolean
     },
     RecipientDetails =>  { # Shipment::FedEx::WSDL::TrackTypes::TrackNotificationRecipientDetail
       NotificationEventsAvailable => $some_value, # EMailNotificationEventType
     },
   },
 },

=head1 AUTHOR

Generated by SOAP::WSDL

=head1 AUTHOR

Andrew Baerg <baergaj@cpan.org>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2018 by Andrew Baerg.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut
