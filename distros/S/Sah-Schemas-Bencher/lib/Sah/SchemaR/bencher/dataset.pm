package Sah::SchemaR::bencher::dataset;

our $DATE = '2021-07-23'; # DATE
our $VERSION = '1.054.1'; # VERSION

our $rschema = ["hash",[{allowed_keys_re=>qr(\A(?:([A-Za-z_][A-Za-z0-9_]*)|([A-Za-z_][A-Za-z0-9_]*)?\.([A-Za-z_][A-Za-z0-9_]*(?:\.[A-Za-z_][A-Za-z0-9_]*)*))\z),choose_one=>["args","argv"],examples=>[{valid=>1,value=>{}},{valid=>1,value=>{bar=>1,foo=>1}},{summary=>"Invalid property syntax, contains dash",valid=>0,value=>{"foo-bar"=>1}}],keys=>{args=>["hash",{req=>1}],argv=>["aos",{req=>1}],caption=>["str",{req=>1}],default_lang=>["str",{match=>"\\A[a-z]{2}(_[A-Z]{2})?\\z",req=>1},{}],defhash_v=>["int",{default=>1,is=>1,req=>1}],description=>["str",{req=>1}],exclude_participant_tags=>["aos",{req=>1}],include_by_default=>["bool",{default=>1,req=>1}],include_participant_tags=>["aos",{req=>1}],name=>["str",{clset=>[{match=>"\\A\\w+\\z","match.err_level"=>"warn","match.err_msg"=>"should be a word"},{max_len=>32,"max_len.err_level"=>"warn","max_len.err_msg"=>"should be short"}],"clset.op"=>"and",req=>1}],result=>["any",{}],summary=>["str",{clset=>[{max_len=>72,"max_len.err_level"=>"warn","max_len.err_msg"=>"should be short"},{match=>qr(\n),"match.err_level"=>"warn","match.err_msg"=>"should only be a single-line text","match.op"=>"not"}],"clset.op"=>"and",req=>1}],tags=>["array",{of=>["any",{of=>[["str",{req=>1}],["hash",{req=>1}]],req=>1}]}],v=>["int",{default=>1,is=>1,req=>1}],x=>["any",{},{}]},"keys.restrict"=>1,summary=>"A benchmark dataset"}],["defhash","hash"]];

1;
# ABSTRACT: A benchmark dataset

__END__

=pod

=encoding UTF-8

=head1 NAME

Sah::SchemaR::bencher::dataset - A benchmark dataset

=head1 VERSION

This document describes version 1.054.1 of Sah::SchemaR::bencher::dataset (from Perl distribution Sah-Schemas-Bencher), released on 2021-07-23.

=head1 DESCRIPTION

This module is automatically generated by Dist::Zilla::Plugin::Sah::Schemas during distribution build.

A Sah::SchemaR::* module is useful if a client wants to quickly lookup the base type of a schema without having to do any extra resolving. With Sah::Schema::*, one might need to do several lookups if a schema is based on another schema, and so on. Compare for example L<Sah::Schema::poseven> vs L<Sah::SchemaR::poseven>, where in Sah::SchemaR::poseven one can immediately get that the base type is C<int>. Currently L<Perinci::Sub::Complete> uses Sah::SchemaR::* instead of Sah::Schema::* for reduced startup overhead when doing tab completion.

=head1 HOMEPAGE

Please visit the project's homepage at L<https://metacpan.org/release/Sah-Schemas-Bencher>.

=head1 SOURCE

Source repository is at L<https://github.com/perlancar/perl-Sah-Schemas-Bencher>.

=head1 BUGS

Please report any bugs or feature requests on the bugtracker website L<https://rt.cpan.org/Public/Dist/Display.html?Name=Sah-Schemas-Bencher>

When submitting a bug or request, please include a test-file or a
patch to an existing test-file that illustrates the bug or desired
feature.

=head1 AUTHOR

perlancar <perlancar@cpan.org>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2021 by perlancar@cpan.org.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut
