## no critic: TestingAndDebugging::RequireStrict
package Sah::SchemaR::perl::sortkey::modname_with_optional_args;

our $DATE = '2024-03-07'; # DATE
our $VERSION = '0.002'; # VERSION

our $rschema = do{my$var={base=>"str",clsets_after_base=>[{description=>"\nPerl SortKey::* module name without the prefix, with optional arguments which\nwill be used as import arguments, just like the `-MMODULE=ARGS` shortcut that\n`perl` provides. Examples:\n\n    Num::pattern_count\n    Num::pattern_count=pattern,foo\n    Num::pattern_count,pattern,foo\n\nSee also: `perl::sortkey::modname`.\n\n",examples=>[{valid=>0,value=>""},{valid=>1,validated_value=>"Foo::Bar",value=>"Foo/Bar"},{valid=>1,validated_value=>"Foo::Bar=a,1,b,2",value=>"Foo/Bar=a,1,b,2"},{valid=>0,value=>"Foo bar"}],match=>"\\A[A-Za-z_][A-Za-z_0-9]*(::[A-Za-z_0-9]+)*(?:=.*)?\\z",prefilters=>["Perl::normalize_perl_modname"],summary=>"Perl SortKey::* module name without the prefix (e.g. Num::pattern_count) with optional arguments (e.g. Num::pattern_count,pattern,foo)","x.completion"=>["perl_sortkey_modname_with_optional_args"]}],clsets_after_type=>['$var->{clsets_after_base}[0]'],"clsets_after_type.alt.merge.merged"=>['$var->{clsets_after_base}[0]'],resolve_path=>["str"],type=>"str",v=>2};$var->{clsets_after_type}[0]=$var->{clsets_after_base}[0];$var->{"clsets_after_type.alt.merge.merged"}[0]=$var->{clsets_after_base}[0];$var};

1;
# ABSTRACT: Perl SortKey::* module name without the prefix (e.g. Num::pattern_count) with optional arguments (e.g. Num::pattern_count,pattern,foo)

__END__

=pod

=encoding UTF-8

=head1 NAME

Sah::SchemaR::perl::sortkey::modname_with_optional_args - Perl SortKey::* module name without the prefix (e.g. Num::pattern_count) with optional arguments (e.g. Num::pattern_count,pattern,foo)

=head1 VERSION

This document describes version 0.002 of Sah::SchemaR::perl::sortkey::modname_with_optional_args (from Perl distribution Sah-SchemaBundle-SortKey), released on 2024-03-07.

=head1 DESCRIPTION

This module is automatically generated by Dist::Zilla::Plugin::Sah::SchemaBundle during distribution build.

A Sah::SchemaR::* module is useful if a client wants to quickly lookup the base type of a schema without having to do any extra resolving. With Sah::Schema::*, one might need to do several lookups if a schema is based on another schema, and so on. Compare for example L<Sah::Schema::poseven> vs L<Sah::SchemaR::poseven>, where in Sah::SchemaR::poseven one can immediately get that the base type is C<int>. Currently L<Perinci::Sub::Complete> uses Sah::SchemaR::* instead of Sah::Schema::* for reduced startup overhead when doing tab completion.

=head1 HOMEPAGE

Please visit the project's homepage at L<https://metacpan.org/release/Sah-SchemaBundle-SortKey>.

=head1 SOURCE

Source repository is at L<https://github.com/perlancar/perl-Sah-Schemas-SortKey>.

=head1 AUTHOR

perlancar <perlancar@cpan.org>

=head1 CONTRIBUTING


To contribute, you can send patches by email/via RT, or send pull requests on
GitHub.

Most of the time, you don't need to build the distribution yourself. You can
simply modify the code, then test via:

 % prove -l

If you want to build the distribution (e.g. to try to install it locally on your
system), you can install L<Dist::Zilla>,
L<Dist::Zilla::PluginBundle::Author::PERLANCAR>,
L<Pod::Weaver::PluginBundle::Author::PERLANCAR>, and sometimes one or two other
Dist::Zilla- and/or Pod::Weaver plugins. Any additional steps required beyond
that are considered a bug and can be reported to me.

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2024 by perlancar <perlancar@cpan.org>.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=head1 BUGS

Please report any bugs or feature requests on the bugtracker website L<https://rt.cpan.org/Public/Dist/Display.html?Name=Sah-SchemaBundle-SortKey>

When submitting a bug or request, please include a test-file or a
patch to an existing test-file that illustrates the bug or desired
feature.

=cut
