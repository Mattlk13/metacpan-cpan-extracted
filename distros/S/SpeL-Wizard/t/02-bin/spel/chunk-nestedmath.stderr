spel-wizard.pl - v0.9 - Walter Daems <walter.daems@uantwerpen.be>
=================================================================
- Reading configuration file from /home/wdaems/perl5/lib/perl5/auto/share/dist/SpeL-Wizard/tts.conf
- no t/02-bin/spel/chunk-nestedmath.aux available at /home/wdaems/lab/spelbox/perl/lib/SpeL/Wizard.pm line 96.
- Treating t/02-bin/spel/spel/chunk-nestedmath.tex                 
  Parsing t/02-bin/spel/spel/chunk-nestedmath.tex           [  0%]  Parsed  t/02-bin/spel/spel/chunk-nestedmath.tex           [  0%]$Parsetree = bless( {
  'Element' => [
    bless( {
      'MathUnit' => [
        bless( {
          '' => '\\left| \\frac{z_1}{z_2} \\right| &= \\frac{r_1}{r_2}    \\text{~en~}
\\Arg{\\left( \\frac{z_1}{z_2} \\right)} &= \\theta_1 - \\theta_2  \\text{op een
  veelvoud van $2\\pi$ na} 
',
          'Left' => bless( {
            'Absval' => bless( {
              'Component' => bless( {
                'den' => bless( {
                  'Component' => bless( {
                    'Alphabet' => 'z',
                    'trailingws' => ''
                  }, 'SpeL::Object::Variable' ),
                  'Rest' => bless( {
                    'Op' => bless( {
                      'Lit' => '2',
                      'sub' => '_'
                    }, 'SpeL::Object::Subscript' ),
                    'Remainder' => bless( {
                      'ws' => ''
                    }, 'SpeL::Object::Expressionrest' )
                  }, 'SpeL::Object::Expressionrest' )
                }, 'SpeL::Object::Expression' ),
                'num' => bless( {
                  'Component' => bless( {
                    'Alphabet' => 'z',
                    'trailingws' => ''
                  }, 'SpeL::Object::Variable' ),
                  'Rest' => bless( {
                    'Op' => bless( {
                      'Lit' => '1',
                      'sub' => '_'
                    }, 'SpeL::Object::Subscript' ),
                    'Remainder' => bless( {
                      'ws' => ''
                    }, 'SpeL::Object::Expressionrest' )
                  }, 'SpeL::Object::Expressionrest' )
                }, 'SpeL::Object::Expression' )
              }, 'SpeL::Object::Fraction' ),
              'Rest' => bless( {
                'ws' => ''
              }, 'SpeL::Object::Expressionrest' )
            }, 'SpeL::Object::Expression' )
          }, 'SpeL::Object::Expression' ),
          'RelationChain' => [
            {
              'RelOperator' => bless( {
                '' => '&'
              }, 'SpeL::Object::RelOperator' )
            },
            {
              'RelOperator' => bless( {
                '' => '='
              }, 'SpeL::Object::RelOperator' ),
              'Right' => bless( {
                'Component' => bless( {
                  'den' => bless( {
                    'Component' => bless( {
                      'Alphabet' => 'r',
                      'trailingws' => ''
                    }, 'SpeL::Object::Variable' ),
                    'Rest' => bless( {
                      'Op' => bless( {
                        'Lit' => '2',
                        'sub' => '_'
                      }, 'SpeL::Object::Subscript' ),
                      'Remainder' => bless( {
                        'ws' => ''
                      }, 'SpeL::Object::Expressionrest' )
                    }, 'SpeL::Object::Expressionrest' )
                  }, 'SpeL::Object::Expression' ),
                  'num' => bless( {
                    'Component' => bless( {
                      'Alphabet' => 'r',
                      'trailingws' => ''
                    }, 'SpeL::Object::Variable' ),
                    'Rest' => bless( {
                      'Op' => bless( {
                        'Lit' => '1',
                        'sub' => '_'
                      }, 'SpeL::Object::Subscript' ),
                      'Remainder' => bless( {
                        'ws' => ''
                      }, 'SpeL::Object::Expressionrest' )
                    }, 'SpeL::Object::Expressionrest' )
                  }, 'SpeL::Object::Expression' )
                }, 'SpeL::Object::Fraction' ),
                'Rest' => bless( {
                  'Op' => bless( {
                    'Com' => bless( {
                      'Args' => [
                        bless( {
                          'Element' => [
                            bless( {
                              '' => 'en~'
                            }, 'SpeL::Object::TokenSequence' )
                          ]
                        }, 'SpeL::Object::ElementList' )
                      ],
                      'Name' => 'text',
                      'trailingws' => '
'
                    }, 'SpeL::Object::Command' )
                  }, 'SpeL::Object::Binop' ),
                  'Remainder' => bless( {
                    'Component' => bless( {
                      'Args' => [
                        bless( {
                          '' => '\\left( \\frac{z_1}{z_2} \\right)',
                          'Left' => bless( {
                            'Component' => bless( {
                              '' => '\\frac{z_1}{z_2} ',
                              'Left' => bless( {
                                'Component' => bless( {
                                  'den' => bless( {
                                    'Component' => bless( {
                                      'Alphabet' => 'z',
                                      'trailingws' => ''
                                    }, 'SpeL::Object::Variable' ),
                                    'Rest' => bless( {
                                      'Op' => bless( {
                                        'Lit' => '2',
                                        'sub' => '_'
                                      }, 'SpeL::Object::Subscript' ),
                                      'Remainder' => bless( {
                                        'ws' => ''
                                      }, 'SpeL::Object::Expressionrest' )
                                    }, 'SpeL::Object::Expressionrest' )
                                  }, 'SpeL::Object::Expression' ),
                                  'num' => bless( {
                                    'Component' => bless( {
                                      'Alphabet' => 'z',
                                      'trailingws' => ''
                                    }, 'SpeL::Object::Variable' ),
                                    'Rest' => bless( {
                                      'Op' => bless( {
                                        'Lit' => '1',
                                        'sub' => '_'
                                      }, 'SpeL::Object::Subscript' ),
                                      'Remainder' => bless( {
                                        'ws' => ''
                                      }, 'SpeL::Object::Expressionrest' )
                                    }, 'SpeL::Object::Expressionrest' )
                                  }, 'SpeL::Object::Expression' )
                                }, 'SpeL::Object::Fraction' ),
                                'Rest' => bless( {
                                  'ws' => ''
                                }, 'SpeL::Object::Expressionrest' )
                              }, 'SpeL::Object::Expression' )
                            }, 'SpeL::Object::Relation' ),
                            'Rest' => bless( {
                              'ws' => ''
                            }, 'SpeL::Object::Expressionrest' ),
                            'cbracket' => '\\right)',
                            'obracket' => '\\left('
                          }, 'SpeL::Object::Expression' )
                        }, 'SpeL::Object::Relation' )
                      ],
                      'Name' => 'Arg',
                      'trailingws' => ' '
                    }, 'SpeL::Object::Command' ),
                    'Rest' => bless( {
                      'ws' => ''
                    }, 'SpeL::Object::Expressionrest' )
                  }, 'SpeL::Object::Expression' )
                }, 'SpeL::Object::Expressionrest' )
              }, 'SpeL::Object::Expression' )
            },
            {
              'RelOperator' => bless( {
                '' => '&'
              }, 'SpeL::Object::RelOperator' )
            },
            {
              'RelOperator' => bless( {
                '' => '='
              }, 'SpeL::Object::RelOperator' ),
              'Right' => bless( {
                'Component' => bless( {
                  'Greek' => '\\theta',
                  'trailingws' => ''
                }, 'SpeL::Object::Variable' ),
                'Rest' => bless( {
                  'Op' => bless( {
                    'Lit' => '1',
                    'sub' => '_'
                  }, 'SpeL::Object::Subscript' ),
                  'Remainder' => bless( {
                    'Op' => bless( {
                      'Op' => '-'
                    }, 'SpeL::Object::Binop' ),
                    'Remainder' => bless( {
                      'Component' => bless( {
                        'Greek' => '\\theta',
                        'trailingws' => ''
                      }, 'SpeL::Object::Variable' ),
                      'Rest' => bless( {
                        'Op' => bless( {
                          'Lit' => '2',
                          'sub' => '_'
                        }, 'SpeL::Object::Subscript' ),
                        'Remainder' => bless( {
                          'Endtext' => bless( {
                            'Args' => [
                              bless( {
                                'Element' => [
                                  bless( {
                                    '' => 'op een
  veelvoud van '
                                  }, 'SpeL::Object::TokenSequence' ),
                                  bless( {
                                    'MathUnit' => bless( {
                                      '' => '2\\pi',
                                      'Left' => bless( {
                                        'Component' => bless( {
                                          'Realnumber' => bless( {
                                            'Sign' => '',
                                            'Value' => '2',
                                            'trailingws' => ''
                                          }, 'SpeL::Object::Realnumber' )
                                        }, 'SpeL::Object::Number' ),
                                        'Rest' => bless( {
                                          'Op' => bless( {
                                            'Op' => ''
                                          }, 'SpeL::Object::Binop' ),
                                          'Remainder' => bless( {
                                            'Component' => bless( {
                                              'Realnumber' => bless( {
                                                'Sign' => '',
                                                'Value' => '\\pi',
                                                'trailingws' => ''
                                              }, 'SpeL::Object::Realnumber' )
                                            }, 'SpeL::Object::Number' ),
                                            'Rest' => bless( {
                                              'ws' => ''
                                            }, 'SpeL::Object::Expressionrest' )
                                          }, 'SpeL::Object::Expression' )
                                        }, 'SpeL::Object::Expressionrest' )
                                      }, 'SpeL::Object::Expression' )
                                    }, 'SpeL::Object::Relation' )
                                  }, 'SpeL::Object::MathInline' ),
                                  bless( {
                                    '' => 'na'
                                  }, 'SpeL::Object::TokenSequence' )
                                ]
                              }, 'SpeL::Object::ElementList' )
                            ],
                            'Name' => 'text',
                            'trailingws' => ' 
'
                          }, 'SpeL::Object::Command' )
                        }, 'SpeL::Object::Expressionrest' )
                      }, 'SpeL::Object::Expressionrest' )
                    }, 'SpeL::Object::Expression' )
                  }, 'SpeL::Object::Expressionrest' )
                }, 'SpeL::Object::Expressionrest' )
              }, 'SpeL::Object::Expression' )
            }
          ]
        }, 'SpeL::Object::Relation' )
      ],
      'mathtag' => 'align',
      'trailingws' => '
'
    }, 'SpeL::Object::MathEnvironment' ),
    bless( {
      '' => '
'
    }, 'SpeL::Object::TokenSequence' )
  ]
}, 'SpeL::Object::ElementList' );

Done.
