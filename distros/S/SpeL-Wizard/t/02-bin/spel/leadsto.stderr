spel-wizard.pl - v0.9 - Walter Daems <walter.daems@uantwerpen.be>
=================================================================
- Reading configuration file from /home/wdaems/perl5/lib/perl5/auto/share/dist/SpeL-Wizard/tts.conf
- no t/02-bin/spel/leadsto.aux available at /home/wdaems/lab/spelbox/perl/lib/SpeL/Wizard.pm line 96.
- Treating t/02-bin/spel/spel/leadsto.tex                          
  Parsing t/02-bin/spel/spel/leadsto.tex                    [  0%]  Parsed  t/02-bin/spel/spel/leadsto.tex                    [  0%]$Parsetree = bless( {
  'Element' => [
    bless( {
      'MathUnit' => [
        bless( {
          '' => 'z = x + y \\jz    \\leadsto    (x,y)
',
          'Left' => bless( {
            'Component' => bless( {
              'Alphabet' => 'z',
              'trailingws' => ' '
            }, 'SpeL::Object::Variable' ),
            'Rest' => bless( {
              'ws' => ''
            }, 'SpeL::Object::Expressionrest' )
          }, 'SpeL::Object::Expression' ),
          'RelationChain' => [
            {
              'RelOperator' => bless( {
                '' => '='
              }, 'SpeL::Object::RelOperator' ),
              'Right' => bless( {
                'Component' => bless( {
                  'Alphabet' => 'x',
                  'trailingws' => ' '
                }, 'SpeL::Object::Variable' ),
                'Rest' => bless( {
                  'Op' => bless( {
                    'Op' => '+'
                  }, 'SpeL::Object::Binop' ),
                  'Remainder' => bless( {
                    'Component' => bless( {
                      'Alphabet' => 'y',
                      'trailingws' => ' '
                    }, 'SpeL::Object::Variable' ),
                    'Rest' => bless( {
                      'Op' => bless( {
                        'Op' => ''
                      }, 'SpeL::Object::Binop' ),
                      'Remainder' => bless( {
                        'Component' => bless( {
                          'Name' => 'jz',
                          'trailingws' => '    '
                        }, 'SpeL::Object::Command' ),
                        'Rest' => bless( {
                          'ws' => ''
                        }, 'SpeL::Object::Expressionrest' )
                      }, 'SpeL::Object::Expression' )
                    }, 'SpeL::Object::Expressionrest' )
                  }, 'SpeL::Object::Expression' )
                }, 'SpeL::Object::Expressionrest' )
              }, 'SpeL::Object::Expression' )
            },
            {
              'RelOperator' => bless( {
                '' => '\\leadsto'
              }, 'SpeL::Object::RelOperator' ),
              'Right' => bless( {
                'Component' => bless( {
                  '' => 'x,y',
                  'Left' => bless( {
                    'Component' => bless( {
                      'Alphabet' => 'x',
                      'trailingws' => ''
                    }, 'SpeL::Object::Variable' ),
                    'Rest' => bless( {
                      'Op' => bless( {
                        'Op' => ','
                      }, 'SpeL::Object::Binop' ),
                      'Remainder' => bless( {
                        'Component' => bless( {
                          'Alphabet' => 'y',
                          'trailingws' => ''
                        }, 'SpeL::Object::Variable' ),
                        'Rest' => bless( {
                          'ws' => ''
                        }, 'SpeL::Object::Expressionrest' )
                      }, 'SpeL::Object::Expression' )
                    }, 'SpeL::Object::Expressionrest' )
                  }, 'SpeL::Object::Expression' )
                }, 'SpeL::Object::Relation' ),
                'Rest' => bless( {
                  'ws' => ''
                }, 'SpeL::Object::Expressionrest' ),
                'cbracket' => ')',
                'obracket' => '('
              }, 'SpeL::Object::Expression' )
            }
          ]
        }, 'SpeL::Object::Relation' )
      ],
      'mathtag' => 'equation',
      'trailingws' => '
'
    }, 'SpeL::Object::MathEnvironment' ),
    bless( {
      '' => '
'
    }, 'SpeL::Object::TokenSequence' )
  ]
}, 'SpeL::Object::ElementList' );

Done.
