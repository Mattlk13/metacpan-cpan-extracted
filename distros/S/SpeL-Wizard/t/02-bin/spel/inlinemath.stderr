spel-wizard.pl - v0.9 - Walter Daems <walter.daems@uantwerpen.be>
=================================================================
- Reading configuration file from /home/wdaems/perl5/lib/perl5/auto/share/dist/SpeL-Wizard/tts.conf
- no t/02-bin/spel/inlinemath.aux available at /home/wdaems/lab/spelbox/perl/lib/SpeL/Wizard.pm line 96.
- Treating t/02-bin/spel/spel/inlinemath.tex                       
  Parsing t/02-bin/spel/spel/inlinemath.tex                 [  0%]  Parsed  t/02-bin/spel/spel/inlinemath.tex                 [  0%]$Parsetree = bless( {
  'Element' => [
    bless( {
      '' => 'To solve a quadratic equation '
    }, 'SpeL::Object::TokenSequence' ),
    bless( {
      'MathUnit' => bless( {
        '' => 'a x^2 + bx + c = 0',
        'Left' => bless( {
          'Component' => bless( {
            'Alphabet' => 'a',
            'trailingws' => ' '
          }, 'SpeL::Object::Variable' ),
          'Rest' => bless( {
            'Op' => bless( {
              'Op' => ''
            }, 'SpeL::Object::Binop' ),
            'Remainder' => bless( {
              'Component' => bless( {
                'Alphabet' => 'x',
                'trailingws' => ''
              }, 'SpeL::Object::Variable' ),
              'Rest' => bless( {
                'Op' => bless( {
                  'Lit' => '2',
                  'sup' => '^'
                }, 'SpeL::Object::Power' ),
                'Remainder' => bless( {
                  'Op' => bless( {
                    'Op' => '+'
                  }, 'SpeL::Object::Binop' ),
                  'Remainder' => bless( {
                    'Component' => bless( {
                      'Alphabet' => 'b',
                      'trailingws' => ''
                    }, 'SpeL::Object::Variable' ),
                    'Rest' => bless( {
                      'Op' => bless( {
                        'Op' => ''
                      }, 'SpeL::Object::Binop' ),
                      'Remainder' => bless( {
                        'Component' => bless( {
                          'Alphabet' => 'x',
                          'trailingws' => ' '
                        }, 'SpeL::Object::Variable' ),
                        'Rest' => bless( {
                          'Op' => bless( {
                            'Op' => '+'
                          }, 'SpeL::Object::Binop' ),
                          'Remainder' => bless( {
                            'Component' => bless( {
                              'Alphabet' => 'c',
                              'trailingws' => ' '
                            }, 'SpeL::Object::Variable' ),
                            'Rest' => bless( {
                              'ws' => ''
                            }, 'SpeL::Object::Expressionrest' )
                          }, 'SpeL::Object::Expression' )
                        }, 'SpeL::Object::Expressionrest' )
                      }, 'SpeL::Object::Expression' )
                    }, 'SpeL::Object::Expressionrest' )
                  }, 'SpeL::Object::Expression' )
                }, 'SpeL::Object::Expressionrest' )
              }, 'SpeL::Object::Expressionrest' )
            }, 'SpeL::Object::Expression' )
          }, 'SpeL::Object::Expressionrest' )
        }, 'SpeL::Object::Expression' ),
        'RelationChain' => [
          {
            'RelOperator' => bless( {
              '' => '='
            }, 'SpeL::Object::RelOperator' ),
            'Right' => bless( {
              'Component' => bless( {
                'Realnumber' => bless( {
                  'Sign' => '',
                  'Value' => '0',
                  'trailingws' => ''
                }, 'SpeL::Object::Realnumber' )
              }, 'SpeL::Object::Number' ),
              'Rest' => bless( {
                'ws' => ''
              }, 'SpeL::Object::Expressionrest' )
            }, 'SpeL::Object::Expression' )
          }
        ]
      }, 'SpeL::Object::Relation' )
    }, 'SpeL::Object::MathInline' ),
    bless( {
      '' => ',  you need to
complete the square.
'
    }, 'SpeL::Object::TokenSequence' )
  ]
}, 'SpeL::Object::ElementList' );

Done.
