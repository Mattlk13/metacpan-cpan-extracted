$tex = bless( {
  'path' => 't/01-lib/SpeL/Parser/Chunk',
  'tree' => bless( {
    'ElementList' => bless( {
      'Element' => [
        bless( {
          'MathUnit' => [
            bless( {
              '' => 'x &= - \\frac{1}{2} ',
              'Left' => bless( {
                'Component' => bless( {
                  'Alphabet' => 'x',
                  'trailingws' => ' '
                }, 'SpeL::Object::Variable' ),
                'Rest' => bless( {
                  'ws' => ''
                }, 'SpeL::Object::Expressionrest' )
              }, 'SpeL::Object::Expression' ),
              'RelationChain' => [
                {
                  'RelOperator' => bless( {
                    '' => '&'
                  }, 'SpeL::Object::RelOperator' )
                },
                {
                  'RelOperator' => bless( {
                    '' => '='
                  }, 'SpeL::Object::RelOperator' ),
                  'Right' => bless( {
                    'Component' => bless( {
                      'den' => bless( {
                        'Realnumber' => bless( {
                          'Sign' => '',
                          'Value' => '2',
                          'trailingws' => ''
                        }, 'SpeL::Object::Realnumber' )
                      }, 'SpeL::Object::Number' ),
                      'num' => bless( {
                        'Realnumber' => bless( {
                          'Sign' => '',
                          'Value' => '1',
                          'trailingws' => ''
                        }, 'SpeL::Object::Realnumber' )
                      }, 'SpeL::Object::Number' )
                    }, 'SpeL::Object::Fraction' ),
                    'Rest' => bless( {
                      'ws' => ''
                    }, 'SpeL::Object::Expressionrest' ),
                    'Sign' => '-'
                  }, 'SpeL::Object::Expression' )
                }
              ]
            }, 'SpeL::Object::Relation' ),
            bless( {
              '' => 'y &= - \\sqrt{\\frac{\\pi}{2}}',
              'Left' => bless( {
                'Component' => bless( {
                  'Alphabet' => 'y',
                  'trailingws' => ' '
                }, 'SpeL::Object::Variable' ),
                'Rest' => bless( {
                  'ws' => ''
                }, 'SpeL::Object::Expressionrest' )
              }, 'SpeL::Object::Expression' ),
              'RelationChain' => [
                {
                  'RelOperator' => bless( {
                    '' => '&'
                  }, 'SpeL::Object::RelOperator' )
                },
                {
                  'RelOperator' => bless( {
                    '' => '='
                  }, 'SpeL::Object::RelOperator' ),
                  'Right' => bless( {
                    'Component' => bless( {
                      'Sqrt' => bless( {
                        'Argument' => bless( {
                          'Component' => bless( {
                            'den' => bless( {
                              'Realnumber' => bless( {
                                'Sign' => '',
                                'Value' => '2',
                                'trailingws' => ''
                              }, 'SpeL::Object::Realnumber' )
                            }, 'SpeL::Object::Number' ),
                            'num' => bless( {
                              'Realnumber' => bless( {
                                'Sign' => '',
                                'Value' => '\\pi',
                                'trailingws' => ''
                              }, 'SpeL::Object::Realnumber' )
                            }, 'SpeL::Object::Number' )
                          }, 'SpeL::Object::Fraction' ),
                          'Rest' => bless( {
                            'ws' => ''
                          }, 'SpeL::Object::Expressionrest' )
                        }, 'SpeL::Object::Expression' )
                      }, 'SpeL::Object::Squareroot' )
                    }, 'SpeL::Object::Function' ),
                    'Rest' => bless( {
                      'ws' => ''
                    }, 'SpeL::Object::Expressionrest' ),
                    'Sign' => '-'
                  }, 'SpeL::Object::Expression' )
                }
              ]
            }, 'SpeL::Object::Relation' ),
            bless( {
              '' => 'z &= \\sqrt[3]{y}
  ',
              'Left' => bless( {
                'Component' => bless( {
                  'Alphabet' => 'z',
                  'trailingws' => ' '
                }, 'SpeL::Object::Variable' ),
                'Rest' => bless( {
                  'ws' => ''
                }, 'SpeL::Object::Expressionrest' )
              }, 'SpeL::Object::Expression' ),
              'RelationChain' => [
                {
                  'RelOperator' => bless( {
                    '' => '&'
                  }, 'SpeL::Object::RelOperator' )
                },
                {
                  'RelOperator' => bless( {
                    '' => '='
                  }, 'SpeL::Object::RelOperator' ),
                  'Right' => bless( {
                    'Component' => bless( {
                      'Sqrt' => bless( {
                        'Argument' => bless( {
                          'Component' => bless( {
                            'Alphabet' => 'y',
                            'trailingws' => ''
                          }, 'SpeL::Object::Variable' ),
                          'Rest' => bless( {
                            'ws' => ''
                          }, 'SpeL::Object::Expressionrest' )
                        }, 'SpeL::Object::Expression' ),
                        'N' => bless( {
                          'Component' => bless( {
                            'Realnumber' => bless( {
                              'Sign' => '',
                              'Value' => '3',
                              'trailingws' => ''
                            }, 'SpeL::Object::Realnumber' )
                          }, 'SpeL::Object::Number' ),
                          'Rest' => bless( {
                            'ws' => ''
                          }, 'SpeL::Object::Expressionrest' )
                        }, 'SpeL::Object::Expression' )
                      }, 'SpeL::Object::Squareroot' )
                    }, 'SpeL::Object::Function' ),
                    'Rest' => bless( {
                      'ws' => ''
                    }, 'SpeL::Object::Expressionrest' )
                  }, 'SpeL::Object::Expression' )
                }
              ]
            }, 'SpeL::Object::Relation' )
          ],
          'mathtag' => 'align',
          'trailingws' => '
    '
        }, 'SpeL::Object::MathEnvironment' ),
        bless( {
          '' => '
'
        }, 'SpeL::Object::TokenSequence' )
      ]
    }, 'SpeL::Object::ElementList' )
  }, 'SpeL::Object::Document' )
}, 'SpeL::Parser::Chunk' );

