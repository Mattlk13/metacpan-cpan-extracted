$tex = bless( {
  'path' => 't/01-lib/SpeL/Parser/Chunk',
  'tree' => bless( {
    'ElementList' => bless( {
      'Element' => [
        bless( {
          '' => 'These are a few limitexpressions:
'
        }, 'SpeL::Object::TokenSequence' ),
        bless( {
          'MathUnit' => [
            bless( {
              '' => 'F(s) &= \\int_0^\\infty f(t) e^{-st} \\dx{t} ',
              'Left' => bless( {
                'Component' => bless( {
                  'Argument' => bless( {
                    'Component' => bless( {
                      'Alphabet' => 's',
                      'trailingws' => ''
                    }, 'SpeL::Object::Variable' ),
                    'Rest' => bless( {
                      'ws' => ''
                    }, 'SpeL::Object::Expressionrest' )
                  }, 'SpeL::Object::Expression' ),
                  'Name' => bless( {
                    'Alphabet' => 'F',
                    'trailingws' => ''
                  }, 'SpeL::Object::Variable' ),
                  'cbracket' => ')',
                  'obracket' => '('
                }, 'SpeL::Object::Function' ),
                'Rest' => bless( {
                  'ws' => ''
                }, 'SpeL::Object::Expressionrest' )
              }, 'SpeL::Object::Expression' ),
              'RelationChain' => [
                {
                  'RelOperator' => bless( {
                    '' => '&'
                  }, 'SpeL::Object::RelOperator' )
                },
                {
                  'RelOperator' => bless( {
                    '' => '='
                  }, 'SpeL::Object::RelOperator' ),
                  'Right' => bless( {
                    'Component' => bless( {
                      'LBound' => bless( {
                        'Realnumber' => bless( {
                          'Sign' => '',
                          'Value' => '0',
                          'trailingws' => ''
                        }, 'SpeL::Object::Realnumber' )
                      }, 'SpeL::Object::Number' ),
                      'Limitscommand' => bless( {
                        '' => '\\int'
                      }, 'SpeL::Object::Limitscommand' ),
                      'UBound' => bless( {
                        'Realnumber' => bless( {
                          'Sign' => '',
                          'Value' => '\\infty',
                          'trailingws' => ' '
                        }, 'SpeL::Object::Realnumber' )
                      }, 'SpeL::Object::Number' )
                    }, 'SpeL::Object::Limitsexpression' ),
                    'Rest' => bless( {
                      'Component' => bless( {
                        'Argument' => bless( {
                          'Component' => bless( {
                            'Alphabet' => 't',
                            'trailingws' => ''
                          }, 'SpeL::Object::Variable' ),
                          'Rest' => bless( {
                            'ws' => ''
                          }, 'SpeL::Object::Expressionrest' )
                        }, 'SpeL::Object::Expression' ),
                        'Name' => bless( {
                          'Alphabet' => 'f',
                          'trailingws' => ''
                        }, 'SpeL::Object::Variable' ),
                        'cbracket' => ')',
                        'obracket' => '('
                      }, 'SpeL::Object::Function' ),
                      'Rest' => bless( {
                        'Op' => bless( {
                          'Op' => ''
                        }, 'SpeL::Object::Binop' ),
                        'Remainder' => bless( {
                          'Component' => bless( {
                            'Alphabet' => 'e',
                            'trailingws' => ''
                          }, 'SpeL::Object::Variable' ),
                          'Rest' => bless( {
                            'Op' => bless( {
                              'Group' => bless( {
                                'MathUnit' => bless( {
                                  '' => '-st',
                                  'Left' => bless( {
                                    'Component' => bless( {
                                      'Alphabet' => 's',
                                      'trailingws' => ''
                                    }, 'SpeL::Object::Variable' ),
                                    'Rest' => bless( {
                                      'Op' => bless( {
                                        'Op' => ''
                                      }, 'SpeL::Object::Binop' ),
                                      'Remainder' => bless( {
                                        'Component' => bless( {
                                          'Alphabet' => 't',
                                          'trailingws' => ''
                                        }, 'SpeL::Object::Variable' ),
                                        'Rest' => bless( {
                                          'ws' => ''
                                        }, 'SpeL::Object::Expressionrest' )
                                      }, 'SpeL::Object::Expression' )
                                    }, 'SpeL::Object::Expressionrest' ),
                                    'Sign' => '-'
                                  }, 'SpeL::Object::Expression' )
                                }, 'SpeL::Object::Relation' ),
                                'trailingws' => ' '
                              }, 'SpeL::Object::MathGroup' ),
                              'sup' => '^'
                            }, 'SpeL::Object::Power' ),
                            'Remainder' => bless( {
                              'Op' => bless( {
                                'Op' => ''
                              }, 'SpeL::Object::Binop' ),
                              'Remainder' => bless( {
                                'Component' => bless( {
                                  'Args' => [
                                    bless( {
                                      '' => 't',
                                      'Left' => bless( {
                                        'Component' => bless( {
                                          'Alphabet' => 't',
                                          'trailingws' => ''
                                        }, 'SpeL::Object::Variable' ),
                                        'Rest' => bless( {
                                          'ws' => ''
                                        }, 'SpeL::Object::Expressionrest' )
                                      }, 'SpeL::Object::Expression' )
                                    }, 'SpeL::Object::Relation' )
                                  ],
                                  'Name' => 'dx',
                                  'trailingws' => ' '
                                }, 'SpeL::Object::Command' ),
                                'Rest' => bless( {
                                  'ws' => ''
                                }, 'SpeL::Object::Expressionrest' )
                              }, 'SpeL::Object::Expression' )
                            }, 'SpeL::Object::Expressionrest' )
                          }, 'SpeL::Object::Expressionrest' )
                        }, 'SpeL::Object::Expression' )
                      }, 'SpeL::Object::Expressionrest' )
                    }, 'SpeL::Object::Expression' )
                  }, 'SpeL::Object::Expression' )
                }
              ]
            }, 'SpeL::Object::Relation' ),
            bless( {
              '' => 'e^{-j\\pi}+1=&0
',
              'Left' => bless( {
                'Component' => bless( {
                  'Alphabet' => 'e',
                  'trailingws' => ''
                }, 'SpeL::Object::Variable' ),
                'Rest' => bless( {
                  'Op' => bless( {
                    'Group' => bless( {
                      'MathUnit' => bless( {
                        '' => '-j\\pi',
                        'Left' => bless( {
                          'Component' => bless( {
                            'Realnumber' => bless( {
                              'Sign' => '',
                              'Value' => '\\pi',
                              'trailingws' => ''
                            }, 'SpeL::Object::Realnumber' ),
                            'imag' => 'j'
                          }, 'SpeL::Object::Number' ),
                          'Rest' => bless( {
                            'ws' => ''
                          }, 'SpeL::Object::Expressionrest' ),
                          'Sign' => '-'
                        }, 'SpeL::Object::Expression' )
                      }, 'SpeL::Object::Relation' ),
                      'trailingws' => ''
                    }, 'SpeL::Object::MathGroup' ),
                    'sup' => '^'
                  }, 'SpeL::Object::Power' ),
                  'Remainder' => bless( {
                    'Op' => bless( {
                      'Op' => '+'
                    }, 'SpeL::Object::Binop' ),
                    'Remainder' => bless( {
                      'Component' => bless( {
                        'Realnumber' => bless( {
                          'Sign' => '',
                          'Value' => '1',
                          'trailingws' => ''
                        }, 'SpeL::Object::Realnumber' )
                      }, 'SpeL::Object::Number' ),
                      'Rest' => bless( {
                        'ws' => ''
                      }, 'SpeL::Object::Expressionrest' )
                    }, 'SpeL::Object::Expression' )
                  }, 'SpeL::Object::Expressionrest' )
                }, 'SpeL::Object::Expressionrest' )
              }, 'SpeL::Object::Expression' ),
              'RelationChain' => [
                {
                  'RelOperator' => bless( {
                    '' => '='
                  }, 'SpeL::Object::RelOperator' )
                },
                {
                  'RelOperator' => bless( {
                    '' => '&'
                  }, 'SpeL::Object::RelOperator' ),
                  'Right' => bless( {
                    'Component' => bless( {
                      'Realnumber' => bless( {
                        'Sign' => '',
                        'Value' => '0',
                        'trailingws' => '
'
                      }, 'SpeL::Object::Realnumber' )
                    }, 'SpeL::Object::Number' ),
                    'Rest' => bless( {
                      'ws' => ''
                    }, 'SpeL::Object::Expressionrest' )
                  }, 'SpeL::Object::Expression' )
                }
              ]
            }, 'SpeL::Object::Relation' )
          ],
          'mathtag' => 'align',
          'trailingws' => '
  '
        }, 'SpeL::Object::MathEnvironment' ),
        bless( {
          '' => '
'
        }, 'SpeL::Object::TokenSequence' )
      ]
    }, 'SpeL::Object::ElementList' )
  }, 'SpeL::Object::Document' )
}, 'SpeL::Parser::Chunk' );

