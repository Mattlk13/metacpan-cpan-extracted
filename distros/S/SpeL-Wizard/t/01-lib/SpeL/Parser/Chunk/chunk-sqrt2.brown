$tex = bless( {
  'path' => 't/01-lib/SpeL/Parser/Chunk',
  'tree' => bless( {
    'ElementList' => bless( {
      'Element' => [
        bless( {
          'MathUnit' => bless( {
            '' => 'z=-\\sqrt {3} + \\sqrt {2} \\jz',
            'Left' => bless( {
              'Component' => bless( {
                'Alphabet' => 'z',
                'trailingws' => ''
              }, 'SpeL::Object::Variable' ),
              'Rest' => bless( {
                'ws' => ''
              }, 'SpeL::Object::Expressionrest' )
            }, 'SpeL::Object::Expression' ),
            'RelationChain' => [
              {
                'RelOperator' => bless( {
                  '' => '='
                }, 'SpeL::Object::RelOperator' ),
                'Right' => bless( {
                  'Component' => bless( {
                    'Sqrt' => bless( {
                      'Argument' => bless( {
                        'Component' => bless( {
                          'Realnumber' => bless( {
                            'Sign' => '',
                            'Value' => '3',
                            'trailingws' => ''
                          }, 'SpeL::Object::Realnumber' )
                        }, 'SpeL::Object::Number' ),
                        'Rest' => bless( {
                          'ws' => ''
                        }, 'SpeL::Object::Expressionrest' )
                      }, 'SpeL::Object::Expression' )
                    }, 'SpeL::Object::Squareroot' )
                  }, 'SpeL::Object::Function' ),
                  'Rest' => bless( {
                    'Op' => bless( {
                      'Op' => '+'
                    }, 'SpeL::Object::Binop' ),
                    'Remainder' => bless( {
                      'Component' => bless( {
                        'Sqrt' => bless( {
                          'Argument' => bless( {
                            'Component' => bless( {
                              'Realnumber' => bless( {
                                'Sign' => '',
                                'Value' => '2',
                                'trailingws' => ''
                              }, 'SpeL::Object::Realnumber' )
                            }, 'SpeL::Object::Number' ),
                            'Rest' => bless( {
                              'ws' => ''
                            }, 'SpeL::Object::Expressionrest' )
                          }, 'SpeL::Object::Expression' )
                        }, 'SpeL::Object::Squareroot' )
                      }, 'SpeL::Object::Function' ),
                      'Rest' => bless( {
                        'Op' => bless( {
                          'Op' => ''
                        }, 'SpeL::Object::Binop' ),
                        'Remainder' => bless( {
                          'Component' => bless( {
                            'Name' => 'jz',
                            'trailingws' => ''
                          }, 'SpeL::Object::Command' ),
                          'Rest' => bless( {
                            'ws' => ''
                          }, 'SpeL::Object::Expressionrest' )
                        }, 'SpeL::Object::Expression' )
                      }, 'SpeL::Object::Expressionrest' )
                    }, 'SpeL::Object::Expression' )
                  }, 'SpeL::Object::Expressionrest' ),
                  'Sign' => '-'
                }, 'SpeL::Object::Expression' )
              }
            ]
          }, 'SpeL::Object::Relation' )
        }, 'SpeL::Object::MathInline' )
      ]
    }, 'SpeL::Object::ElementList' )
  }, 'SpeL::Object::Document' )
}, 'SpeL::Parser::Chunk' );

