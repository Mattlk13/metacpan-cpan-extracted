#!/usr/bin/env perl
use Mojo::Base -strict;
use Mojo::Util qw(sha1_sum encode);
my $home             = $app->home;
my $mode             = $app->mode;
my $moniker          = $app->moniker;
my $mode_routes_file = $app->resources->child("etc/routes.$mode.conf");
my $routes_file
  = (-e $mode_routes_file
     ? $mode_routes_file
     : $app->resources->child("etc/routes.conf"));
my $db_type             = 'sqlite';
my $mode_db_config_file = $app->resources->child("etc/$db_type.$mode.conf");
my $db_config_file
  = (-e $mode_db_config_file
     ? $mode_db_config_file
     : $app->resources->child("etc/$db_type.conf"));

# $app->defaults(layout => 'default',);

{
 # Some classes which plugins or the application expect to be loaded to enable
 # some functionality or to refer to its functions.
 load_classes => [qw(Slovo::Controller::Auth)],

# Plugins can be Mojolicious and Slovo plugins.
# Every Slovo::Plugin:: ISA Mojolicious::Plugin
# Plugin order is important. Any plugin depending on another
# must come after the plugin it depends on.
# A plugin may be loaded twice if it will do different
# things depending on configuration variables.
 plugins => [
             'TagHelpers',
             'PODRenderer',
             {Config => {file => $db_config_file}},
             {
              Authentication => {
                      autoload_user   => 1,
                      session_key     => 'slovo',
                      current_user_fn => 'user',
                      load_user       => \&Slovo::Controller::Auth::load_user,
                      validate_user => \&Slovo::Controller::Auth::validate_user,
              }
             },
             {RoutesConfig => {file => $routes_file}},
             {OpenAPI      => {url  => $app->resources->child("api.json")}}
            ],

 secrets => [sha1_sum(encode('utf8', $home . 'тайна')),],

 # See also /perldoc/Mojolicious/Sessions
 sessions => [

   #attribute => value
   {default_expiration => 3600 * 24 * 5},    #five days
   {cookie_name        => 'slovo'}
 ],

}
