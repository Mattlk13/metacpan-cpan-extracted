## no critic: TestingAndDebugging::RequireStrict
package Sah::SchemaR::phone::num::idn;

our $DATE = '2022-09-23'; # DATE
our $VERSION = '0.001'; # VERSION

our $rschema = do{my$var={base=>"str",clsets_after_base=>[{description=>"\nThis schema accepts Indonesian phone number e.g. +628123456789. If number does\nnot contain country code, it will be assumed to be '+62' (Indonesian calling\ncode). Some formatting characters like dashes and spaces are accepted, as long\nas it passes <pm:Number::Phone> formatting. The number will be formatted using\ninternational phone number formatting by the Number::Phone module, e.g. '+62 812\n3456 789'.\n\n",examples=>[{valid=>0,value=>""},{valid=>1,validated_value=>"+62 812 3456 789",value=>"08123456789"},{summary=>"Not Indonesian number",valid=>0,value=>"+442087712924"},{valid=>1,validated_value=>"+62 812 3456 789",value=>"+628123456789"},{valid=>1,validated_value=>"+62 812 3456 789",value=>628123456789}],match=>qr(\A\+62([0-9 ]{5,20})\z)i,prefilters=>[["Regexp::replace",{from_pat=>qr(\A0),to_str=>"+62"}],"Phone::format"],summary=>"Indonesian phone number, e.g. +628123456789"}],clsets_after_type=>['$var->{clsets_after_base}[0]'],"clsets_after_type.alt.merge.merged"=>['$var->{clsets_after_base}[0]'],resolve_path=>["str"],type=>"str",v=>2};$var->{clsets_after_type}[0]=$var->{clsets_after_base}[0];$var->{"clsets_after_type.alt.merge.merged"}[0]=$var->{clsets_after_base}[0];$var};

1;
# ABSTRACT: Indonesian phone number, e.g. +628123456789

__END__

=pod

=encoding UTF-8

=head1 NAME

Sah::SchemaR::phone::num::idn - Indonesian phone number, e.g. +628123456789

=head1 VERSION

This document describes version 0.001 of Sah::SchemaR::phone::num::idn (from Perl distribution Sah-Schemas-Phone), released on 2022-09-23.

=head1 DESCRIPTION

This module is automatically generated by Dist::Zilla::Plugin::Sah::Schemas during distribution build.

A Sah::SchemaR::* module is useful if a client wants to quickly lookup the base type of a schema without having to do any extra resolving. With Sah::Schema::*, one might need to do several lookups if a schema is based on another schema, and so on. Compare for example L<Sah::Schema::poseven> vs L<Sah::SchemaR::poseven>, where in Sah::SchemaR::poseven one can immediately get that the base type is C<int>. Currently L<Perinci::Sub::Complete> uses Sah::SchemaR::* instead of Sah::Schema::* for reduced startup overhead when doing tab completion.

=head1 HOMEPAGE

Please visit the project's homepage at L<https://metacpan.org/release/Sah-Schemas-Phone>.

=head1 SOURCE

Source repository is at L<https://github.com/perlancar/perl-Sah-Schemas-Phone>.

=head1 AUTHOR

perlancar <perlancar@cpan.org>

=head1 CONTRIBUTING


To contribute, you can send patches by email/via RT, or send pull requests on
GitHub.

Most of the time, you don't need to build the distribution yourself. You can
simply modify the code, then test via:

 % prove -l

If you want to build the distribution (e.g. to try to install it locally on your
system), you can install L<Dist::Zilla>,
L<Dist::Zilla::PluginBundle::Author::PERLANCAR>,
L<Pod::Weaver::PluginBundle::Author::PERLANCAR>, and sometimes one or two other
Dist::Zilla- and/or Pod::Weaver plugins. Any additional steps required beyond
that are considered a bug and can be reported to me.

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2022 by perlancar <perlancar@cpan.org>.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=head1 BUGS

Please report any bugs or feature requests on the bugtracker website L<https://rt.cpan.org/Public/Dist/Display.html?Name=Sah-Schemas-Phone>

When submitting a bug or request, please include a test-file or a
patch to an existing test-file that illustrates the bug or desired
feature.

=cut
