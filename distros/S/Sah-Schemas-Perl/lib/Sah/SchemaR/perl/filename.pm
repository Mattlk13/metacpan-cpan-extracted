package Sah::SchemaR::perl::filename;

our $DATE = '2021-07-20'; # DATE
our $VERSION = '0.038'; # VERSION

our $rschema = ["str",[{description=>"\nUse this schema if you want to accept a filesystem path containing Perl script,\nmodule, or POD. The value of this schema is in the convenience of CLI\ncompletion, as well as coercion from script or module name.\n\nString containing filename of a Perl script or module or POD. For convenience,\nwhen value is in the form of:\n\n    Foo\n    Foo.pm\n    Foo.pod\n    Foo::Bar\n    Foo/Bar\n    Foo/Bar.pm\n    Foo/Bar.pod\n\nand a matching .pod or .pm file is found in `\@INC`, then it will be coerced\n(converted) into the path of that .pod/.pm file, e.g.:\n\n    /home/ujang/perl5/perlbrew/perls/perl-5.24.0/lib/site_perl/5.24.0/Foo/Bar.pm\n    lib/Foo/Bar.pod\n\nTo prevent such coercion, you can use prefixing path, e.g.:\n\n    ./Foo::Bar\n    ../Foo/Bar\n    /path/to/Foo/Bar\n\nThis schema comes with convenience completion too.\n\n",summary=>"Filename of Perl script/module/POD, e.g. /path/Foo/Bar.pm","x.completion"=>sub{package Sah::Schema::perl::filename;require Complete::File;require Complete::Module;require Complete::Util;my(%args) = @_;my $word = $args{'word'};my @answers;push @answers, Complete::File::complete_file('word', $word);if ($word =~ m[\A\w*((?:::|/)\w+)*\z]) {push @answers, Complete::Module::complete_module('word', $word);}Complete::Util::combine_answers(@answers)},"x.perl.coerce_rules"=>["From_str::convert_perl_pm_or_pod_to_path"]}],["str"]];

1;
# ABSTRACT: Filename of Perl script/module/POD, e.g. /path/Foo/Bar.pm

__END__

=pod

=encoding UTF-8

=head1 NAME

Sah::SchemaR::perl::filename - Filename of Perl script/module/POD, e.g. /path/Foo/Bar.pm

=head1 VERSION

This document describes version 0.038 of Sah::SchemaR::perl::filename (from Perl distribution Sah-Schemas-Perl), released on 2021-07-20.

=head1 DESCRIPTION

This module is automatically generated by Dist::Zilla::Plugin::Sah::Schemas during distribution build.

A Sah::SchemaR::* module is useful if a client wants to quickly lookup the base type of a schema without having to do any extra resolving. With Sah::Schema::*, one might need to do several lookups if a schema is based on another schema, and so on. Compare for example L<Sah::Schema::poseven> vs L<Sah::SchemaR::poseven>, where in Sah::SchemaR::poseven one can immediately get that the base type is C<int>. Currently L<Perinci::Sub::Complete> uses Sah::SchemaR::* instead of Sah::Schema::* for reduced startup overhead when doing tab completion.

=head1 HOMEPAGE

Please visit the project's homepage at L<https://metacpan.org/release/Sah-Schemas-Perl>.

=head1 SOURCE

Source repository is at L<https://github.com/perlancar/perl-Sah-Schemas-Perl>.

=head1 BUGS

Please report any bugs or feature requests on the bugtracker website L<https://rt.cpan.org/Public/Dist/Display.html?Name=Sah-Schemas-Perl>

When submitting a bug or request, please include a test-file or a
patch to an existing test-file that illustrates the bug or desired
feature.

=head1 AUTHOR

perlancar <perlancar@cpan.org>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2021, 2020, 2019, 2018, 2017, 2016 by perlancar@cpan.org.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=cut
