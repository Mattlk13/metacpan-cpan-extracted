Important things here and in code flagged with XXX

0.43
	If modernization of Term::Pager does not happen,
	can we reasonably have a forking IO::Pager::Perl,
	rather than opening IO::Pager::Perl-Term?

	Current forking design yields:

		Failed to create PAGER FH at 16-PurePerl_interactive.t line 16
		stty: standard input: Inappropriate ioctl for device
		stty: standard input: Inappropriate ioctl for device
		print() on unopened filehandle STDOUT at Term/Pager.pm line 330
		print() on unopened filehandle STDOUT at Term/Pager.pm line 395
		print() on unopened filehandle STDOUT at Term/Pager.pm line 396
		print() on unopened filehandle STDOUT at Term/Pager.pm line 397
		print() on unopened filehandle STDOUT at Term/Pager.pm line 398
		print() on unopened filehandle STDOUT at Term/Pager.pm line 399

	Fix IO::Pager and IO::Pager::Perl PODs (remove cuts)

0.40
	Push previous versions to github

	Functional fork for Term::Pager
		Test functionality w/|w/o Term::ReadKey
			As expicit and implicit PAGER

		make pipes & pager object
		parent
			event loop/interact
		child
			worker
0.35
	Odd failure of test 11 under tcsh and win-bash because
	*reference* has extra trailing newline.

0.30
	XXX Complete the ::less subclass to lump all non-interactive
	fallback behavior together? (See pagerless branch in git)

0.20
	"Fix" multi-pseudo-STDOUT disabled in 09-open.t implementation?

	Alter tests to cover all invocation schemes,
	and document location of each in matrix OR use table-driven tests?
		new/open each class
		scalar vs. glob vs. OO
		(non-)fully qualified subclass name

0.02
	Implement IO::Pager::Callback, just because it sounds cool?
