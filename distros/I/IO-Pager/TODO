Important things here and in code flagged with XXX

OLD key debug
OLD	why do some functions die?
OLD	why does initial load hang?
OLD		return 1 if not defined $char?
OLD
OLD	Revert to previous fnc invocation scheme? Should not matter
OLD !	Check ref() eq 'CODE' before running
OLD
OLD	Test bed with:
OLD		outer loop
OLD		Term::ReadKey
OLD
OLD		ioctl() for cbreak?


1.02
IPP	Fix M-v? Is it TERM specific failure? e.g; hterm on ChromeOS

IPP	rename tp to ppp ("pure" perl pager)? (except stty/tput, and ReadKey)

IPP	M-{left,right} file jump
IPP	tp: $me->mark(_txN, #) if eof
IPP	M-right: push ($n=shift);  jump $n
IPP	M-left:  unshift ($n=pop); jump $n

IPP	scroll left/right half-width?

IPP 	"Minimal jump editing: ^G abort, delete"?

IPP	return if $Squeeze and $me->{_text}-[cur] eq '' and
IPP			$me->{_text}->[prev] eq ''
IPP	Document line numbering impacts?! (perf, RAM...)

IPP	Alt _fncRE  join '' map {"^\Q$_\n"};//m

IPP	Term:Screen
IPP	https://metacpan.org/release/Term-Screen/source/lib/Term/Screen.pm#L474
IPP		getch: reimplement (versus #use#, misalignments with forking)
IPP		sysread vs. Term::ReadKey, as $^O alt for getc() in ReadMode()?
IPP
IPP		get_fn_keys aliases
IPP	PgUp (^[[5~ M-Up), PgDwn (^[[6 M-Down~),
IPP	Home (^[[H C-M-Up),  End (^[[F C-M-Down)


IPP	WINCH reflow
IPP		keep cursor at same content?
IPP		_cursor = int(_cursor * oldCols / newCols)-1

IPP	-rows makes smaller screen, but scrolling down fails.
IPP	Scrollng back up seems fine(ish) though.

IPP	Display filename in status line?

IPP	Clear buffer for multiple files? OTOH, while different,
IPP		all-in-one is kind of a unique and nifty feature.
IPP	Discontinuous numbering?

IPP	Rearchitect around String::Tagged::Terminal?

1.01
IPP	Add Windows support? via Win32::Console or Win32::Console::ANSI or
IPP	Term::ANSIScreen or Win10 1511+ ENABLE_VIRTUAL_TERMINAL_PROCESSING &
IPP	TERM=vt100; also Term::Size::Win32 or Win32::Readch

1.00
IPP	If fold, remap left & right scroll to beep?

IPP	Squeeze
IPP		Proper logical line numbering?
IPP		Togglable? ...with reflow

IPP			#Consolidate _cursor+{rows} and _end??
IPP	resize	126  $me->{_end} = $me->{rows} - 1; #NOOP
IPP	new	113    $me->{_end} = $me->{rows} - 1; #NOOP, just setting up
IPP	line	507    $me->{_end} = $n;        #Advance past pause!!
IPP	down_ln	518    if( $me->{_end} >= $me->{_txtN}-1 ){ #detect EOF!!
IPP	down_ln 522      if(length($me->{pause}) && $me->{_end}<$me->{rows}-1){
IPP	down_ln 523    print $t->Tgoto('cm',  0, $me->{_end}+1 ); } # move!
IPP	down_ln 532      $me->line( ++$me->{_end} ); #print!
IPP	up_line 552      $me->{_end}--;         #NOOP, just keeping up
IPP	jump	609  $me->{_end}   = $me->{_cursor} + $me->{rows}; #NOOP
IPP	search	671    $me->{_end}    = $me->{_cursor} + $me->{rows}; # - 1;
IPP	search	678    $me->{_end}   -= $x;     #NOOP, just keeping up


IPP	Pause bugs
IPP		extra scroll forwards required after backed up over pauses

IPP		Left/right when paused causes vertical scrolling
IPP		(horiz. scroll trigeering a form forward, how to prevent?!)

IPP		We get an extra chunk of output after menu closing

IPP	Add more IO::Pager::Perl involved tests, scripted interaction?
IPP		read from pipe, file
IPP		navigation
IPP		search

IPP	$0 as name in status line?

IPP	Wrap up tp for PerlTools?

0.43
	Can we make Pager::less into a self-contained forking implementation?
	Current forking design yields:

	   Failed to create PAGER FH at 16-PurePerl_interactive.t line 16
	   stty: standard input: Inappropriate ioctl for device
	   stty: standard input: Inappropriate ioctl for device
	   print() on unopened filehandle STDOUT at Term/Pager.pm line 330
	   print() on unopened filehandle STDOUT at Term/Pager.pm line 395..399

	Test functionality w/|w/o Term::ReadKey

	Fix IO::Pager and IO::Pager::less PODs (remove cuts)

0.40
	Push previous versions to github

0.35
	Odd failure of test 11 under tcsh and win-bash because
	*reference* has extra trailing newline.

0.20
	"Fix" multi-pseudo-STDOUT disabled in 09-open.t implementation?

	Alter tests to cover all invocation schemes,
	and document location of each in matrix OR use table-driven tests?
		new/open each class
		scalar vs. glob vs. OO
		(non-)fully qualified subclass name