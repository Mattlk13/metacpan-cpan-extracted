NAME
    Complete::Zsh::Gen::FromGetoptLong - Generate zsh completion script from
    Getopt::Long spec/script

VERSION
    This document describes version 0.002 of
    Complete::Zsh::Gen::FromGetoptLong (from Perl distribution
    Complete-Zsh-Gen-FromGetoptLong), released on 2022-08-11.

SYNOPSIS
FUNCTIONS
  gen_zsh_complete_from_getopt_long_script
    Usage:

     gen_zsh_complete_from_getopt_long_script(%args) -> [$status_code, $reason, $payload, \%result_meta]

    Generate zsh completion script from Getopt::Long script.

    This routine generate zsh "compadd" command for each short/long option,
    enabling zsh to display the options in a different color and showing
    description (if specified) for each option.

    Getopt::Long::Complete scripts are also supported.

    This function is not exported by default, but exportable.

    Arguments ('*' denotes required arguments):

    *   cmdname => *str*

        Command name to be completed, defaults to filename.

    *   compname => *str*

        Completer name.

    *   filename* => *filename*

    *   skip_detect => *bool*

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: A script that can be put in $fpath/_$cmdname (str)

  gen_zsh_complete_from_getopt_long_spec
    Usage:

     gen_zsh_complete_from_getopt_long_spec(%args) -> [$status_code, $reason, $payload, \%result_meta]

    From Getopt::Long spec, generate completion script for the zsh shell.

    This routine generate zsh completion script for each short/long option,
    enabling zsh to display the options in a different color and showing
    description (if specified) for each option.

    Getopt::Long::Complete scripts are also supported.

    This function is not exported by default, but exportable.

    Arguments ('*' denotes required arguments):

    *   cmdname* => *str*

        Command name to be completed.

    *   compname => *str*

        Completer name, if there is a completer for option values.

    *   opt_desc => *hash*

        Description for each option.

        This is optional and allows adding description for the complete
        command. Each key of the hash should correspond to the option name
        without the dashes, e.g. "s", "long".

    *   spec* => *hash*

        Getopt::Long options specification.

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: A script that can be put in $fpath/_$cmdname (str)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/Complete-Zsh-Gen-FromGetoptLong>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-Complete-Zsh-Gen-FromGetoptLong>.

SEE ALSO
AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTOR
    Steven Haryanto <stevenharyanto@gmail.com>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR,
    Pod::Weaver::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla- and/or Pod::Weaver plugins. Any additional steps
    required beyond that are considered a bug and can be reported to me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2022, 2016 by perlancar
    <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=Complete-Zsh-Gen-From
    GetoptLong>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

