# PODNAME: Config::Model::models::Itself::Class
# ABSTRACT:  Configuration class Itself::Class

=encoding utf8

=head1 NAME

Config::Model::models::Itself::Class - Configuration class Itself::Class

=head1 DESCRIPTION

Configuration classes used by L<Config::Model>

Configuration class. This class represents a node of a configuration tree.

=head1 Elements

=head2 class_description

Explain the purpose of this configuration class. This description is re-used to generate the documentation of your configuration class. You can use pod markup to format your description. See L<perlpod> for details. I< Optional. Type string.  > 

=head2 license

I< Optional. Type string.  > 

=head2 author

I< Optional. Type list of uniline.  > 

=head2 copyright

I< Optional. Type list of uniline.  > 

=head2 class - Override implementation of configuration node

Perl class name used to override the default implementation of a configuration node. This Perl class must inherit L<Config::Model::Node>. Use with care. I< Optional. Type uniline.  > 

=head2 element

Specify the elements names of this configuration class. I< Optional. Type hash of node of class L<Itself::Element|Config::Model::models::Itself::Element> .  > 

=head2 include

Include the element description of another class into this class. I< Optional. Type list of reference.  > 

=head2 include_backend

Include the read/write specification of another class into this class. I< Optional. Type list of reference.  > 

=head2 include_after

insert the included elements after a specific element. By default, included elements are placed before all other elements. I< Optional. Type reference.  > 

=head2 generated_by

When set, this class was generated by some program. You should not edit this class as your modifications may be clobbered later on when the class is regenerated. I< Optional. Type uniline.  > 

=head2 rw_config

Specify the backend used to read and write configuration data. See L<Config::Model::BackendMgr> for details. I< Optional. Type node of class L<Itself::ConfigRead|Config::Model::models::Itself::ConfigRead> .  > 

=head2 read_config

Deprecated - specify the Perl class(es) and function(s) used to read configuration data. The specified functions are tried in sequence to get configuration data. B<Deprecated> I< Optional. Type list of node of class L<Itself::ConfigRead|Config::Model::models::Itself::ConfigRead> .  > 

=head2 write_config

Deprecated - Specify the Perl class and function used to write configuration data. B<Deprecated> I< Optional. Type list of node of class L<Itself::ConfigWrite|Config::Model::models::Itself::ConfigWrite> .  > 

=head2 accept

Specifies names of the elements this configuration class accepts as valid. The key of the hash is a regular expression that are be tested against
           candidate parameters. When the parameter matches the regular expression,
           a new parameter is created in the model using the description provided
           in the value of this hash key. Note that the regexp must match the whole name
           of the potential parameter. I.e. the specified regexp is eval'ed
           with a leading C<^> and a trailing C<$>. I< Optional. Type hash of node of class L<Itself::ConfigAccept|Config::Model::models::Itself::ConfigAccept> .  > 

=head1 SEE ALSO

=over

=item *

L<cme>

=item *

L<Config::Model::models::Itself::ConfigAccept>

=item *

L<Config::Model::models::Itself::ConfigRead>

=item *

L<Config::Model::models::Itself::ConfigWrite>

=item *

L<Config::Model::models::Itself::Element>

=back

=head1 AUTHOR

=over

=item Dominique Dumont


=back

=head1 COPYRIGHT

=over

=item 2007-2011 Dominique Dumont.


=back

=head1 LICENSE

=over

=item LGPL-2


=back

=cut

