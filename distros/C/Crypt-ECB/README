Module Crypt::ECB
-----------------

DESCRIPTION

This module is a Perl-only implementation of the ECB mode. In
combination with a block cipher such as DES, IDEA or Blowfish, you can
encrypt and decrypt messages of arbitrarily long length. Though for
security reasons other modes than ECB such as CBC should be preferred.
See textbooks on cryptography if you want to know why.

The functionality of the module can be accessed via OO methods or via
standard function calls. Remember that some crypting module like for
example Blowfish has to be installed. The syntax follows that of
Crypt::CBC.


INSTALLATION

To install, just type

perl Makefile.PL
make
make test
make install

If you are on a MS system, you possibly won't have make. But don't
worry, installation is trivial as there is nothing to be compiled:
Just create a directory 'Crypt' in Perl's libpath if not existing. Then
copy 'ECB.pm' to that directory, that's all. Perl's libpath will be
something like 'c:\perl\site\lib'.


UPGRADING

Eight years after the last release I thought it was okay to make a major
upgrade. Which makes subtle changes to the API. So, if you are upgrading
from a version below 2.00, be aware that the API has changed:

- The caching feature is no longer available. Contact me if you really
think you need it.

- As I thought that exporting global constants isn't that nice and also
in order to be more compatible with Crypt::CBC I changed the way that
padding() is called:

$ecb->padding(PADDING_AUTO) should be replaced by $ecb->padding('standard')
(or could be omitted, because this is the default for Crypt-ECB-2.00 and
later).

$ecb->padding(PADDING_NONE) should be replaced by $ecb->padding('none').
$ecb->padding('none') is also needed if no padding was specified, because
no padding was the default for versions before v2.00.

- Exception handling is more perl-like. Crypt::ECB now dies when stumbling
over errors. If you don't want that, catch it with an eval.


COPYING

Crypt-ECB is Copyright (C) 2000, 2005, 2008, 2016 by Christoph Appel.

This module is distributed using the same terms as Perl itself. It is free
software; you can redistribute it and/or modify it under the terms of either:

a) the GNU General Public License as published by the Free Software
Foundation; either version 1, or (at your option) any later version, or

b) the "Artistic License".

