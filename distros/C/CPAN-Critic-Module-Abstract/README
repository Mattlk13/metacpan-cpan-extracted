NAME
    CPAN::Critic::Module::Abstract - Critic CPAN module abstract

VERSION
    This document describes version 0.08 of CPAN::Critic::Module::Abstract
    (from Perl distribution CPAN-Critic-Module-Abstract), released on
    2017-07-10.

SYNOPSIS
     % critic-cpan-module-abstract 'Perl extension for blah blah blah'

     # customize profile (add/remove policies, modify severities, ...)
     # TODO

DESCRIPTION
    This is a proof-of-concept module to critic CPAN module abstract.

    Dist::Zilla plugin coming shortly.

FUNCTIONS
  critique_cpan_module_abstract
    Usage:

     critique_cpan_module_abstract(%args) -> [status, msg, result, meta]

    Critic CPAN module abstract.

    This function is not exported by default, but exportable.

    Arguments ('*' denotes required arguments):

    *   abstract* => *str*

    *   profile => *str* (default: "default")

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  policy_prohibit_empty
    Usage:

     policy_prohibit_empty(%args) -> [status, msg, result, meta]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   abstract* => *str*

    *   stash => *hash*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  policy_prohibit_ends_with_full_stop
    Usage:

     policy_prohibit_ends_with_full_stop(%args) -> [status, msg, result, meta]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   abstract* => *str*

    *   stash => *hash*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  policy_prohibit_just_module_name
    Usage:

     policy_prohibit_just_module_name(%args) -> [status, msg, result, meta]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   abstract* => *str*

    *   stash => *hash*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  policy_prohibit_multiline
    Usage:

     policy_prohibit_multiline(%args) -> [status, msg, result, meta]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   abstract* => *str*

    *   stash => *hash*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  policy_prohibit_redundancy
    Usage:

     policy_prohibit_redundancy(%args) -> [status, msg, result, meta]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   abstract* => *str*

    *   stash => *hash*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  policy_prohibit_shouting
    Usage:

     policy_prohibit_shouting(%args) -> [status, msg, result, meta]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   abstract* => *str*

    *   stash => *hash*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  policy_prohibit_starts_with_lowercase_letter
    Usage:

     policy_prohibit_starts_with_lowercase_letter(%args) -> [status, msg, result, meta]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   abstract* => *str*

    *   stash => *hash*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  policy_prohibit_template
    Usage:

     policy_prohibit_template(%args) -> [status, msg, result, meta]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   abstract* => *str*

    *   stash => *hash*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  policy_prohibit_too_long
    Usage:

     policy_prohibit_too_long(%args) -> [status, msg, result, meta]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   abstract* => *str*

    *   max_len => *int* (default: 72)

    *   stash => *hash*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  policy_prohibit_too_short
    Usage:

     policy_prohibit_too_short(%args) -> [status, msg, result, meta]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   abstract* => *str*

    *   min_len => *int* (default: 3)

    *   stash => *hash*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

  policy_require_english
    Usage:

     policy_require_english(%args) -> [status, msg, result, meta]

    This function is not exported.

    Arguments ('*' denotes required arguments):

    *   abstract* => *str*

    *   stash => *hash*

    Returns an enveloped result (an array).

    First element (status) is an integer containing HTTP status code (200
    means OK, 4xx caller error, 5xx function error). Second element (msg) is
    a string containing error message, or 'OK' if status is 200. Third
    element (result) is optional, the actual result. Fourth element (meta)
    is called result metadata and is optional, a hash that contains extra
    information.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/CPAN-Critic-Module-Abstract>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-CPAN-Critic-Module-Abstract>.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=CPAN-Critic-Module-Ab
    stract>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

AUTHOR
    perlancar <perlancar@cpan.org>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2017, 2015, 2014, 2012 by
    perlancar@cpan.org.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

