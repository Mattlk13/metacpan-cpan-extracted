#!perl

use strict;
use warnings;
use Getopt::Long;
use Hades;

my %h = ();
GetOptions (\%h, 'file=s', 'eval=s', 'dist=s', 'lib=s', 'author=s', 'mail=s', 'version=s', 'realm=s', 'verbose', 'debug');
$h{email} = delete $h{mail} if $h{mail};
if ($h{file}) {
	if ($h{file} !~ m/\./) {
		$h{file} .= '.hades';
	}
} elsif (!$h{eval}) {
	die 'No file or eval passed into hades';
}

Hades->run(\%h);

__END__

=head1 NAME
 
hades - hades
 
=head1 USAGE
 
        lnation:High lnation$ hades -e 'Kosmos { penthos curae nosoi geras { if ($_[0]->penthos == $_[0]->nosoi) { return $_[0]->curae; } } }';
 
=cut

=head2 Options

=cut

=head3 file -f

Provide a file to read in.

=cut

=head3 eval -e

Provide a string to eval.

=cut

=head3 dist -d

Provide a name for the distribution.

=cut

=head3 lib -l

Provide a path where the generated files will be compiled.

=cut

=head3 author -a 

The author of the distribution/module.

=cut

=head3 mail -m

The authors email of the distribution/module

=cut

=head3 version -v

The version number of the distribution/module.

=cut

=head3 realm -r

The Hades realm that is used to generate the code

=cut

=head3 verbose -v

Print hades build steps to STDOUT.

=cut

=head3 debug -debug

Step through the hades build.

=cut
