# This file was automatically generated by Dist::Zilla::Plugin::MakeMaker v6.030.
use strict;
use warnings;



use ExtUtils::MakeMaker;

my %WriteMakefileArgs = (
  "ABSTRACT" => "Provides a FFI wrapper for libgs1encoders",
  "AUTHOR" => "hangy",
  "CONFIGURE_REQUIRES" => {
    "ExtUtils::MakeMaker" => 0,
    "FFI::Build::MM" => "0.83"
  },
  "DISTNAME" => "GS1-SyntaxEngine-FFI",
  "LICENSE" => "perl",
  "NAME" => "GS1::SyntaxEngine::FFI",
  "PREREQ_PM" => {
    "Alien::libgs1encoders" => 0,
    "FFI::Platypus" => 0,
    "Moo" => 0,
    "Throwable" => 0,
    "namespace::clean" => 0,
    "strictures" => 0
  },
  "TEST_REQUIRES" => {
    "ExtUtils::MakeMaker" => 0,
    "File::Spec" => 0,
    "Test2::Suite" => 0,
    "Test::More" => 0
  },
  "VERSION" => "0.2",
  "test" => {
    "TESTS" => "t/*.t"
  }
);


my %FallbackPrereqs = (
  "Alien::libgs1encoders" => 0,
  "ExtUtils::MakeMaker" => 0,
  "FFI::Platypus" => 0,
  "File::Spec" => 0,
  "Moo" => 0,
  "Test2::Suite" => 0,
  "Test::More" => 0,
  "Throwable" => 0,
  "namespace::clean" => 0,
  "strictures" => 0
);


# BEGIN code inserted by Dist::Zilla::Plugin::FFI::Build
use FFI::Build::MM 0.83;
my $fbmm = FFI::Build::MM->new;
%WriteMakefileArgs = $fbmm->mm_args(%WriteMakefileArgs);
# END code inserted by Dist::Zilla::Plugin::FFI::Build


unless ( eval { ExtUtils::MakeMaker->VERSION(6.63_03) } ) {
  delete $WriteMakefileArgs{TEST_REQUIRES};
  delete $WriteMakefileArgs{BUILD_REQUIRES};
  $WriteMakefileArgs{PREREQ_PM} = \%FallbackPrereqs;
}

delete $WriteMakefileArgs{CONFIGURE_REQUIRES}
  unless eval { ExtUtils::MakeMaker->VERSION(6.52) };

WriteMakefile(%WriteMakefileArgs);


# BEGIN code inserted by Dist::Zilla::Plugin::FFI::Build
BEGIN {
  # append to any existing postamble.
  if(my $old = MY->can('postamble'))
  {
    no warnings 'redefine';
    *MY::postamble = sub {
      $old->(@_) .
      "\n" .
      $fbmm->mm_postamble;
    };
  }
  else
  {
    *MY::postamble = sub {
      $fbmm->mm_postamble;
    };
  }
}
# END code inserted by Dist::Zilla::Plugin::FFI::Build

