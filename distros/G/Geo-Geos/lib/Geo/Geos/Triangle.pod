=head1 NAME

Geo::Geos::Triangle - Represents a planar triangle.

=head1 SYNOPSIS

    use Geo::Geos::Coordinate;
    use Geo::Geos::Triangle qw/isInCircleNonRobust isInCircleNormalized isInCircleRobust/;

    my $c1 = Geo::Geos::Coordinate->new(0, 0);
    my $c2 = Geo::Geos::Coordinate->new(0, 2);
    my $c3 = Geo::Geos::Coordinate->new(1, 1);
    my $c4 = Geo::Geos::Coordinate->new(0.5, 0.5);

    my $t = Geo::Geos::Triangle->new($c1, $c2, $c3);     # => isa 'Geo::Geos::Triangle'

    $t->p0;     # => is Geo::Geos::Coordinate->new(0, 0)
    $t->p1;     # => is Geo::Geos::Coordinate->new(0, 2)
    $t->p2;     # => is Geo::Geos::Coordinate->new(1, 1)

    $t->inCentre;       # => isa 'Geo::Geos::Coordinate'
    $t->circumcentre;   # => isa 'Geo::Geos::Coordinate'

    Geo::Geos::Triangle::isInCircleNonRobust($c1, $c2, $c3, $c4);    # => ''
    Geo::Geos::Triangle::isInCircleNormalized($c1, $c2, $c3, $c4);   # => ''
    Geo::Geos::Triangle::isInCircleRobust($c1, $c2, $c3, $c4);       # => ''

=head1 SEE ALSO (C++ classes docs)

L<GEOS C++ Library|https://trac.osgeo.org/geos>

geos::geom::Triangle

geos::geom::TrianglePredicate

=head1 SEE ALSO

L<Geo::Geos>

=head1 AUTHOR

Ivan Baidakou <i.baydakov@crazypanda.ru>, Crazy Panda, CP Decision LTD

=head1 LICENSE

You may distribute this code under the same terms as Perl itself.

=cut
