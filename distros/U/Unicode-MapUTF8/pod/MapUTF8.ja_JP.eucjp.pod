=encoding euc-jp

=head1 Ì¾Á°

Unicode::MapUTF8 - Ç¤°Õ¤ÎÊ¸»ú¥»¥Ã¥È¤«¤é¡¿¤Ø¤ÎUTF8¤ÎÊÑ´¹

=head1 ³µÍ×

 use Unicode::MapUTF8 qw(to_utf8 from_utf8 utf8_supported_charset);

 # 'ISO-8859-1'¤ÎÊ¸»úÎó¤ò 'UTF8'¤ËÊÑ´¹¤¹¤ë
 my $output = to_utf8({ -string => 'An example', -charset => 'ISO-8859-1' });

 # 'UTF8'¥¨¥ó¥³¡¼¥Ç¥£¥ó¥°¤ÎÊ¸»úÎó¤ò¥¨¥ó¥³¡¼¥Ç¥£¥ó¥° 'ISO-8859-1'¤ØÊÑ´¹¤¹¤ë
 my $other  = from_utf8({ -string => 'Other text', -charset => 'ISO-8859-1' });

 # ÍøÍÑ¤Ç¤­¤ëÊ¸»ú¥»¥Ã¥È¥¨¥ó¥³¡¼¥Ç¥£¥ó¥°¤Î¥ê¥¹¥È
 my @character_sets = utf8_supported_charset;

 # Ê¸»ú¥»¥Ã¥ÈÊÌÌ¾¤ÎÄÉ²Ã
 utf8_charset_alias({ 'ms-japanese' => 'sjis' });

 # £²¤Ä¤ÎÇ¤°Õ¤Î¡Ê¤·¤«¤·Âç¤­¤¯¸ß´¹À­¤Î¤¢¤ë¡ËÊ¸»ú¥»¥Ã¥È¥¨¥ó¥³¡¼¥Ç¥£¥ó¥°¤Ç¤ÎÊÑ´¹
 # (SJIS to EUC-JP)
 my $utf8_string   = to_utf8({ -string =>$sjis_string, -charset => 'sjis'});
 my $euc_jp_string = from_utf8({ -string => $utf8_string, -charset => 'euc-jp' })

 # ÆÃÄê¤ÎÊ¸»ú¥»¥Ã¥È¤¬¥µ¥Ý¡¼¥È¤µ¤ì¤Æ¤¤¤ë¤«¤ò³ÎÇ§
 if (utf8_supported_charset('ISO-8859-1') {
     # Yes
 }

=head1 ÀâÌÀ

UTF8¤È¤½¤ÎÂ¾¤Î¥¨¥ó¥³¡¼¥Ç¥£¥ó¥°¤«¤é¡¿¤Ø¤ÎÊÑ´¹¤Î¤¿¤á¤ÎÃæ³Ë¤È¤Ê¤ë¥ë¡¼¥Á¥ó¤Î´Ö¤Î¥¢¥À¥×¥¿ÁØ¤òÄó¶¡¤·¤Þ¤¹¡£ËÜ¼ÁÅª¤Ë¤Ï¡¢Ê£¿ôÂ¸ºß¤¹¤ë
Unicode¥â¥¸¥å¡¼¥ë¤Ø¤Î£±¤Ä¤Î¶¦ÄÌ¤Î¥¤¥ó¥¿¡¼¥Õ¥§¡¼¥¹¡¢²¼Éß¤­¤Ë¤Ê¤Ã¤Æ¤¤¤ë¼ÂÁõ¤òÃÎ¤ë¤³¤È¤Ê¤¯¡¢´ÊÃ±¤ËUTF8¤«¤é¡¿¤ØÂ¾¤ÎÊ¸»ú¥»¥Ã¥È¥¨¥ó¥³¡¼¥Ç¥£
¥ó¥°ÊÑ´¹¤ò´ÊÃ±¤Ë¤ª¤³¤Ê¤¤¤Þ¤¹¡£¤½¤Î¤¿¤á¡¢¤³¤ì¤ÏUnicode::String¡¢Unicode::Map8¡¢Unicode::Map¡¢Jcode¥â
¥¸¥å¡¼¥ë¤òÉ¸½à²½¤µ¤ì¤¿´ÊÃ±¤ÊAPI¤ÎÃæ¤ËÊñ¤ß¤Þ¤¹¡£

¤Þ¤¿¤³¤ì¤ÏUTF-8¤ò¥Ù¡¼¥¹¤Ë°ìÈÌÅª¤ÊÊ¸»ú¥»¥Ã¥ÈÊÑ´¹¤âÄó¶¡¤·¤Þ¤¹¡Ý¤³¤ì¤Ï£²ÃÊ³¬¤ÎÊÑ´¹¤Ä¤Ê¤²¤ë¤³¤È¤Ë¤è¤ê¡¢£²¤Ä¤Î¸ß´¹À­¤¬¤¢¤ê¡¢¥µ¥Ý¡¼¥È¤µ¤ì¤Æ¤¤¤ëÊ¸»ú¥»¥Ã¥È¤Ç²ÄÇ½¤Ç¤¹¡£

¤Û¤È¤ó¤É¤Î¤³¤È¤¬PerlÅª¤Ê¤Î¤Ç¡Ý¤«¤ßºÕ¤¯ÂÐ¾Ý¤È¤·¤Æ¿ôÂ¿¤¯¤Î¾®¤µ¤¤¤Ê¤â¤Î¤ÎÂå¤ï¤ê¤Ë£²¡¢£³¤ÎÂç¤­¤Ê¸Ç¤Þ¤ê¤òÍ¿¤¨¤ë¤È¡¢1ÉÃ´Ö¤Ë¤è¤êÂ¿¤¯¤ÎÊ¸»ú¤ò°·¤¤¤Þ¤¹¡£

Àß·×¤Ç¤Ï¡¢ÅÐ¾ì¤¹¤ë¤¤¤«¤Ê¤ë¿·¤·¤¤Ê¸»ú¥»¥Ã¥È¡¦¥¨¥ó¥³¡¼¥Ç¥£¥ó¥°ÊÑ´¹¥â¥¸¥å¡¼¥ë¤â¼è¤ê¹þ¤à¤è¤¦¤Ë´ÊÃ±¤Ë³ÈÄ¥¤¹¤ë¤³¤È¤¬¤Ç¤­¤Þ¤¹¡£

=head1 ÊÑ¹¹ÅÀ

¡Ê¸¶Ê¸¤Î¤Þ¤Þ¡Ë

=head1 ´Ø¿ô

1.14 2020.09.27   Fixing POD breaking in EUC-JP version of POD

1.13 2020.09.27   Fixing MANIFEST.SKIP error

1.12 2020.09.27   Build tool updates. Maintainer updates. POD error fixes.
                  Relicensed under MIT license.

1.11 2005.10.10   Documentation changes. Addition of Build.PL support.
                  Added various build tests, LICENSE, Artistic_License.txt,
                  GPL_License.txt. Split documentation into seperate
                  .pod file. Added Japanese translation of POD.

1.10 2005.05.22 - Fixed bug in conversion of ISO-2022-JP to UTF-8.
                  Problem and fix found by Masahiro HONMA
                  <masahiro.honma@tsutaya.co.jp>.

                  Similar bugs in conversions of shift_jis and euc-jp
                  to UTF-8 corrected as well.

1.09 2001.08.22 - Fixed multiple typo occurances of 'uft'
                  where 'utf' was meant in code. Problem affected
                  utf16 and utf7 encodings. Problem found
                  by devon smith <devon@taller.PSCL.cwru.edu>

1.08 2000.11.06 Added 'utf8_charset_alias' function to allow for runtime
                setting of character set aliases. Added several alternate
                names for 'sjis' (shiftjis, shift-jis, shift_jis, s-jis,
                and s_jis). 

                Corrected 'croak' messages for 'from_utf8' functions to
                appropriate function name.

                Corrected fatal problem in jcode-unicode internals. Problem 
                and fix found by Brian Wisti <wbrian2@uswest.net>.

1.07 2000.11.01 Added 'croak' to use Carp declaration to fix error
                messages. Problem and fix found by <wbrian2@uswest.net>.

1.06 2000.10.30 Fix to handle change in stringification of overloaded
                objects between Perl 5.005 and 5.6.  
                Problem noticed by Brian Wisti <wbrian2@uswest.net>.

1.05 2000.10.23 Error in conversions from UTF8 to multibyte encodings corrected

1.04 2000.10.23 Additional diagnostic error messages added for
                internal errors

1.03 2000.10.22 Bug fix for load time Unicode::Map encoding
                detection

1.02 2000.10.22 Bug fix to 'from_utf8' method and load time
                detection of Unicode::Map8 supported character
                set encodings

1.01 2000.10.02 Initial public release

=head1 é–¢æ•°

=over

=item utf8_charset_alias({ $alias => $charset });

Ê¸»ú¥»¥Ã¥ÈÊÌÌ¾¤Î¼Â¹Ô»þ¤ÎÂåÆþ¤Ë»È¤ï¤ì¤Þ¤¹¡£

°ú¿ô¤Ê¤·¤Ç¸Æ¤Ð¤ì¤ë¤È¡¢ÄêµÁ¤µ¤ì¤Æ¤¤¤ëÊÌÌ¾¤È¡¢¤½¤ì¤Ë¥Þ¥Ã¥×¤µ¤ì¤ëÊ¸»ú¥»¥Ã¥È¤Î¥Ï¥Ã¥·¥å¤òÊÖ¤·¤Þ¤¹¡£

Îã¡§:

  my $aliases     = utf8_charset_alias;
  my @alias_names = keys %$aliases;

£±¤Ä¤Î¥Ñ¥é¥á¡¼¥¿ÉÕ¤­¤Ç¸Æ¤Ð¤ì¤ë¤È¡¢¤â¤·¤½¤ÎÊÌÌ¾¤¬ÄêµÁ¤µ¤ì¤Æ¤¤¤ì¤Ð¡¢'ËÜÅö¤Î'Ê¸»ú¥»¥Ã¥È¤ÎÌ¾Á°¤òÊÖ¤·¤Þ¤¹¡£¤½¤ì¤¬ÊÌÌ¾¤Ë¸«¤Ä¤«¤é¤Ê¤±¤ì¤Ðundef¤òÊÖ¤·¤Þ¤¹¡£

Îã¡§

    if (! utf8_charset_alias('VISCII')) {
        # No alias for this
    }

¤â¤·'alias' => 'charset'¤ÎÁÈ¤Î¥ê¥¹¥È¤Ç¸Æ¤Ð¤ì¤ì¤Ð¡¢¤½¤ì¤é¤ÎÊÌÌ¾¤¬»È¤¨¤ë¤è¤¦¤ËÄêµÁ¤·¤Þ¤¹¡£

Îã¡§

    utf8_charset_alias({ 'japanese' => 'sjis', 'japan' => 'sjis' });

Ãí°Õ¡§ÅÏ¤µ¤ì¤¿ÁÈ¤¬¡¢Í½¤áÄêµÁ¤µ¤ì¤Æ¤¤¤ëÊ¸»ú¥»¥Ã¥È¡¦¥¨¥ó¥³¡¼¥Ç¥£¥ó¥°¤Î½¸¹ç¤ËÄêµÁ¤µ¤ì¤Æ¤¤¤ëÊ¸»ú¥»¥Ã¥È¤Ë¥Þ¥Ã¥×¤µ¤ì¤Ê¤±¤ì¤Ð¡¢croak¤·¤Þ¤¹¡£¤³¤ì¤ÏÂ¾¤ÎÊÌÌ¾¤Ø¤ÎÊÌÌ¾¤òµö¤·¤Æ¤Ï¤¤¤Þ¤»¤ó¡£

Ê£¿ô¤ÎÊ¸»ú¥»¥Ã¥È¤ò£±²ó¤Î¸Æ½Ð¤·¤ÇÀßÄê¤¹¤ë¤³¤È¤¬¤Ç¤­¤Þ¤¹¡£

ÊÌÌ¾¤ò¥¯¥ê¡¼¥ó¤¹¤ë¤¿¤á¤Ë¤Ï¡¢undef¤ÎÊ¸»ú¥»¥Ã¥È¥Þ¥Ã¥Ô¥ó¥°¤òÅÏ¤·¤Þ¤¹¡£

Îã¡§

    utf8_charset_alias({ 'japanese' => undef });

ÊÌÌ¾¤¬ÀßÄê¤µ¤ì¤Æ¤¤¤ë´Ö¡¢¤â¤·Í½¤áÄêµÁ¤µ¤ì¤Æ¤¤¤ëÊ¸»ú¥»¥Ã¥È¤Ç¤¢¤ì¤Ð¡¢'utf8_supported_charset' ´Ø¿ô¤ÏÊÌÌ¾¤òÊÖ¤·¤Þ¤¹¡£

´ðËÜ¤ÎÄêµÁ¤µ¤ì¤¿Ê¸»ú¥¨¥ó¥³¡¼¥Ç¥£¥ó¥°¤òÊÌÌ¾¤Ç¥ª¡¼¥Ð¡¼¥é¥¤¥É¤¹¤ë¤È¡¢É¸½à¥¨¥é¡¼¡ÊSTDERR)¤Ø¤Î·Ù¹ð¥á¥Ã¥»¡¼¥¸¤ò½Ð¤·¤Þ¤¹¡£

=back

=over

=item utf8_supported_charset($charset_name);

¡Ê¥æ¡¼¥¶¤¬ÄêµÁ¤·¤¿ÊÌÌ¾¤â´Þ¤á¤Æ¡ËÌ¾¤Å¤±¤é¤ì¤¿Ê¸»ú¥»¥Ã¥È¤¬¥µ¥Ý¡¼¥È¤µ¤ì¤Æ¤¤¤ì¤Ðtrue¤òÊÖ¤·¤Þ¤¹¡£<p>¤½¤¦¤Ç¤Ê¤±¤ì¤Ðfalse¤òÊÖ¤·¤Þ¤¹¡£

Îã¡§

    if (! utf8_supported_charset('VISCII')) {
        # ¤Þ¤À¥µ¥Ý¡¼¥È¤µ¤ì¤Æ¤¤¤Þ¤»¤ó
    }

¥Ñ¥é¥á¡¼¥¿¤Ê¤·¤Ç¡¢¥ê¥¹¥È¡¦¥³¥ó¥Æ¥­¥¹¥È¤Ç¸Æ¤Ð¤ì¤ë¤È¡¢¡Ê¥æ¡¼¥¶¤¬ÄêµÁ¤·¤¿ÊÌÌ¾¤â´Þ¤á¤Æ¡Ë¥µ¥Ý¡¼¥È¤µ¤ì¤Æ¤¤¤ë¤¹¤Ù¤Æ¤ÎÊ¸»ú¥»¥Ã¥ÈÌ¾¤Î¥ê¥¹¥È¤òÊÖ¤·¤Þ¤¹¡£

Îã¡§

    my @charsets = utf8_supported_charset;

=back

=over

=item to_utf8({ -string => $string, -charset => $source_charset });

»ØÄê¤µ¤ì¤¿¸µ¤ÎÊ¸»ú¥»¥Ã¥È(source charset)¤«¤éUTF8¤ËÊÑ´¹¤µ¤ì¤¿Ê¸»úÎó¤òÊÖ¤·¤Þ¤¹¡£

=back

=over

=item from_utf8({ -string => $string, -charset => $target_charset});

UTF8¤«¤é»ØÄê¤µ¤ì¤¿¥¿¡¼¥²¥Ã¥È¤ÎÊ¸»ú¥»¥Ã¥È(target charset)¤ËÊÑ´¹¤µ¤ì¤¿Ê¸»úÎó¤òÊÖ¤·¤Þ¤¹¡£

=back

=head1 ¥Ð¡¼¥¸¥ç¥ó

1.12 - 2020.09.27

=head1 ¤ä¤ë¤Ù¤­¤³¤È

Jcode¡¢2¥Ð¥¤¥È¡¦¥¨¥ó¥³¡¼¥Ç¥£¥ó¥°¤½¤·¤Æ¥¨¥ó¥³¡¼¥Ç¥£¥ó¥°ÊÌÌ¾¤Î¤¿¤á¤ÎµÕ¹Ô¥Æ¥¹¥È

=head1 »²¹Í»ñÎÁ

L<Unicode::String> L<Unicode::Map8> L<Unicode::Map> L<Jcode>

=head1 Ãøºî¸¢

Copyright 2000-2020, Jerilyn Franz. All rights reserved.

=head1 ºî¼Ô

Jerilyn Franz <cpan@jerilyn.info>

=head1 ¥¯¥ì¥¸¥Ã¥È

Àî¹ç¹§Åµ "Kawai,Takanori" <GCD00051@nifty.ne.jp> - Ë®Ìõ

=head1 ¥é¥¤¥»¥ó¥¹


MIT License

Copyright (c) 2020 Jerilyn Franz

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

=cut
