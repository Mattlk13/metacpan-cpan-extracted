use Test::More qw(no_plan);
use strict;

use Math::Permute::Lists;

if (1)
 {my $a = ''; 
  ok 1 == permute {$a .= scalar(@_)." @_\n"};
  ok $a eq "0 \n";
 }
 
if (1)
 {my $a = ''; 
  ok 1 == permute {$a .= scalar(@_)." @_\n"} 1;
  ok $a eq "1 1\n";
 }

if (1)
 {my $a = ''; 
  ok 2 == permute {$a .= scalar(@_)." @_\n"} 0,1;
  ok $a eq <<END;
2 0 1
2 1 0
END
 }

if (1)
 {my $a = ''; 
  ok 2 == permute {$a .= scalar(@_)." @_\n"} 1,2;
  ok $a eq <<END;
2 1 2
2 2 1
END
 }

if (1)
 {my $a = ''; 
  ok 6 == permute {$a .= scalar(@_)." @_\n"} 1,2,3;
  ok $a eq <<END;
3 1 2 3
3 1 3 2
3 2 1 3
3 2 3 1
3 3 1 2
3 3 2 1
END
 }

if (1)
 {my $a = ''; 
  ok 6 == permute {$a .= scalar(@_)." @_\n"} [[1],[[2]],[[[3]]]];
  ok $a eq <<END;
3 1 2 3
3 1 3 2
3 2 1 3
3 2 3 1
3 3 1 2
3 3 2 1
END
 }

if (1)
 {my $a = ''; 
  ok 4 == permute {$a .= scalar(@_)." @_\n"} 1,[2,3];
  ok $a eq <<END;
3 1 2 3
3 1 3 2
3 2 3 1
3 3 2 1
END
 }

if (1)
 {my $a = ''; 
  ok 4 == permute {$a .= scalar(@_)." @_\n"} [1,2],3;
  ok $a eq <<END;
3 1 2 3
3 2 1 3
3 3 1 2
3 3 2 1
END
 }

if (1)
 {my $a = ''; 
  ok 32 == permute {$a .= scalar(@_)." @_\n"} [[1,2], [3,4]], [5,6];
  ok $a eq <<END;
6 1 2 3 4 5 6
6 1 2 3 4 6 5
6 1 2 4 3 5 6
6 1 2 4 3 6 5
6 2 1 3 4 5 6
6 2 1 3 4 6 5
6 2 1 4 3 5 6
6 2 1 4 3 6 5
6 3 4 1 2 5 6
6 3 4 1 2 6 5
6 3 4 2 1 5 6
6 3 4 2 1 6 5
6 4 3 1 2 5 6
6 4 3 1 2 6 5
6 4 3 2 1 5 6
6 4 3 2 1 6 5
6 5 6 1 2 3 4
6 5 6 1 2 4 3
6 5 6 2 1 3 4
6 5 6 2 1 4 3
6 5 6 3 4 1 2
6 5 6 3 4 2 1
6 5 6 4 3 1 2
6 5 6 4 3 2 1
6 6 5 1 2 3 4
6 6 5 1 2 4 3
6 6 5 2 1 3 4
6 6 5 2 1 4 3
6 6 5 3 4 1 2
6 6 5 3 4 2 1
6 6 5 4 3 1 2
6 6 5 4 3 2 1
END
 }

if (1)
 {my $a = ''; 
  ok 8 == permute {$a .= scalar(@_)." @_\n"} [1,2],[3,4];
  ok $a eq <<END;
4 1 2 3 4
4 1 2 4 3
4 2 1 3 4
4 2 1 4 3
4 3 4 1 2
4 3 4 2 1
4 4 3 1 2
4 4 3 2 1
END
 }

if (1)
 {my $a = ''; 
  ok 12 == permute {$a .= scalar(@_)." @_\n"} 1,[2,3],4;
  ok $a eq <<END;
4 1 2 3 4
4 1 3 2 4
4 1 4 2 3
4 1 4 3 2
4 2 3 1 4
4 3 2 1 4
4 2 3 4 1
4 3 2 4 1
4 4 1 2 3
4 4 1 3 2
4 4 2 3 1
4 4 3 2 1
END
 }

if (1)
 {my $a = ''; 
  ok 12 == permute {$a .= scalar(@_)." @_\n"} [1,[2,3],4];
  ok $a eq <<END;
4 1 2 3 4
4 1 3 2 4
4 1 4 2 3
4 1 4 3 2
4 2 3 1 4
4 3 2 1 4
4 2 3 4 1
4 3 2 4 1
4 4 1 2 3
4 4 1 3 2
4 4 2 3 1
4 4 3 2 1
END
 }

if (1)
 {my $a = ''; 
  ok 8 == permute {$a .= scalar(@_)." @_\n"} 1,[2,[3,4]];
  ok $a eq <<END;
4 1 2 3 4
4 1 2 4 3
4 1 3 4 2
4 1 4 3 2
4 2 3 4 1
4 2 4 3 1
4 3 4 2 1
4 4 3 2 1
END
 }

if (1)
 {my $a = ''; 
  ok 48 == permute {$a .= scalar(@_)." @_\n"} [1,2],[3,4],[5,6];
  ok $a eq <<END;
6 1 2 3 4 5 6
6 1 2 3 4 6 5
6 1 2 4 3 5 6
6 1 2 4 3 6 5
6 2 1 3 4 5 6
6 2 1 3 4 6 5
6 2 1 4 3 5 6
6 2 1 4 3 6 5
6 1 2 5 6 3 4
6 1 2 5 6 4 3
6 1 2 6 5 3 4
6 1 2 6 5 4 3
6 2 1 5 6 3 4
6 2 1 5 6 4 3
6 2 1 6 5 3 4
6 2 1 6 5 4 3
6 3 4 1 2 5 6
6 3 4 1 2 6 5
6 3 4 2 1 5 6
6 3 4 2 1 6 5
6 4 3 1 2 5 6
6 4 3 1 2 6 5
6 4 3 2 1 5 6
6 4 3 2 1 6 5
6 3 4 5 6 1 2
6 3 4 5 6 2 1
6 3 4 6 5 1 2
6 3 4 6 5 2 1
6 4 3 5 6 1 2
6 4 3 5 6 2 1
6 4 3 6 5 1 2
6 4 3 6 5 2 1
6 5 6 1 2 3 4
6 5 6 1 2 4 3
6 5 6 2 1 3 4
6 5 6 2 1 4 3
6 6 5 1 2 3 4
6 6 5 1 2 4 3
6 6 5 2 1 3 4
6 6 5 2 1 4 3
6 5 6 3 4 1 2
6 5 6 3 4 2 1
6 5 6 4 3 1 2
6 5 6 4 3 2 1
6 6 5 3 4 1 2
6 6 5 3 4 2 1
6 6 5 4 3 1 2
6 6 5 4 3 2 1
END
 }
