# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

package Math::GSL::Machine;
use base qw(Exporter);
use base qw(DynaLoader);
package Math::GSL::Machinec;
bootstrap Math::GSL::Machine;
package Math::GSL::Machine;
@EXPORT = qw();

# ---------- BASE METHODS -------------

package Math::GSL::Machine;

sub TIEHASH {
    my ($classname,$obj) = @_;
    return bless $obj, $classname;
}

sub CLEAR { }

sub FIRSTKEY { }

sub NEXTKEY { }

sub FETCH {
    my ($self,$field) = @_;
    my $member_func = "swig_${field}_get";
    $self->$member_func();
}

sub STORE {
    my ($self,$field,$newval) = @_;
    my $member_func = "swig_${field}_set";
    $self->$member_func($newval);
}

sub this {
    my $ptr = shift;
    return tied(%$ptr);
}


# ------- FUNCTION WRAPPERS --------

package Math::GSL::Machine;

*gsl_error = *Math::GSL::Machinec::gsl_error;
*gsl_stream_printf = *Math::GSL::Machinec::gsl_stream_printf;
*gsl_strerror = *Math::GSL::Machinec::gsl_strerror;
*gsl_set_error_handler = *Math::GSL::Machinec::gsl_set_error_handler;
*gsl_set_error_handler_off = *Math::GSL::Machinec::gsl_set_error_handler_off;
*gsl_set_stream_handler = *Math::GSL::Machinec::gsl_set_stream_handler;
*gsl_set_stream = *Math::GSL::Machinec::gsl_set_stream;

# ------- VARIABLE STUBS --------

package Math::GSL::Machine;

*GSL_DBL_EPSILON = *Math::GSL::Machinec::GSL_DBL_EPSILON;
*GSL_SQRT_DBL_EPSILON = *Math::GSL::Machinec::GSL_SQRT_DBL_EPSILON;
*GSL_ROOT3_DBL_EPSILON = *Math::GSL::Machinec::GSL_ROOT3_DBL_EPSILON;
*GSL_ROOT4_DBL_EPSILON = *Math::GSL::Machinec::GSL_ROOT4_DBL_EPSILON;
*GSL_ROOT5_DBL_EPSILON = *Math::GSL::Machinec::GSL_ROOT5_DBL_EPSILON;
*GSL_ROOT6_DBL_EPSILON = *Math::GSL::Machinec::GSL_ROOT6_DBL_EPSILON;
*GSL_LOG_DBL_EPSILON = *Math::GSL::Machinec::GSL_LOG_DBL_EPSILON;
*GSL_DBL_MIN = *Math::GSL::Machinec::GSL_DBL_MIN;
*GSL_SQRT_DBL_MIN = *Math::GSL::Machinec::GSL_SQRT_DBL_MIN;
*GSL_ROOT3_DBL_MIN = *Math::GSL::Machinec::GSL_ROOT3_DBL_MIN;
*GSL_ROOT4_DBL_MIN = *Math::GSL::Machinec::GSL_ROOT4_DBL_MIN;
*GSL_ROOT5_DBL_MIN = *Math::GSL::Machinec::GSL_ROOT5_DBL_MIN;
*GSL_ROOT6_DBL_MIN = *Math::GSL::Machinec::GSL_ROOT6_DBL_MIN;
*GSL_LOG_DBL_MIN = *Math::GSL::Machinec::GSL_LOG_DBL_MIN;
*GSL_DBL_MAX = *Math::GSL::Machinec::GSL_DBL_MAX;
*GSL_SQRT_DBL_MAX = *Math::GSL::Machinec::GSL_SQRT_DBL_MAX;
*GSL_ROOT3_DBL_MAX = *Math::GSL::Machinec::GSL_ROOT3_DBL_MAX;
*GSL_ROOT4_DBL_MAX = *Math::GSL::Machinec::GSL_ROOT4_DBL_MAX;
*GSL_ROOT5_DBL_MAX = *Math::GSL::Machinec::GSL_ROOT5_DBL_MAX;
*GSL_ROOT6_DBL_MAX = *Math::GSL::Machinec::GSL_ROOT6_DBL_MAX;
*GSL_LOG_DBL_MAX = *Math::GSL::Machinec::GSL_LOG_DBL_MAX;
*GSL_FLT_EPSILON = *Math::GSL::Machinec::GSL_FLT_EPSILON;
*GSL_SQRT_FLT_EPSILON = *Math::GSL::Machinec::GSL_SQRT_FLT_EPSILON;
*GSL_ROOT3_FLT_EPSILON = *Math::GSL::Machinec::GSL_ROOT3_FLT_EPSILON;
*GSL_ROOT4_FLT_EPSILON = *Math::GSL::Machinec::GSL_ROOT4_FLT_EPSILON;
*GSL_ROOT5_FLT_EPSILON = *Math::GSL::Machinec::GSL_ROOT5_FLT_EPSILON;
*GSL_ROOT6_FLT_EPSILON = *Math::GSL::Machinec::GSL_ROOT6_FLT_EPSILON;
*GSL_LOG_FLT_EPSILON = *Math::GSL::Machinec::GSL_LOG_FLT_EPSILON;
*GSL_FLT_MIN = *Math::GSL::Machinec::GSL_FLT_MIN;
*GSL_SQRT_FLT_MIN = *Math::GSL::Machinec::GSL_SQRT_FLT_MIN;
*GSL_ROOT3_FLT_MIN = *Math::GSL::Machinec::GSL_ROOT3_FLT_MIN;
*GSL_ROOT4_FLT_MIN = *Math::GSL::Machinec::GSL_ROOT4_FLT_MIN;
*GSL_ROOT5_FLT_MIN = *Math::GSL::Machinec::GSL_ROOT5_FLT_MIN;
*GSL_ROOT6_FLT_MIN = *Math::GSL::Machinec::GSL_ROOT6_FLT_MIN;
*GSL_LOG_FLT_MIN = *Math::GSL::Machinec::GSL_LOG_FLT_MIN;
*GSL_FLT_MAX = *Math::GSL::Machinec::GSL_FLT_MAX;
*GSL_SQRT_FLT_MAX = *Math::GSL::Machinec::GSL_SQRT_FLT_MAX;
*GSL_ROOT3_FLT_MAX = *Math::GSL::Machinec::GSL_ROOT3_FLT_MAX;
*GSL_ROOT4_FLT_MAX = *Math::GSL::Machinec::GSL_ROOT4_FLT_MAX;
*GSL_ROOT5_FLT_MAX = *Math::GSL::Machinec::GSL_ROOT5_FLT_MAX;
*GSL_ROOT6_FLT_MAX = *Math::GSL::Machinec::GSL_ROOT6_FLT_MAX;
*GSL_LOG_FLT_MAX = *Math::GSL::Machinec::GSL_LOG_FLT_MAX;
*GSL_SFLT_EPSILON = *Math::GSL::Machinec::GSL_SFLT_EPSILON;
*GSL_SQRT_SFLT_EPSILON = *Math::GSL::Machinec::GSL_SQRT_SFLT_EPSILON;
*GSL_ROOT3_SFLT_EPSILON = *Math::GSL::Machinec::GSL_ROOT3_SFLT_EPSILON;
*GSL_ROOT4_SFLT_EPSILON = *Math::GSL::Machinec::GSL_ROOT4_SFLT_EPSILON;
*GSL_ROOT5_SFLT_EPSILON = *Math::GSL::Machinec::GSL_ROOT5_SFLT_EPSILON;
*GSL_ROOT6_SFLT_EPSILON = *Math::GSL::Machinec::GSL_ROOT6_SFLT_EPSILON;
*GSL_LOG_SFLT_EPSILON = *Math::GSL::Machinec::GSL_LOG_SFLT_EPSILON;
*GSL_MACH_EPS = *Math::GSL::Machinec::GSL_MACH_EPS;
*GSL_SQRT_MACH_EPS = *Math::GSL::Machinec::GSL_SQRT_MACH_EPS;
*GSL_ROOT3_MACH_EPS = *Math::GSL::Machinec::GSL_ROOT3_MACH_EPS;
*GSL_ROOT4_MACH_EPS = *Math::GSL::Machinec::GSL_ROOT4_MACH_EPS;
*GSL_ROOT5_MACH_EPS = *Math::GSL::Machinec::GSL_ROOT5_MACH_EPS;
*GSL_ROOT6_MACH_EPS = *Math::GSL::Machinec::GSL_ROOT6_MACH_EPS;
*GSL_LOG_MACH_EPS = *Math::GSL::Machinec::GSL_LOG_MACH_EPS;
*GSL_VERSION = *Math::GSL::Machinec::GSL_VERSION;
*GSL_MAJOR_VERSION = *Math::GSL::Machinec::GSL_MAJOR_VERSION;
*GSL_MINOR_VERSION = *Math::GSL::Machinec::GSL_MINOR_VERSION;
*GSL_POSZERO = *Math::GSL::Machinec::GSL_POSZERO;
*GSL_NEGZERO = *Math::GSL::Machinec::GSL_NEGZERO;
*GSL_SUCCESS = *Math::GSL::Machinec::GSL_SUCCESS;
*GSL_FAILURE = *Math::GSL::Machinec::GSL_FAILURE;
*GSL_CONTINUE = *Math::GSL::Machinec::GSL_CONTINUE;
*GSL_EDOM = *Math::GSL::Machinec::GSL_EDOM;
*GSL_ERANGE = *Math::GSL::Machinec::GSL_ERANGE;
*GSL_EFAULT = *Math::GSL::Machinec::GSL_EFAULT;
*GSL_EINVAL = *Math::GSL::Machinec::GSL_EINVAL;
*GSL_EFAILED = *Math::GSL::Machinec::GSL_EFAILED;
*GSL_EFACTOR = *Math::GSL::Machinec::GSL_EFACTOR;
*GSL_ESANITY = *Math::GSL::Machinec::GSL_ESANITY;
*GSL_ENOMEM = *Math::GSL::Machinec::GSL_ENOMEM;
*GSL_EBADFUNC = *Math::GSL::Machinec::GSL_EBADFUNC;
*GSL_ERUNAWAY = *Math::GSL::Machinec::GSL_ERUNAWAY;
*GSL_EMAXITER = *Math::GSL::Machinec::GSL_EMAXITER;
*GSL_EZERODIV = *Math::GSL::Machinec::GSL_EZERODIV;
*GSL_EBADTOL = *Math::GSL::Machinec::GSL_EBADTOL;
*GSL_ETOL = *Math::GSL::Machinec::GSL_ETOL;
*GSL_EUNDRFLW = *Math::GSL::Machinec::GSL_EUNDRFLW;
*GSL_EOVRFLW = *Math::GSL::Machinec::GSL_EOVRFLW;
*GSL_ELOSS = *Math::GSL::Machinec::GSL_ELOSS;
*GSL_EROUND = *Math::GSL::Machinec::GSL_EROUND;
*GSL_EBADLEN = *Math::GSL::Machinec::GSL_EBADLEN;
*GSL_ENOTSQR = *Math::GSL::Machinec::GSL_ENOTSQR;
*GSL_ESING = *Math::GSL::Machinec::GSL_ESING;
*GSL_EDIVERGE = *Math::GSL::Machinec::GSL_EDIVERGE;
*GSL_EUNSUP = *Math::GSL::Machinec::GSL_EUNSUP;
*GSL_EUNIMPL = *Math::GSL::Machinec::GSL_EUNIMPL;
*GSL_ECACHE = *Math::GSL::Machinec::GSL_ECACHE;
*GSL_ETABLE = *Math::GSL::Machinec::GSL_ETABLE;
*GSL_ENOPROG = *Math::GSL::Machinec::GSL_ENOPROG;
*GSL_ENOPROGJ = *Math::GSL::Machinec::GSL_ENOPROGJ;
*GSL_ETOLF = *Math::GSL::Machinec::GSL_ETOLF;
*GSL_ETOLX = *Math::GSL::Machinec::GSL_ETOLX;
*GSL_ETOLG = *Math::GSL::Machinec::GSL_ETOLG;
*GSL_EOF = *Math::GSL::Machinec::GSL_EOF;

@EXPORT_OK = qw/
               $GSL_DBL_EPSILON
               $GSL_SQRT_DBL_EPSILON
               $GSL_ROOT3_DBL_EPSILON
               $GSL_ROOT4_DBL_EPSILON
               $GSL_ROOT5_DBL_EPSILON
               $GSL_ROOT6_DBL_EPSILON
               $GSL_LOG_DBL_EPSILON
               $GSL_DBL_MIN
               $GSL_SQRT_DBL_MIN
               $GSL_ROOT3_DBL_MIN
               $GSL_ROOT4_DBL_MIN
               $GSL_ROOT5_DBL_MIN
               $GSL_ROOT6_DBL_MIN
               $GSL_LOG_DBL_MIN
               $GSL_DBL_MAX
               $GSL_SQRT_DBL_MAX
               $GSL_ROOT3_DBL_MAX
               $GSL_ROOT4_DBL_MAX
               $GSL_ROOT5_DBL_MAX
               $GSL_ROOT6_DBL_MAX
               $GSL_LOG_DBL_MAX
               $GSL_FLT_EPSILON
               $GSL_SQRT_FLT_EPSILON
               $GSL_ROOT3_FLT_EPSILON
               $GSL_ROOT4_FLT_EPSILON
               $GSL_ROOT5_FLT_EPSILON
               $GSL_ROOT6_FLT_EPSILON
               $GSL_LOG_FLT_EPSILON
               $GSL_FLT_MIN
               $GSL_SQRT_FLT_MIN
               $GSL_ROOT3_FLT_MIN
               $GSL_ROOT4_FLT_MIN
               $GSL_ROOT5_FLT_MIN
               $GSL_ROOT6_FLT_MIN
               $GSL_LOG_FLT_MIN
               $GSL_FLT_MAX
               $GSL_SQRT_FLT_MAX
               $GSL_ROOT3_FLT_MAX
               $GSL_ROOT4_FLT_MAX
               $GSL_ROOT5_FLT_MAX
               $GSL_ROOT6_FLT_MAX
               $GSL_LOG_FLT_MAX
               $GSL_SFLT_EPSILON
               $GSL_SQRT_SFLT_EPSILON
               $GSL_ROOT3_SFLT_EPSILON
               $GSL_ROOT4_SFLT_EPSILON
               $GSL_ROOT5_SFLT_EPSILON
               $GSL_ROOT6_SFLT_EPSILON
               $GSL_LOG_SFLT_EPSILON
               $GSL_MACH_EPS
               $GSL_SQRT_MACH_EPS
               $GSL_ROOT3_MACH_EPS
               $GSL_ROOT4_MACH_EPS
               $GSL_ROOT5_MACH_EPS
               $GSL_ROOT6_MACH_EPS
               $GSL_LOG_MACH_EPS
             /;
%EXPORT_TAGS = ( all => [ @EXPORT_OK ] );
__END__

=encoding utf8

=head1 NAME

Math::GSL::Machine - Machine constants

=head1 SYNOPSIS

    use Math::GSL::Machine qw/:all/;
    print "The GSL_DBL_EPSILON Constant is $GSL_DBL_EPSILON\n";

Here is a list of all the constants included in this module :

=over

=item *   $GSL_DBL_EPSILON

=item *   $GSL_SQRT_DBL_EPSILON

=item *   $GSL_ROOT3_DBL_EPSILON

=item *   $GSL_ROOT4_DBL_EPSILON

=item *   $GSL_ROOT5_DBL_EPSILON

=item *   $GSL_ROOT6_DBL_EPSILON

=item *   $GSL_LOG_DBL_EPSILON

=item *   $GSL_DBL_MIN

=item *   $GSL_SQRT_DBL_MIN

=item *   $GSL_ROOT3_DBL_MIN

=item *   $GSL_ROOT4_DBL_MIN

=item *   $GSL_ROOT5_DBL_MIN

=item *   $GSL_ROOT6_DBL_MIN

=item *   $GSL_LOG_DBL_MIN

=item *   $GSL_DBL_MAX

=item *   $GSL_SQRT_DBL_MAX

=item *   $GSL_ROOT3_DBL_MAX

=item *   $GSL_ROOT4_DBL_MAX

=item *   $GSL_ROOT5_DBL_MAX

=item *   $GSL_ROOT6_DBL_MAX

=item *   $GSL_LOG_DBL_MAX

=item *   $GSL_FLT_EPSILON

=item *   $GSL_SQRT_FLT_EPSILON

=item *   $GSL_ROOT3_FLT_EPSILON

=item *   $GSL_ROOT4_FLT_EPSILON

=item *   $GSL_ROOT5_FLT_EPSILON

=item *   $GSL_ROOT6_FLT_EPSILON

=item *   $GSL_LOG_FLT_EPSILON

=item *   $GSL_FLT_MIN

=item *   $GSL_SQRT_FLT_MIN

=item *   $GSL_ROOT3_FLT_MIN

=item *   $GSL_ROOT4_FLT_MIN

=item *   $GSL_ROOT5_FLT_MIN

=item *   $GSL_ROOT6_FLT_MIN

=item *   $GSL_LOG_FLT_MIN

=item *   $GSL_FLT_MAX

=item *   $GSL_SQRT_FLT_MAX

=item *   $GSL_ROOT3_FLT_MAX

=item *   $GSL_ROOT4_FLT_MAX

=item *   $GSL_ROOT5_FLT_MAX

=item *   $GSL_ROOT6_FLT_MAX

=item *   $GSL_LOG_FLT_MAX

=item *   $GSL_SFLT_EPSILON

=item *   $GSL_SQRT_SFLT_EPSILON

=item *   $GSL_ROOT3_SFLT_EPSILON

=item *   $GSL_ROOT4_SFLT_EPSILON

=item *   $GSL_ROOT5_SFLT_EPSILON

=item *   $GSL_ROOT6_SFLT_EPSILON

=item *   $GSL_LOG_SFLT_EPSILON

=item *   $GSL_MACH_EPS

=item *   $GSL_SQRT_MACH_EPS

=item *   $GSL_ROOT3_MACH_EPS

=item *   $GSL_ROOT4_MACH_EPS

=item *   $GSL_ROOT5_MACH_EPS

=item *   $GSL_ROOT6_MACH_EPS

=item *   $GSL_LOG_MACH_EPS

=back

=head1 AUTHORS

Jonathan "Duke" Leto <jonathan@leto.net> and Thierry Moisan <thierry.moisan@gmail.com>

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2008-2021 Jonathan "Duke" Leto and Thierry Moisan

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.

=cut

1;
