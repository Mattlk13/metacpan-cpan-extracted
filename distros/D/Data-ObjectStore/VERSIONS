2.13 - updated permissions in t/OLDVERSIONDB so that test
       scripts dont barf.
2.12 - make build depend on version 6.04 of Data::RecordStore

2.11 - fix test.

2.05 - moved locking to Data::RecordStore.

        open_store must now be called by
        Data::ObjectStore->open_store
        _not_ Data::ObjectStore::open_store

        open_store now take an arguments hash or a single base path
        argument.

        Arguments (so far)
          DATA_PROVIDER_CLASS (defaults to Data::RecordStore)

 2.04 - added clearvols method to Data::ObjectStore::Container

 2.03 - fix typo in bin/objectstore_upgrade
        timing test update
        added clearvol method
        fix bug in vol and add test for vol

 2.02 - updated datastore version requirements

 2.01 - fixed bug in test

 2   -
   requires store update

   The update now updates into a seperate directory.

   use the new transactions of the recordstore which may nest.

   added the following methods to the Data::ObjectStore :
    * lock( @locknames ) - uses flock to lock those lock names
    * unlock - unlocks all locks this store has locked

   added the following methods to the Data::ObjectStore::Container :
    * vol( key, value ) - gets/sets a keyed volatile value which is not saved
    * lock( @locknames ) - uses flock to lock those lock names. convenience, just calls the store's method
    * unlock - unlocks all locks this store has locked. convenience, just calls the store's method
    
   added a METADATA field to the objects which contains
    * created time
    * updated time
    * connections - number of connections this has to the root
    * backconnections - { id => count } of items connected to this
   the class plus the metadata fields are joined by | and ended by a
   space. Together, they make the head descriptor of the object.

   big arrays and hashes
    corresponds to a change in Data::RecordStore ( version )
    which can now read and write partial records.
    the sharding of these big arrays and hashes is now so that the
    array or hash is on disk all at once, but the entries are
    accessed and written to in one or more entries at a time.

1.106 - added mode and group options for the creation
        of object stores
1.105 - made Data::ObjectStore::get_id and Data::ObjectStore::Container::id public methods
1.104 - make sure to use Data::RecordStore v 3.17
1.103 - 
1.102 - fix dependency issue.
1.0 - Renaming Yote to Data::ObjectStore