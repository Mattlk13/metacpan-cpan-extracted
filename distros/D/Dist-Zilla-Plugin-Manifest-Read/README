WHAT?

Dist-Zilla-Plugin-Manifest-Read (or Manifest::Read for brevity) is a Dist::Zilla
plugin. It reads *annotated source* manifest, checks existence of all listed
files and directories, and adds selected files to the distribution.
Manifest::Read also does FileFinder role, providing the list of files for other
plugins.

WHY?

Dist::Zilla advertises using GatherDir plugin to populate the distribution.
However, GatherDir has disadvantage: it grabs really all the files from the
source directory, including files which are not meant to be added to
distribution, like previously built distribution tarball. You have to use either
GatherDir parameters or dedicated plugins (e. g. PruneCruft) to exclude unwanted
files from the distribution. However, risk to grab unwanted files remains.

There is another (better to my taste) approach: grab only the files explicitly
listed in the MANIFEST file. This is implemented by nice GatherFromManifest
plugin.

However I want a bit more. I also want to specify (and document) files (and
directories) which are part of source, but should not be included to the
distribution. For example:

    ex/                     / Examples.
    ex/Assa/                / Very basic example.
    ex/Assa/dist.ini        - dzil config file.
    ex/Assa/dzil.out        - dzil output, included into user manual.

    lib/                    / Modules to install:
    lib/Assa.pm             + The primary module.

    t/                      / Tests:
    t/advanced.t            - Not ready yet, do not distribute.
    t/basic.t               + Basic functional test.

    tools/                  / Build tools:
    tools/run-examples.sh   - Run examples, refresh dzil.out file.

    Changes                 + Release history.
    COPYING                 + License text.
    README                  - Source documentation.
    TODO                    - Plans and ideas.
    VERSION                 + Version number.

NAMING

perl-Dist-Zilla-Plugin-Manifest-Read is official software name.

However, in Perl world prefix "perl-" is redundant and not used. For example, on
meta::cpan <https://metacpan.org/> this software is named as
Dist-Zilla-Plugin-Manifest-Read. In the rest of the documentation shortened name
Dist-Zilla-Plugin-Manifest-Read is used as synonym for full name
perl-Dist-Zilla-Plugin-Manifest-Read. We are in the Perl world, aren't we?

You may notice that name may be spelled with dashes
(Dist-Zilla-Plugin-Manifest-Read) or with double colons
(Dist::Zilla::Plugin::Manifest::Read). Strictly speaking, there is difference:
the first one is software name, while the second is name of Perl package, but
often these names are interchangeable especially if software consists of single
package.

FORMS

You may face Dist-Zilla-Plugin-Manifest-Read in *source* or *distribution*
forms.

If you are going to have annotated source manifest, you will likely be
interested in *using* Dist-Zilla-Plugin-Manifest-Read *distribution*. If you are
going to *develop* (or *hack*) the Dist-Zilla-Plugin-Manifest-Read itself, you
will likely need the *source*, not distribution.

Since Perl is an interpreting language, modules in the distribution *look* like
sources. Actually, they are Perl source files. But they are not *actual*
sources, because they are *built* (preprocessed or generated) by Dist-Zilla.

How to distinguish source and distribution:

*   Source may contain Mercurial files and directories .hgignore, .hgtags, .hg/,
    while distribution should not.

*   Source should contain dist.ini file, while distribution may not.

*   Source should *not* contain xt/ directory, while distribution should.

*   Name of source directory does *not* include version (e. g.
    Dist-Zilla-Plugin-Manifest-Read), while name of distribution does (e. g.
    Dist-Zilla-Plugin-Manifest-Read-v0.7.1).

SOURCE

Dist-Zilla-Plugin-Manifest-Read source is in Mercurial repository hosted on
fedorapeople.org. To clone the entire repository:

    $ hg clone https://vandebugger.fedorapeople.org/hg/perl-Dist-Zilla-Plugin-Manifest-Read

Source Files

Dist-Zilla-Plugin-Manifest-Read source files usually include a comment near the
top of the file:

    This file is part of perl-Dist-Zilla-Plugin-Manifest-Read.

Not all source files are included into distribution. Some source files are used
at distribution build time only, and not required for installation.

DISTRIBUTION

Dist-Zilla-Plugin-Manifest-Read distributions are published on CPAN
<https://metacpan.org/release/Dist-Zilla-Plugin-Manifest-Read>.

Generated Files

Distribution may contain files preprocessed or generated by Dist-Zilla and its
plugins. Some generated files are made from Dist-Zilla-Plugin-Manifest-Read
source, but some are generated from third-party templates. Files generated from
third-party templates usually include a comment near the top of the file:

    This file was generated with NAME

(where *NAME* is a name of the plugin generated the file). Such files are *not*
part of Dist-Zilla-Plugin-Manifest-Read source, and
Dist-Zilla-Plugin-Manifest-Read copyright and license are not applicable to such
files.

INSTALLING

With cpanm

cpanm tool is (probably) the easiest way to install distribution. It automates
downloading, building, testing, installing, and uninstalling.

To install the latest version from CPAN:

    $ cpanm Dist::Zilla::Plugin::Manifest::Read

To install a specific version (e. g. *v0.7.1*) from CPAN:

    $ cpanm Dist::Zilla::Plugin::Manifest::Read@v0.7.1

To install locally available distribution (e. g. previously downloaded from CPAN
or built from sources):

    $ cpanm ./Dist-Zilla-Plugin-Manifest-Read-v0.7.1.tar.gz

To uninstall the distribution:

    $ cpanm -U Dist::Zilla::Plugin::Manifest::Read

Manually

To install distribution tarball manually (let us assume you have version
*v0.7.1* of the distribution):

    $ tar xaf Dist-Zilla-Plugin-Manifest-Read-v0.7.1.tar.gz
    $ cd Dist-Zilla-Plugin-Manifest-Read-v0.7.1
    $ perl Build.PL
    $ ./Build build
    $ ./Build test
    $ ./Build install

See Also

How to install CPAN modules <http://www.cpan.org/modules/INSTALL.html>

HACKING

For hacking, you will need Mercurial, Perl interpreter and Dist-Zilla (with some
plugins), and likely cpanm to install missed parts.

Clone the repository first:

    $ hg clone https://vandebugger.fedorapeople.org/hg/perl-Dist-Zilla-Plugin-Manifest-Read
    $ cd perl-Dist-Zilla-Plugin-Manifest-Read

To build a distribution from the source, run:

    $ dzil build

If required Dist-Zilla plugins are missed, the dzil tool will warn you and show
the command to install all the required plugins, e. g.:

    Required plugin Dist::Zilla::Plugin::Test::EOL isn't installed.

    Run 'dzil authordeps' to see a list of all required plugins.
    You can pipe the list to your CPAN client to install or update them:

        dzil authordeps --missing | cpanm

To run the tests (to check primary software functionality):

    $ dzil test

To run extended tests (to check source code style, documentation and other
things which are not too important for software end users):

    $ dzil xtest

To install the distribution:

    $ dzil install

or

    $ cpanm ./Dist-Zilla-Plugin-Manifest-Read-VERSION.tar.gz

where *VERSION* is a version of built distribution.

To clean the directory:

    $ dzil clean

DOCUMENTATION

Online

The easiest way is browsing the documentation online at meta::cpan
<https://metacpan.org/release/Dist-Zilla-Plugin-Manifest-Read>.

Locally Installed

If you have the distribution installed, use perldoc tool to browse locally
installed documentation:

    $ perldoc Dist::Zilla::Plugin::Manifest::Read::Manual
    $ perldoc Dist::Zilla::Plugin::Manifest::Read

Built from Source

Build Dist-Zilla-Plugin-Manifest-Read first (see "HACKING"), then:

    $ cd Dist-Zilla-Plugin-Manifest-Read-VERSION
    $ perldoc Dist::Zilla::Plugin::Manifest::Read::Manual
    $ perldoc Dist::Zilla::Plugin::Manifest::Read

where *VERSION* is a version of built distribution.

FEEDBACK

CPAN Request Tracker

The quickest way to report a bug in Dist-Zilla-Plugin-Manifest-Read is by
sending email to bug-Dist-Zilla-Plugin-Manifest-Read [at] rt.cpan.org.

CPAN request tracker can be used via web interface also:

Browse bugs
<https://rt.cpan.org/Public/Dist/Display.html?Name=Dist-Zilla-Plugin-Manifest-Re
ad>
    Browsing bugs does not require authentication.

Report bugs
<https://rt.cpan.org/Public/Bug/Report.html?Queue=Dist-Zilla-Plugin-Manifest-Rea
d>
    You need to be a CPAN author, have a BitCard <https://www.bitcard.org/>
    account, or OpenID in order to report bugs via the web interface.

    (On 2015-04-27 I have logged in successfully with my LiveJournal OpenID, but
    my Google OpenID did not work for CPAN. I did not check other OpenID
    providers.)

Send Email to Author

As a last resort, send email to author: Van de Bugger <van.de.bugger@gmail.com>.
Please start message subject with "perl-Dist-Zilla-Plugin-Manifest-Read:".

GLOSSARY

CPAN
    Comprehensive Perl Archive Network, a large collection of Perl software and
    documentation. See cpan.org <http://www.cpan.org>, What is CPAN?
    <http://www.cpan.org/misc/cpan-faq.html#What_is_CPAN>.

Distribution
    Tarball, containing Perl modules and accompanying files (documentation,
    metainfo, tests). Usually distributions are uploaded to CPAN, and can be
    installed with dedicated tools (cpan, cpanm, and others).

Module
    Perl library file, usually with .pm suffix. Usually contains one package.
    See perlmod <http://perldoc.perl.org/perlmod.html#Perl-Modules>.

Package
    Perl language construct. See package
    <http://perldoc.perl.org/functions/package.html> and perlmod
    <http://perldoc.perl.org/perlmod.html#Packages>.
