NAME
    Data::Dump::Options - Like Data::Dump but with some more options

VERSION
    This document describes version 0.002 of Data::Dump::Options (from Perl
    distribution Data-Dump-Options), released on 2020-06-05.

SYNOPSIS
    Use like you would use Data::Dump:

     use Data::Dump;
     dd [1,2,3,4];

DESCRIPTION
    A fork of Data::Dump 1.23 to give some more dumping options.

CONFIGURATION
    In addition to Data::Dump's options, there are a few package variables
    that can be set to modify the output generated by the dump functions.
    It's wise to localize the setting of these.

    $Data::Dump::Options::OBJECT_AS
        If set to "string", then objects (blessed references) will just be
        dumped as:

         "$obj"

        which in most cases will be:

         Foo::Bar=ARRAY(0x5653ec564740)

        unless the object overloads stringification (see overload).

        If set to "default_string", then object will be dumped as the
        standard:

         Foo::Bar=ARRAY(0x5653ec564740)

        disregarding object's overloading of stringification.

        Useful if you don't want to see the innards of objects (e.g. during
        debugging), or, as TOBYINK <https://metacpan.org/author/TOBYINK>
        suggested, "Useful if you are passionate about objects being
        opaque."

        The default value is "dump".

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/Data-Dump-Options>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-Data-Dump-Options>.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=Data-Dump-Options>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

SEE ALSO
    Data::Dump actually has a "filtering" mechanism to customize dumping. It
    lets you specify a callback function that gets called for every item
    during dumping process and has a chance to produce a custom dump for
    that item. "Data::Dump::Options" could be implemented using this
    filtering instead, but filtered dumping is slower.

    Other "Data::Dump::*" modules.

    Data::Bahe also offers some dumping options. This is a project I've
    mulled over from time to time since about 2015 and is currently in early
    stage of implementation. Data::Dump::Options is written as a stop-gap
    measure to quickly give the kind of dumps I want.

AUTHOR
    perlancar <perlancar@cpan.org>

COPYRIGHT AND LICENSE
    This software is copyright (c) 2020 by perlancar@cpan.org.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

