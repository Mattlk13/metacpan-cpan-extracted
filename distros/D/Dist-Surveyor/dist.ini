name    = Dist-Surveyor
author  = Tim Bunce <Tim.Bunce@pobox.com>
license = Perl_5
copyright_holder = Tim Bunce
copyright_year   = 2011

; version provider
[Git::NextVersion]

; choose files to include
[Git::GatherDir]
exclude_filename = dist_surveyor_packed.pl
exclude_filename = process_fatpacker_packlist.pl
exclude_filename = fatpackit.sh
[PruneCruft]
;[ManifestSkip]

; file modifications
[PkgVersion]
[PodVersion]

; generated files
[License]
[ReadmeAnyFromPod]

; t tests
[Test::Compile]
fake_home = 1

; xt tests
[MetaTests]
[PodSyntaxTests]
;[PodCoverageTests]
[Test::Portability]

; metadata
[Prereqs]
version = 0
Compress::Zlib = 0
CPAN::DistnameInfo = 0
HTTP::Tiny = 0.014
JSON::MaybeXS = 1.001000
List::Util = 0
Memoize = 0
Module::CoreList = 0
Module::Metadata = 0
Scalar::Util = 0
Storable = 0

[Prereqs / TestRequires]
Test::More = 0.88
Archive::Tar = 0
Test::RequiresInternet = 0

[Prereqs / DevelopRequires]
App::FatPacker = 0
version = 0.9905

; avoid being picked up by MinimumPerl
[Encoding]
encoding = bytes
filename = t/scanlib.tar

[MinimumPerl]
[MetaProvides::Package]
[MetaNoIndex]
directory = t
directory = xt
directory = examples
directory = corpus
[MetaJSON]
[MetaYAML]
[GithubMeta]
[Git::Contributors]

; build system
[ExecDir]
;[ShareDir]
[MakeMaker]

; manifest (after all generated files)
[Manifest]

; before release
[Git::Check]
[Git::CommitBuild]
branch =
release_branch = build/%b
;[CheckChangeLog]
[CheckChangesHasContent]
[RunExtraTests]

; releaser 
[TestRelease]
[ConfirmRelease]
[UploadToCPAN]

; after release
[Git::Commit / Commit_Dirty_Files]
[Git::Tag]
[NextRelease]
[Git::Commit / Commit_Changes]
[Git::Push]
