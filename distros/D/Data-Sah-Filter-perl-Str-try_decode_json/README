NAME
    Data::Sah::Filter::perl::Str::try_decode_json - JSON-decode if we can,
    otherwise leave string as-is

VERSION
    This document describes version 0.003 of
    Data::Sah::Filter::perl::Str::try_decode_json (from Perl distribution
    Data-Sah-Filter-perl-Str-try_decode_json), released on 2022-08-25.

SYNOPSIS
  Using in Sah schema's "prefilters" (or "postfilters") clause
     ["str","prefilters",[["Str::try_decode_json"]]]

  Using with Data::Sah:
     use Data::Sah qw(gen_validator);
 
     my $schema = ["str","prefilters",[["Str::try_decode_json"]]];
     my $validator = gen_validator($schema);
     if ($validator->($some_data)) { print 'Valid!' }

  Using with Data::Sah:Filter directly:
     use Data::Sah::Filter qw(gen_filter);

     my $filter = gen_filter([["Str::try_decode_json"]]);
     my $filtered_value = $filter->($some_data);

  Sample data and filtering results
     undef # valid, unchanged (Unfiltered)
     "foo" # valid, unchanged (Unquoted becomes as-is)
     "[1," # valid, unchanged (Misquoted becomes as-is)
     "\"foo\"" # valid, becomes "foo" (Quoted string becomes string)
     "[1,2]" # valid, becomes [1,2] (Quoted array becomes array)
     "null" # valid, becomes undef (Bare null keyword becomes undef)

DESCRIPTION
    This rule is sometimes convenient if you want to accept unquoted string
    or a data structure (encoded in JSON). This means, compared to just
    decoding from JSON, you don't have to always quote your string. But
    beware of traps like the bare values "null", "true", "false" becoming
    undef/1/0 in Perl instead of string literals, because they can be
    JSON-decoded.

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/Data-Sah-Filter-perl-Str-try_decode_json>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-Data-Sah-Filter-perl-Str-try_decode_j
    son>.

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR,
    Pod::Weaver::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla- and/or Pod::Weaver plugins. Any additional steps
    required beyond that are considered a bug and can be reported to me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2022, 2020 by perlancar
    <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=Data-Sah-Filter-perl-
    Str-try_decode_json>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

