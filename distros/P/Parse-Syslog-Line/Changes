==================================================
Changes from 2022-06-21 00:00:00 +0000 to present.
==================================================

----------------------------------------
version 5.3 at 2024-06-20 21:10:30 +0000
----------------------------------------

  Change: 403cddd9b4b685f8cc53817fb7d4695c20e2a354
  Author: Brad Lhotsky <brad@divisionbyzero.net>
  Date : 2024-06-20 14:09:27 +0000

    Updates broken regex

    The `{,MAX}` quantifier appears to have been broken until v5.33.6, which is
    what MinimumPerl was picking up on. This uses `{0,2}` to work-around it. 

----------------------------------------
version 5.2 at 2024-06-20 20:56:49 +0000
----------------------------------------

  Change: fe1b7405a75fa190df57a677cde813c896f4e383
  Author: Brad Lhotsky <brad@divisionbyzero.net>
  Date : 2024-06-20 13:56:49 +0000

    Prep 5.2 Release 

  Change: cee1e129ded8b27311a44fcf97473919fd749d07
  Author: Brad Lhotsky <brad@divisionbyzero.net>
  Date : 2024-06-20 13:55:50 +0000

    Bumping for 5.1 Release

    * Adds better handling of JunOS firewall logs 

  Change: 75cce74d48812906ab551eb16a4b4c18e0ab7d57
  Author: Brad Lhotsky <brad@divisionbyzero.net>
  Date : 2024-06-20 13:54:08 +0000

    Add more test cases 

  Change: 1216861b44f50e7e338430cbcfe7a14ea691284a
  Author: Brad Lhotsky <brad@divisionbyzero.net>
  Date : 2024-06-20 13:53:20 +0000

    Replace YAML is YAML::XS, MinimumPerl got whacky, rollback to 5.14 manually 

  Change: ad6f3e1f684b67b3ca87d3545cc57db98baa4514
  Author: Brad Lhotsky <brad@divisionbyzero.net>
  Date : 2024-06-20 13:38:26 +0000

    Create releases on GitHub too! 

  Change: b85ae1cd0b82f4038929cc3a5bbbf96fe52601b1
  Author: Brad Lhotsky <brad@divisionbyzero.net>
  Date : 2024-06-20 13:32:49 +0000

    Add version detection for RFC5424 formatted messages

    I mistakenly missed the "VERSION" part of the RFC-5424 format 

  Change: 1286f4d05287a600fbd90dde279ec85cf0909925
  Author: Brad Lhotsky <brad@divisionbyzero.net>
  Date : 2024-06-11 13:43:57 +0000

    Minor fixes and cleanups 

----------------------------------------
version 5.1 at 2024-05-24 18:17:59 +0000
----------------------------------------

  Change: c3b622953845aefa0c29f66c2772113d293ded8e
  Author: Brad Lhotsky <brad@divisionbyzero.net>
  Date : 2024-05-24 11:17:59 +0000

    Bumping for 5.1 Release

    * Adds better handling of JunOS firewall logs 

  Change: 27c68a921a82b3985a4b5c3d8092684883dcea51
  Author: Brad Lhotsky <brad@divisionbyzero.net>
  Date : 2024-05-24 11:12:42 +0000

    Handle JunOS Firewall Logs

    The logs are stamped in a weird manner if they are a part of a
    load-balancing or fail-over pair. Add a test!

    Add testing on Perl 5.38 

  Change: b396a1e1cc8ef8f363dbe44959282114f81613bb
  Author: Brad Lhotsky <brad@divisionbyzero.net>
  Date : 2022-12-09 21:42:46 +0000

    Don't use dzil in the workflow

    * `Dist::Zilla` has a higher Perl requirement than this module so we

    can't use it * Use `Dist::Zilla::Plugin::CPANFile` to create a `cpanfile`
    in the

    distribution * Copy the `cpanfile` back from the build and check in to git
    * Replace `cpanm` with `cpm` so we can run tests in the CI/CD 

  Change: 2d523fb77108bf2bc112c71312387f7fe05e4996
  Author: Brad Lhotsky <brad@divisionbyzero.net>
  Date : 2022-12-09 21:20:10 +0000

    Test on all the Perls!

    Now that the CI/CD pipeline is passing, let's run tests on all the perls! 

  Change: e5c158147e245751adf4f6de7f7e6f3c712c19a7
  Author: Brad Lhotsky <brad@divisionbyzero.net>
  Date : 2022-12-09 21:15:08 +0000

    More tweaks for CI workflows 

  Change: 3f42a6eae7ba94335f0f83d6b314d9a9ebda798c
  Author: Brad Lhotsky <brad@divisionbyzero.net>
  Date : 2022-12-09 21:10:30 +0000

    More issues with the workflow 

  Change: 2a263ca1d74390372cd37eabe314d77cdbe858ca
  Author: Brad Lhotsky <brad@divisionbyzero.net>
  Date : 2022-12-09 21:05:49 +0000

    Chasing issues in the workflow 

  Change: c0cc69e441737af14d22ce04022af69cb09bf625
  Author: Brad Lhotsky <brad@divisionbyzero.net>
  Date : 2022-12-09 20:33:04 +0000

    Install dzil from packages 

  Change: f46aaea8863d94f7afe5fcb39f03ea640bb9370b
  Author: Brad Lhotsky <brad@divisionbyzero.net>
  Date : 2022-12-09 20:25:39 +0000

    Hoping to streamline dzil install 

  Change: 249d3fe9c04483fb5ef8eacc930759c31301ed5e
  Author: Brad Lhotsky <brad@divisionbyzero.net>
  Date : 2022-12-09 20:19:41 +0000

    Add warnings back 

  Change: c87f5c94cd52f94d90ae1a3c728e2ee8bedb2eb4
  Author: Brad Lhotsky <brad@divisionbyzero.net>
  Date : 2022-12-09 20:17:43 +0000

    Update testing workflow to use dzil

    Use `dzil` to run the test suite 

  Change: 242d1ed53499878911ae63ae80feb403921392d9
  Author: Brad Lhotsky <brad@divisionbyzero.net>
  Date : 2022-12-09 20:14:04 +0000

    Add a GitHub Action for Testing

    Attempt to enable GitHub Actions to run the test suite. 

----------------------------------------
version 5.0 at 2022-11-14 04:46:30 +0000
----------------------------------------

  Change: 6ca871f422f19a4374187a3a78e0066db774fd47
  Author: Brad Lhotsky <brad@divisionbyzero.net>
  Date : 2022-11-13 20:46:30 +0000

    Updates for the 5.0 Release

    Breaking Changes ================

    * Shipping with `RFC5424StructuredData` enabled and set to true.

    The biggest effect this could have on users, is the `content` field is now
    stripped of the components of RFC structured data.

    Given:

    ``` <163>Jul 26 15:50:14 ether janus foobar[4291]: [lvl=2] [foo x=1] some
    content [bar x=2] ```

    The old behavior with the defaults would produce the following:

    ``` content => '[lvl=2] [foo x=1] some content [bar x=2]', ```

    As of 5.x, this is changed and will now produce:

    ``` content => 'some content', SDATA => {

    bar => {

    x => 2,

    },

    foo => {,

    x => 1,

    },

    lvl => 2, }, ```

    The intent is this change makes the module even more useful as it defaults
    to parsing structured data correctly according to the RFC. To restore the
    prior functionality, you can disable this feature.

    ``` $Parse::Syslog::Line::RFC5424StructuredData = 0; ```

    Improvements ============

    * Make `JSON::MaybeXS` a requirement, recommend `Cpanel::JSON::XS` * Remove
    all `use JSON` from the code * Split up the k/v regex using `/x` so it's
    more maintainable * Add support for simplistic RFC structured data, ala,
    `[group k=v]` * Add tests for the RFC structured data parsing * Add
    `RFC5424StructuredDataStrict` and tests for strict parsing * Squelch
    warnings in tests and benchmarks * Document environment variables that
    interact with `Parse::Syslog::Line` 

=================================================
Plus 37 releases after 2022-06-21 00:00:00 +0000.
=================================================
