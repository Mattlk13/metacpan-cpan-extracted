#!/usr/bin/perl
# -*-perl-*-

# PDL Configuration options

# You can edit this here or say 'perl Makefile.PL PDLCONF=file'
# or use ~/.perldl.conf

# Note in general "0" means False, "1" means "True" and "undef"
# means "Try if possible (e.g. because the library is found)"
#
# You can also use a string that matches /^y/i to mean True or
# one that matches /^n/i to mean False.  It will be automatically
# converted to 1 or 0 before being loaded into the Config.pm module.
#

%PDL_CONFIG = (
#
# Version of the perldl.conf file.  This should be incremented
# in the units for any PDL visible changes to the file (i.e.,
# the non-comment ones).  Other changes may be indicated by
# the fractional part but are more for informational purposes.
#
        PDL_CONFIG_VERSION => 0.005,
        PDL_BUILD_VERSION  => undef,    # filled in by Makefile.PL

# Decides if the output of attempts to link various function
# during 'perl Makefile.PL' will be hidden when building PDL
# should only be set to 0 for debugging purposes
# see also L<trylink|PDL::Core::Dev/trylink>

        HIDE_TRYLINK => 1,

# you can set machine specific optimizations here the settings will be
# passed to the toplevel Makefile.PL which *should* pass it to any
# recursively invoked ones.  Add -O0 to turn off compiler
# optimization, and -g to produce debugging information that GDB and
# other debuggers can use.

        OPTIMIZE => undef, # '-O0 -g',

# Use posix threading to make use of multiprocessor machines
# undef -> try if possible
# 0 -> don't use

        WITH_POSIX_THREADS => undef,

        POSIX_THREADS_INC  => undef,  # '-I/usr/pthread/include'
        POSIX_THREADS_LIBS => undef,  # '-L/usr/pthread -lpthreadGC2'

        MALLOCDBG => undef,
# {
#                       include => '-I/home/csoelle/tmp',
#                       libs => '-L/home/csoelle/tmp -lmymalloc',
#                       define => << 'EOD',
##define malloc(n) dbgmalloc(n,__FILE__,__LINE__)
##define free(p) dbgfree(p)
#EOD
#                       include => '',
#                       libs => '-lefence',
#                       define => '',
#                     },

#       POGL_WINDOW_TYPE => 'x11',      # use X11+GLX for windows
        POGL_WINDOW_TYPE => 'glut',     # use GLUT for windows

# Whether or not to build the PDL::Minuit module
# false -> don't use
# true -> force use

       WITH_MINUIT => undef,   # Leave it up to PDL to decide

# If MINUIT_LIB is undef a standalone version of Minuit will be compiled
# and PDL::Minuit will link to this library (fortran code can be found
# at Lib/Minuit/minuitlib)
# If you want to try to link directly to the Minuit present
# in the CERN library libpacklib.a, include the full path to the library
# here, e.g.,  MINUIT_LIB => '/usr/local/lib/libpacklib.a',

       MINUIT_LIB => undef,

# Link flags for the GSL libs, e.g. '-L/usr/local/lib -lgsl -lm'
        GSL_LIBS => undef, # use gsl-config

# Location to find GSL includes:
        GSL_INC => undef, # use gsl-config

# Whether or not to build the PDL::IO::HDF module
# false -> don't use
# true -> force use

        WITH_HDF => undef,     # Leave it up to PDL to decide
        HDF_LIBS => undef,
        HDF_INC => undef,

# Whether or not to build the PDL::IO::GD module
# false -> don't use
# true -> force use

        WITH_GD => undef,      # Leave it up to PDL to decide
        GD_LIBS => undef,
        GD_INC => undef,
        GD_DEFINE => '',       # If anything needs to be defined.

# N.B. These are array ref values and *not* strings
#
#       PROJ_LIBS => [ 'C:/_32/msys/1.0/local/lib'],
#       PROJ_INC => [ 'C:/_32/msys/1.0/local/include'],

# Quiet Astro::FITS::Header warnings for PDL build process by default
# Eventually would be better to set undef by default, and have the
# Makefile.PL change the value after it has been found missing once.
# TBD after PDL 2.4.3 release...
#
        FITS_LEGACY => 1,

# Whether or not to enable the new Devel::REPL based PDL shell
# Given the large numbers of dependencies for Devel::REPL, we
# don't want to have that as a required dependency for PDL.
# Still, if it is there already, we could use it...
#
# false -> don't install pdl2 support
# true -> force pdl2 install (default)

        WITH_DEVEL_REPL => 1,

# Set this to make the pdldoc command ignore PDL::AutoLoader
# routines (*.pdl files in your @PDLLIB path).  While most
# users will want the new behavior, the performance impact
# could be noticable.  Setting this to 1 will turn off the
# new feature.
#
        PDLDOC_IGNORE_AUTOLOADER => 0,
);

1; # Return OK status on 'require'
