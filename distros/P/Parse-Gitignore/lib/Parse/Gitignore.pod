

=encoding UTF-8

=head1 NAME

Parse::Gitignore - parse .gitignore files

=head1 SYNOPSIS

    


produces output

    

(This example is included as L<F<synopsis.pl>|https://fastapi.metacpan.org/source/BKB/Parse-Gitignore-0.04/examples/synopsis.pl> in the distribution.)


=head1 VERSION

This documents Parse::Gitignore version 0.04
corresponding to git commit L<eef29c685b26d8cd9b28ff74e5e2388e751fd23e|https://github.com/benkasminbullock/parse-gitignore/commit/eef29c685b26d8cd9b28ff74e5e2388e751fd23e> released on Mon Oct 9 14:00:13 2017 +0900.

=head1 DESCRIPTION

Parse a .gitignore file and check whether a file matches it.

=head1 METHODS

=head2 new

    my $pg = Parse::Gitignore->new ('./.gitignore');

=head2 ignored

    if ($pg->ignored ('./Makefile')) {
	print "Makefile is ignored.\n";
    }

Check whether a file matches a .gitignore.

=head2 read_gitignore

    $pg->read_gitignore ('.gitignore');

Read a F<.gitignore> file. You can read as many as you like and they
are accumulated.

=head2 excludesfile

    $pg->excludesfile ('/home/user/.gitignore');

Read an excludesfile which is applied to all directories where .git is
found.

=head1 DEPENDENCIES

=over

=item L<Path::Tiny>

=back

=head1 HISTORY

I wrote this because I wanted to have a way to ignore generated files
for a desktop file search application.


=head1 AUTHOR

Ben Bullock, <bkb@cpan.org>

=head1 COPYRIGHT & LICENCE

This package and associated files are copyright (C) 
2016-2017
Ben Bullock.

You can use, copy, modify and redistribute this package and associated
files under the Perl Artistic Licence or the GNU General Public
Licence.



