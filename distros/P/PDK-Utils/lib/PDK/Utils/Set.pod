=pod

=encoding UTF-8

=head1 NAME

PDK::Utils::Set - A module for handling sets of numeric ranges

=head1 VERSION

Version 1.0

=head1 SYNOPSIS

    use PDK::Utils::Set;

    my $set = PDK::Utils::Set->new(mins => [1, 5], maxs => [3, 7]);

    # Add a range to the set
    $set->addToSet(8, 10);

    # Merge another set
    my $set2 = PDK::Utils::Set->new(mins => [6], maxs => [9]);
    $set->mergeToSet($set2);

    # Get the length of the set
    my $length = $set->length;

    # Output the contents of the set
    $set->dump;

=head1 ATTRIBUTES

=head2 mins

Type: ArrayRef[Int]

Description: An array of minimum values.

=head2 maxs

Type: ArrayRef[Int]

Description: An array of maximum values.

=head1 METHODS

=head2 BUILDARGS

Processes constructor parameters to construct object parameters based on different input situations.

=head2 BUILD

Initializes the object and validates the attributes in the constructor.

=head2 length

Returns the length of the minimum and maximum values.

=head2 min

Returns the first element of the minimum value array.

=head2 max

Returns the last element of the maximum value array.

=head2 dump

Outputs the pairs of minimum and maximum values.

=head2 addToSet($MIN, $MAX)

Adds the minimum and maximum values to the set.

=head2 mergeToSet($setObj)

Merges another set into the current set.

=head2 compare($setObj)

Compares the relationship between two sets.

=head2 isEqual($setObj)

Checks if two sets are equal.

=head2 notEqual($setObj)

Checks if two sets are not equal.

=head2 isContain($setObj)

Checks if the current set contains another set.

=head2 isBelong($setObj)

Checks if the current set belongs to another set.

=head2 interSet($setObj)

Calculates the intersection between the current set and another set.

=head1 AUTHOR

WENWU YAN <968828@gmail.com>

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2024 WENWU YAN. All rights reserved.

This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself.

=cut
