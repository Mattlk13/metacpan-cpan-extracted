=pod

=encoding UTF-8

=head1 NAME

PDK::Utils::Cache - A simple cache implementation

=head1 VERSION

Version 1.0

=head1 SYNOPSIS

    use PDK::Utils::Cache;

    my $cache = PDK::Utils::Cache->new();

    # Set a cache value
    $cache->set('user', 'name', 'Alice');

    # Get a cache value
    my $name = $cache->get('user', 'name');

    # Clear a specific cache entry
    $cache->clear('user', 'name');

    # Clear the entire cache
    $cache->clear();

=head1 ATTRIBUTES

=head2 cache

Type: HashRef[Ref]

Description: A hash reference used to store cache data.

=head1 METHODS

=head2 get(@keys)

Retrieves a value from the cache.

Parameters:

=over 4

=item * C<@keys> - One or more keys representing the path in the cache.

=back

Return value:

The found value or C<undef> (if not found).

=head2 set(@keys, $value)

Sets a value in the cache.

Parameters:

=over 4

=item * C<@keys> - One or more keys representing the path in the cache.

=item * C<$value> - The value to be stored.

=back

Throws:

An exception if insufficient parameters are provided.

=head2 clear(@keys)

Clears the entire cache or a specific key.

Parameters:

=over 4

=item * C<@keys> - (Optional) The specific path to clear.

=back

Note:

If no keys are provided, the entire cache is cleared.

=head2 locate(@keys)

Locates a specific node in the cache.

Parameters:

=over 4

=item * C<@keys> - A sequence of keys representing the path in the cache.

=back

Return value:

The found reference or C<undef> (if the path doesn't exist).

=head1 AUTHOR

WENWU YAN <968828@gmail.com>

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2024 WENWU YAN. All rights reserved.

This library is free software; you can redistribute it and/or modify it under the same terms as Perl itself.

=cut