NAME
    Perinci::CmdLine::Call - "Call" a Perinci::CmdLine-based script

VERSION
    This document describes version 0.060 of Perinci::CmdLine::Call (from
    Perl distribution Perinci-CmdLine-Call), released on 2023-05-22.

SYNOPSIS
     use Perinci::CmdLine::Call qw(call_cli_script);

     # returns an enveloped response
     my $res = call_cli_script(
         script => "lcpan",
         argv   => [qw/deps -R Text::ANSI::Util/],
     );

     # sample result:
     # [200, "OK", [
     #     {author=>"PERLANCAR", module=>"Text::WideChar::Util", version=>"0.10"},
     #     {author=>"NEZUMI"   , module=>"  Unicode::GCString" , version=>"0"},
     #     {author=>"NEZUMI"   , module=>"    MIME::Charset"   , version=>"v1.6.2"},
     # ]]

DESCRIPTION
FUNCTIONS
  call_cli_script
    Usage:

     call_cli_script(%args) -> [$status_code, $reason, $payload, \%result_meta]

    "Call" a Perinci::CmdLine-based script.

    CLI scripts which use "Perinci::CmdLine" module family (e.g.
    "Perinci::CmdLine::Lite" or "Perinci::CmdLine::Classic") have some
    common features, e.g. support JSON output.

    This routine provides a convenience way to get a data structure from
    running a CLI command. It basically just calls the script with "--json"
    and "--no-naked-res" then decodes the JSON result so you get a data
    structure directly. Will return error 599 if output is not valid JSON.

    Other features might be added in the future, e.g. retry, custom
    configuration file, etc.

    This function is not exported by default, but exportable.

    Arguments ('*' denotes required arguments):

    *   argv => *array[str]* (default: [])

        (No description)

    *   script* => *str*

        (No description)

    Returns an enveloped result (an array).

    First element ($status_code) is an integer containing HTTP-like status
    code (200 means OK, 4xx caller error, 5xx function error). Second
    element ($reason) is a string containing error message, or something
    like "OK" if status is 200. Third element ($payload) is the actual
    result, but usually not present when enveloped result is an error
    response ($status_code is not 2xx). Fourth element (%result_meta) is
    called result metadata and is optional, a hash that contains extra
    information, much like how HTTP response headers provide additional
    metadata.

    Return value: (any)

HOMEPAGE
    Please visit the project's homepage at
    <https://metacpan.org/release/Perinci-CmdLine-Call>.

SOURCE
    Source repository is at
    <https://github.com/perlancar/perl-Perinci-CmdLine-Call>.

SEE ALSO
    Perinci::CmdLine, Perinci::CmdLine::Lite, Perinci::CmdLine::Classic

    Rinci

AUTHOR
    perlancar <perlancar@cpan.org>

CONTRIBUTING
    To contribute, you can send patches by email/via RT, or send pull
    requests on GitHub.

    Most of the time, you don't need to build the distribution yourself. You
    can simply modify the code, then test via:

     % prove -l

    If you want to build the distribution (e.g. to try to install it locally
    on your system), you can install Dist::Zilla,
    Dist::Zilla::PluginBundle::Author::PERLANCAR,
    Pod::Weaver::PluginBundle::Author::PERLANCAR, and sometimes one or two
    other Dist::Zilla- and/or Pod::Weaver plugins. Any additional steps
    required beyond that are considered a bug and can be reported to me.

COPYRIGHT AND LICENSE
    This software is copyright (c) 2023, 2016, 2015 by perlancar
    <perlancar@cpan.org>.

    This is free software; you can redistribute it and/or modify it under
    the same terms as the Perl 5 programming language system itself.

BUGS
    Please report any bugs or feature requests on the bugtracker website
    <https://rt.cpan.org/Public/Dist/Display.html?Name=Perinci-CmdLine-Call>

    When submitting a bug or request, please include a test-file or a patch
    to an existing test-file that illustrates the bug or desired feature.

