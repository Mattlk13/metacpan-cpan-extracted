2.1.8  12.01.2018
           - update installed ppport.h to 3.37 for bleadperl compability
           - XS for CPP::panda::lib::CalbackDispatcher
2.1.7  11.05.2017
           - move cast.h, refcnt.h to CPP::panda::lib, require CPP::panda::lib
           - add PXS_TRY, sv2string, sv2string_view from Panda::Lib
2.1.6  13.03.2017
           - compile with all warnings enabled, fix all warnings
           - fix threaded perl build
2.1.5  07.02.2017
           - bugfix with output typemap with panda::shared_ptr in intrusive mode pointers when they are holding NULL values 
           - remove c++11 checks as c++11 is required now
2.1.4  30.01.2017
           - removed macros likely/unlikely: moved to Panda::Lib's inline functions panda::likely/unlikely()
2.1.3  29.01.2017
           - added call_sub_void, call_sub_scalar, call_sub_list, call_sub_av,
             call_method_void, call_method_scalar, call_method_list, call_method_av
           - move to C++11 (removed panda/traits.h, THREAD_LOCAL, INLINE)
           - added <algorithm_perlsafe> and include it in xs.h to save c++11 compilations in presence of perl's <seed> macro.
2.1.2  12.01.2017
           - added xs::register_package
           - added xs::inherit_package
2.1.1  25.05.2015
           - Changed behaviour of on_retain/on_release callbacks in panda::RefCounted - they are now called AFTER inc/dec of refcnt,
             but before possible object deletion in release().
           - move POD to separate files
2.1.0  10.03.2015
           - Panda::XS's T_OEXT and T_OPTR now always adds destroy code (delete/release/etc) even if DESTROY function is not empty.
             To prevent this, set 'prevent_default_destroy' param for typemap class.
           - docs fixes
2.0.0  08.03.2015
           - base typemaps has been completely refactored and became much more powerful
           - typemap classes T_OEXT_SHARED and T_OPTR_SHARED have been removed. Shared pointers are now detected automatically
           - typemap classes T_OEXT_REFCNT and T_OPTR_REFCNT have been removed. Use 'refcnt' param: T_OEXT(refcnt) / T_OPTR(refcnt)
           - Transparent wrappers support
           - delete THIS / delete THIS_wrapper are now inserted automatically, no matter if user has non-empty DESTROY code or not.
           - fixed xs::my_perl while thread creation/destruction
           - added xs::XSBackref class, and 'backref' typemap parameter for OPTR & OEXT to implement perl real object backreferencing
             to preserve original data when returning stored C++ object back to perl.
           - better svdup callback. Automatically changes backrefs. Called with wrapper objects if wrappers in use.
           - fix #include <memory> for C++11
           - added <panda/def.h> (moved from panda::lib)
           - added <panda/traits.h> with some traits from C++11 (just a few for now)
           - added <panda/cast.h> which implements dyn_cast<>() doing 10x-20x faster than dynamic_cast<>()
           - base typemap now uses panda::dyn_cast to improve performance
           - panda::RefCounted now supports hooks via on_retain(), on_release() overriding
           - added tests for everything above
1.3.1  15.02.2015
           - bugfix for mTHX
1.3.0  09.02.2015
           - added xs::my_perl static per-thread variable which helps to deal with static init on threaded perls
             additionally, if you don't care about performance on threaded perls, you can do "using xs::my_perl" and remove pTHX
             from your function's definitions.
           - added mTHX/mTHXa C++ class helpers to store my_perl inside class' objects
1.2.0  08.02.2015
           - added on_svdup T_OEXT typemap class parameter to help supporting threaded perls.
           - added SVPayloadMarker<T>::marker, SVPayloadMarker<T>::get(), so that T_OEXT INPUT/OUTPUT performs slightly faster
           - doc changes
1.1.2  04.02.2015
           - fix C++ names clash on MacOS (do_open/do_close)
1.1.1  03.01.2015
           - bump version to require win32-fixed Panda::Install
1.1.0  31.01.2015
           - added XS_HV_ITER, XS_HV_ITER_NU, XS_AV_ITER, XS_AV_ITER_NE, XS_AV_ITER_NU marcos.
1.0.1  30.01.2015
           - PERL_NO_GET_CONTEXT requires explicit interp passing. fixed threaded builds
1.0.0  30.01.2015
           - make RefCounted a class again.
           - consider current version a stable release
0.1.9  30.01.2015
           - Fix working with C++ headers (marco vs functions conflicts) by defining NO_XSLOCKS and PERLIO_NOT_STDIO
             before including perl headers. All descendant modules must include <xs/xs.h> instead of XSUB.h, etc by hand.
           - ppport.h updated
           - internal tests compilation change
0.1.8  22.01.2015
           - compiler warnings fix
0.1.7  31.12.2014
           - added any_payload_attach, any_payload_detach, any_payload_exists, any_payload
           - change RefCounted from class to struct.
           - make IO & OIO typemaps better (now support GLOBREFS with IO slot as well)
0.1.6	 06.11.2014
           - added rv_payload_attach, rv_payload_detach, rv_payload_exists, rv_payload
0.1.5    31.10.2014
           - require perl 5.18.0 (earlier perls dont have required API)
           - added shared_ptr, Refcounted and docs
           - added typemaps for panda::shared_ptr and std::shared_ptr + tests
           - refactored all typemaps
0.1.4    10.10.2014
           - added hv_fetchhek, hv_storehek, hv_deletehek
0.1.3    10.10.2014
           - allow only RV to undef for obj2hv/obj2av, as perls < 5.20 don't allow to upgrade strings
0.1.2    09.10.2014
           - added support for HV* CLASS in object constructors (output typemaps)
0.1.1    08.10.2014
           - docs fixes
0.1.0    04.10.2014
           - first release
