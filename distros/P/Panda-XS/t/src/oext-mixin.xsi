MODULE = Panda::XS                PACKAGE = Panda::XS::Test::MixBase
PROTOTYPES: DISABLE

MixBase* MixBase::new (int arg) {
    if (arg) RETVAL = new MixBase(arg);
    else RETVAL = NULL;
}

int MixBase::val (SV* newval = NULL) {
    if (newval) THIS->val = SvIV(newval);
    RETVAL = THIS->val;
}

void MixBase::set_from (MixBase* other) {
    if (other) THIS->val = other->val;
}

void MixBase::DESTROY () {}

int CLONE_SKIP (SV* CLASS) { PERL_UNUSED_VAR(CLASS); RETVAL = 1; }


MODULE = Panda::XS                PACKAGE = Panda::XS::Test::MixPluginA
PROTOTYPES: DISABLE

MixPluginA* MixPluginA::new (...) {
    self = xs::call_next_method(aTHX_ cv, &ST(0), items);
    if (SvOK(self)) RETVAL = new MixPluginA();
    else RETVAL = NULL;
}

int MixPluginA::val_a (SV* newval = NULL) {
    if (newval) THIS->val = SvIV(newval);
    RETVAL = THIS->val;
}

void MixPluginA::set_from (MixPluginA* other) {
    xs::call_next_method(aTHX_ cv, &ST(0), items, G_DISCARD);
    if (other) THIS->val = other->val;
}

void MixPluginA::DESTROY () {
    xs::call_next_method(aTHX_ cv, &ST(0), items, G_DISCARD);
}



MODULE = Panda::XS                PACKAGE = Panda::XS::Test::MixPluginB
PROTOTYPES: DISABLE

MixPluginB* MixPluginB::new (...) {
    self = xs::call_next_method(aTHX_ cv, &ST(0), items);
    if (SvOK(self)) RETVAL = new MixPluginB();
    else RETVAL = NULL;
}

int MixPluginB::val_b (SV* newval = NULL) {
    if (newval) THIS->val = SvIV(newval);
    RETVAL = THIS->val;
}

void MixPluginB::set_from (MixPluginB* other) {
    xs::call_next_method(aTHX_ cv, &ST(0), items, G_DISCARD);
    if (other) THIS->val = other->val;
}

void MixPluginB::DESTROY () {
    xs::call_next_method(aTHX_ cv, &ST(0), items, G_DISCARD);
}