# This file was automatically generated by Dist::Zilla::Plugin::MakeMaker v6.030.
use strict;
use warnings;

use 5.006;

use ExtUtils::MakeMaker;

my %WriteMakefileArgs = (
  "ABSTRACT" => "Perl extension to serve HTTP requests in POE.",
  "AUTHOR" => "Apocalypse <APOCAL\@cpan.org>",
  "CONFIGURE_REQUIRES" => {
    "ExtUtils::MakeMaker" => 0
  },
  "DISTNAME" => "POE-Component-Server-SimpleHTTP",
  "LICENSE" => "perl",
  "MIN_PERL_VERSION" => "5.006",
  "NAME" => "POE::Component::Server::SimpleHTTP",
  "PREREQ_PM" => {
    "Carp" => 0,
    "HTTP::Date" => 0,
    "HTTP::Request" => 0,
    "HTTP::Response" => 0,
    "Moose" => "0.9",
    "MooseX::POE" => "0.205",
    "POE" => "1.0000",
    "Socket" => 0,
    "Storable" => 0,
    "Sys::Hostname" => 0
  },
  "TEST_REQUIRES" => {
    "ExtUtils::MakeMaker" => "6.59",
    "File::Spec" => 0,
    "IO::Handle" => 0,
    "IPC::Open3" => 0,
    "POE::Filter::HTTP::Parser" => "1.06",
    "Test::More" => "0.47",
    "Test::POE::Client::TCP" => "1.24"
  },
  "VERSION" => "2.30",
  "test" => {
    "TESTS" => "t/*.t"
  }
);


my %FallbackPrereqs = (
  "Carp" => 0,
  "ExtUtils::MakeMaker" => "6.59",
  "File::Spec" => 0,
  "HTTP::Date" => 0,
  "HTTP::Request" => 0,
  "HTTP::Response" => 0,
  "IO::Handle" => 0,
  "IPC::Open3" => 0,
  "Moose" => "0.9",
  "MooseX::POE" => "0.205",
  "POE" => "1.0000",
  "POE::Filter::HTTP::Parser" => "1.06",
  "Socket" => 0,
  "Storable" => 0,
  "Sys::Hostname" => 0,
  "Test::More" => "0.47",
  "Test::POE::Client::TCP" => "1.24"
);

# inserted by Dist::Zilla::Plugin::DynamicPrereqs 0.040
test_requires('POE::Component::Client::HTTP', '0.82') if prompt_default_no('Do you want to test streaming ( requires POE::Component::Client::HTTP )');
requires('POE::Component::SSLify', '0.04') if prompt_default_no('Do you want SSL support ( requires POE::Component::SSLify )');


unless ( eval { ExtUtils::MakeMaker->VERSION(6.63_03) } ) {
  delete $WriteMakefileArgs{TEST_REQUIRES};
  delete $WriteMakefileArgs{BUILD_REQUIRES};
  $WriteMakefileArgs{PREREQ_PM} = \%FallbackPrereqs;
}

delete $WriteMakefileArgs{CONFIGURE_REQUIRES}
  unless eval { ExtUtils::MakeMaker->VERSION(6.52) };

WriteMakefile(%WriteMakefileArgs);

# inserted by Dist::Zilla::Plugin::DynamicPrereqs 0.040
sub _add_prereq {
  my ($mm_key, $module, $version_or_range) = @_;
  $version_or_range ||= 0;
  warn "$module already exists in $mm_key (at version $WriteMakefileArgs{$mm_key}{$module}) -- need to do a sane metamerge!"
    if exists $WriteMakefileArgs{$mm_key}{$module}
      and $WriteMakefileArgs{$mm_key}{$module} ne '0'
      and $WriteMakefileArgs{$mm_key}{$module} ne $version_or_range;
  warn "$module already exists in FallbackPrereqs (at version $FallbackPrereqs{$module}) -- need to do a sane metamerge!"
    if exists $FallbackPrereqs{$module} and $FallbackPrereqs{$module} ne '0'
        and $FallbackPrereqs{$module} ne $version_or_range;
  $WriteMakefileArgs{$mm_key}{$module} = $FallbackPrereqs{$module} = $version_or_range;
  return;
}

sub prompt_default_no {
  prompt("$_[0] [y/N]", 'N') =~ /^y/i ? 1 :0;
}

sub requires { goto &runtime_requires }

sub runtime_requires {
  my ($module, $version_or_range) = @_;
  _add_prereq(PREREQ_PM => $module, $version_or_range);
}

sub test_requires {
  my ($module, $version_or_range) = @_;
  _add_prereq(TEST_REQUIRES => $module, $version_or_range);
}
