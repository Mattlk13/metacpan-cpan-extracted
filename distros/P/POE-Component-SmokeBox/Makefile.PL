# This file was automatically generated by Dist::Zilla::Plugin::MakeMaker v6.030.
use strict;
use warnings;

use 5.006;

use ExtUtils::MakeMaker;

my %WriteMakefileArgs = (
  "ABSTRACT" => "POE enabled CPAN smoke testing with added value.",
  "AUTHOR" => "Chris Williams <chris\@bingosnet.co.uk>",
  "CONFIGURE_REQUIRES" => {
    "ExtUtils::MakeMaker" => 0
  },
  "DISTNAME" => "POE-Component-SmokeBox",
  "LICENSE" => "perl",
  "MIN_PERL_VERSION" => "5.006",
  "NAME" => "POE::Component::SmokeBox",
  "PREREQ_PM" => {
    "Digest::SHA" => 0,
    "Env::Sanctify" => "0.04",
    "File::Path" => 0,
    "File::Spec" => 0,
    "File::Temp" => 0,
    "Module::Pluggable" => 0,
    "Object::Accessor" => 0,
    "POE" => "1.367",
    "Params::Check" => 0,
    "Regexp::Assemble" => "0.34",
    "SDBM_File" => 0,
    "String::Perl::Warnings" => "0.04"
  },
  "TEST_REQUIRES" => {
    "File::Spec" => 0,
    "IO::Handle" => 0,
    "IPC::Open3" => 0,
    "Test::Harness" => "3.14",
    "Test::More" => "0.47"
  },
  "VERSION" => "0.58",
  "test" => {
    "TESTS" => "t/*.t t/backend/*.t t/jobqueue/*.t t/smokebox/*.t"
  }
);


my %FallbackPrereqs = (
  "Digest::SHA" => 0,
  "Env::Sanctify" => "0.04",
  "File::Path" => 0,
  "File::Spec" => 0,
  "File::Temp" => 0,
  "IO::Handle" => 0,
  "IPC::Open3" => 0,
  "Module::Pluggable" => 0,
  "Object::Accessor" => 0,
  "POE" => "1.367",
  "Params::Check" => 0,
  "Regexp::Assemble" => "0.34",
  "SDBM_File" => 0,
  "String::Perl::Warnings" => "0.04",
  "Test::Harness" => "3.14",
  "Test::More" => "0.47"
);

# inserted by Dist::Zilla::Plugin::DynamicPrereqs 0.040
if (is_os('MSWin32')) {
requires( 'POE::Wheel::Run::Win32' => 0.10 );
requires( 'Win32API::File' => 0 );
}



unless ( eval { ExtUtils::MakeMaker->VERSION(6.63_03) } ) {
  delete $WriteMakefileArgs{TEST_REQUIRES};
  delete $WriteMakefileArgs{BUILD_REQUIRES};
  $WriteMakefileArgs{PREREQ_PM} = \%FallbackPrereqs;
}

delete $WriteMakefileArgs{CONFIGURE_REQUIRES}
  unless eval { ExtUtils::MakeMaker->VERSION(6.52) };

WriteMakefile(%WriteMakefileArgs);

# inserted by Dist::Zilla::Plugin::DynamicPrereqs 0.040
sub _add_prereq {
  my ($mm_key, $module, $version_or_range) = @_;
  $version_or_range ||= 0;
  warn "$module already exists in $mm_key (at version $WriteMakefileArgs{$mm_key}{$module}) -- need to do a sane metamerge!"
    if exists $WriteMakefileArgs{$mm_key}{$module}
      and $WriteMakefileArgs{$mm_key}{$module} ne '0'
      and $WriteMakefileArgs{$mm_key}{$module} ne $version_or_range;
  warn "$module already exists in FallbackPrereqs (at version $FallbackPrereqs{$module}) -- need to do a sane metamerge!"
    if exists $FallbackPrereqs{$module} and $FallbackPrereqs{$module} ne '0'
        and $FallbackPrereqs{$module} ne $version_or_range;
  $WriteMakefileArgs{$mm_key}{$module} = $FallbackPrereqs{$module} = $version_or_range;
  return;
}

sub is_os {
  foreach my $os (@_) {
    return 1 if $os eq $^O;
  }
  return 0;
}

sub requires { goto &runtime_requires }

sub runtime_requires {
  my ($module, $version_or_range) = @_;
  _add_prereq(PREREQ_PM => $module, $version_or_range);
}
